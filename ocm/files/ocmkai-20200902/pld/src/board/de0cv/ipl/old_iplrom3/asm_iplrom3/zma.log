Z80 Macro Assembler ZMA v1.0.9
=====================================================
Programmed by t.hara

<< code >>
[	ORG 0X0]
	code address: 0x000000

[BEGIN :]
	label address: 0x000000

[	DI] Z80:5cyc, R800:2cyc
000000: f3

[	JP SKIP_MESSAGE] Z80:11cyc, R800:5cyc
000001: c3 a4 00

[HEADER :]
	label address: 0x000004

[	INCLUDE ".//message.asm"] begin
[HEAD :]
	label address: 0x000004

[	DS " Initial Program Loader for OneChipMSX. "]
000004: 20 49 6e 69 74 69 61 6c
00000c: 20 50 72 6f 67 72 61 6d
000014: 20 4c 6f 61 64 65 72 20
00001c: 66 6f 72 20 4f 6e 65 43
000024: 68 69 70 4d 53 58 2e 20

[	DS "Load ROMs from MMC/SD/SDHC-card or EPCS."]
00002c: 4c 6f 61 64 20 52 4f 4d
000034: 73 20 66 72 6f 6d 20 4d
00003c: 4d 43 2f 53 44 2f 53 44
000044: 48 43 2d 63 61 72 64 20
00004c: 6f 72 20 45 50 43 53 2e

[	DS "Revision 3.00 without data compression. "]
000054: 52 65 76 69 73 69 6f 6e
00005c: 20 33 2e 30 30 20 77 69
000064: 74 68 6f 75 74 20 64 61
00006c: 74 61 20 63 6f 6d 70 72
000074: 65 73 73 69 6f 6e 2e 20

[	DS "Vers. for OCM-Kai Build date 2020.01.26"]
00007c: 56 65 72 73 2e 20 66 6f
000084: 72 20 4f 43 4d 2d 4b 61
00008c: 69 20 42 75 69 6c 64 20
000094: 64 61 74 65 20 32 30 32
00009c: 30 2e 30 31 2e 32 36

[	DB 0]
0000a3: 00

[	INCLUDE ".//message.asm"] end

[SKIP_MESSAGE :]
	label address: 0x0000a4

[	LD SP , - 1] Z80:11cyc, R800:3cyc
0000a4: 31 ff ff

[	LD HL , DAT_99] Z80:11cyc, R800:3cyc
0000a7: 21 ea 00

[	LD BC , 0X0E99] Z80:11cyc, R800:3cyc
0000aa: 01 99 0e

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
0000ad: ed b3

[	LD BC , 0X209A] Z80:11cyc, R800:3cyc
0000af: 01 9a 20

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
0000b2: ed b3

[	XOR A , A] Z80:5cyc, R800:1cyc
0000b4: af

[	OUT [ CMDP ] , A] Z80:12cyc, R800:10 or 9cyc
0000b5: d3 99

[	LD A , 0X40 + 0] Z80:8cyc, R800:2cyc
0000b7: 3e 40

[	OUT [ CMDP ] , A] Z80:12cyc, R800:10 or 9cyc
0000b9: d3 99

[	LD HL , CHCARS] Z80:11cyc, R800:3cyc
0000bb: 21 18 01

[	LD BC , CHCARS_END - CHCARS] Z80:11cyc, R800:3cyc
0000be: 01 00 03

[COPYCHCARS :]
	label address: 0x0000c1

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0000c1: 7e

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
0000c2: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
0000c4: 23

[	DEC BC] Z80:7cyc, R800:1cyc
0000c5: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
0000c6: 78

[	OR A , C] Z80:5cyc, R800:1cyc
0000c7: b1

[	JR NZ , COPYCHCARS] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0000c8: 20 f7

[	LD BC , 0X4000 - ( CHCARS_END - CHCARS )] Z80:11cyc, R800:3cyc
0000ca: 01 00 3d

[CLEAR1 :]
	label address: 0x0000cd

[	XOR A , A] Z80:5cyc, R800:1cyc
0000cd: af

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
0000ce: d3 98

[	DEC BC] Z80:7cyc, R800:1cyc
0000d0: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
0000d1: 78

[	OR A , C] Z80:5cyc, R800:1cyc
0000d2: b1

[	JR NZ , CLEAR1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0000d3: 20 f8

[	XOR A , A] Z80:5cyc, R800:1cyc
0000d5: af

[	OUT [ CMDP ] , A] Z80:12cyc, R800:10 or 9cyc
0000d6: d3 99

[	LD A , 0X48 + 0] Z80:8cyc, R800:2cyc
0000d8: 3e 48

[	OUT [ CMDP ] , A] Z80:12cyc, R800:10 or 9cyc
0000da: d3 99

[	LD HL , HEADER] Z80:11cyc, R800:3cyc
0000dc: 21 04 00

[PR_STR :]
	label address: 0x0000df

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0000df: 7e

[	SUB A , 0X20] Z80:8cyc, R800:2cyc
0000e0: d6 20

[	JP C , START] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0000e2: da 18 04

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
0000e5: d3 98

[	INC HL] Z80:7cyc, R800:1cyc
0000e7: 23

[	JR PR_STR] Z80:13cyc, R800:3cyc
0000e8: 18 f5

[DAT_99 :]
	label address: 0x0000ea

[	DB 0X00 , 0X80]
0000ea: 00 80

[	DB 0X50 , 0X81]
0000ec: 50 81

[	DB 0X02 , 0X82]
0000ee: 02 82

[	DB 0X00 , 0X84]
0000f0: 00 84

[	DB 0XF4 , 0X87]
0000f2: f4 87

[	DB 0X00 , 0X89]
0000f4: 00 89

[	DB 0X00 , 0X90]
0000f6: 00 90

[DAT_9A :]
	label address: 0x0000f8

[	DB 0X00 , 0X00]
0000f8: 00 00

[	DB 0X00 , 0X00]
0000fa: 00 00

[	DB 0X11 , 0X06]
0000fc: 11 06

[	DB 0X33 , 0X07]
0000fe: 33 07

[	DB 0X17 , 0X01]
000100: 17 01

[	DB 0X27 , 0X03]
000102: 27 03

[	DB 0X51 , 0X01]
000104: 51 01

[	DB 0X27 , 0X06]
000106: 27 06

[	DB 0X71 , 0X01]
000108: 71 01

[	DB 0X73 , 0X03]
00010a: 73 03

[	DB 0X61 , 0X06]
00010c: 61 06

[	DB 0X64 , 0X06]
00010e: 64 06

[	DB 0X11 , 0X04]
000110: 11 04

[	DB 0X65 , 0X02]
000112: 65 02

[	DB 0X55 , 0X05]
000114: 55 05

[	DB 0X77 , 0X07]
000116: 77 07

[CHCARS :]
	label address: 0x000118

[	INCLUDE ".//ZG6x8_L.asm"] begin
[ZG_68 :]
	label address: 0x000118

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
000118: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X20 , 0X20 , 0X20 , 0X20 , 0X00 , 0X20 , 0X00]
000120: 00 20 20 20 20 00 20 00

[	DB 0X00 , 0X48 , 0X48 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
000128: 00 48 48 00 00 00 00 00

[	DB 0X00 , 0X00 , 0X50 , 0XF8 , 0X50 , 0XF8 , 0X50 , 0X00]
000130: 00 00 50 f8 50 f8 50 00

[	DB 0X00 , 0X20 , 0XF8 , 0XA0 , 0XF8 , 0X28 , 0XF8 , 0X20]
000138: 00 20 f8 a0 f8 28 f8 20

[	DB 0X00 , 0X00 , 0XC8 , 0XD0 , 0X20 , 0X58 , 0X98 , 0X00]
000140: 00 00 c8 d0 20 58 98 00

[	DB 0X00 , 0X40 , 0XA0 , 0X40 , 0XA8 , 0X90 , 0X68 , 0X00]
000148: 00 40 a0 40 a8 90 68 00

[	DB 0X00 , 0X20 , 0X40 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
000150: 00 20 40 00 00 00 00 00

[	DB 0X00 , 0X08 , 0X10 , 0X10 , 0X10 , 0X10 , 0X08 , 0X00]
000158: 00 08 10 10 10 10 08 00

[	DB 0X00 , 0X40 , 0X20 , 0X20 , 0X20 , 0X20 , 0X40 , 0X00]
000160: 00 40 20 20 20 20 40 00

[	DB 0X00 , 0X00 , 0X50 , 0X20 , 0XF8 , 0X20 , 0X50 , 0X00]
000168: 00 00 50 20 f8 20 50 00

[	DB 0X00 , 0X00 , 0X20 , 0X20 , 0XF8 , 0X20 , 0X20 , 0X00]
000170: 00 00 20 20 f8 20 20 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X20 , 0X20 , 0X40]
000178: 00 00 00 00 00 20 20 40

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0XF8 , 0X00 , 0X00 , 0X00]
000180: 00 00 00 00 f8 00 00 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X60 , 0X60 , 0X00]
000188: 00 00 00 00 00 60 60 00

[	DB 0X00 , 0X00 , 0X08 , 0X10 , 0X20 , 0X40 , 0X80 , 0X00]
000190: 00 00 08 10 20 40 80 00

[	DB 0X00 , 0X70 , 0X98 , 0XA8 , 0XA8 , 0XC8 , 0X70 , 0X00]
000198: 00 70 98 a8 a8 c8 70 00

[	DB 0X00 , 0X20 , 0X60 , 0X20 , 0X20 , 0X20 , 0XF8 , 0X00]
0001a0: 00 20 60 20 20 20 f8 00

[	DB 0X00 , 0X70 , 0X88 , 0X08 , 0X70 , 0X80 , 0XF8 , 0X00]
0001a8: 00 70 88 08 70 80 f8 00

[	DB 0X00 , 0X70 , 0X88 , 0X30 , 0X08 , 0X88 , 0X70 , 0X00]
0001b0: 00 70 88 30 08 88 70 00

[	DB 0X00 , 0X10 , 0X30 , 0X50 , 0X90 , 0XF8 , 0X10 , 0X00]
0001b8: 00 10 30 50 90 f8 10 00

[	DB 0X00 , 0XF8 , 0X80 , 0XF0 , 0X08 , 0X88 , 0X70 , 0X00]
0001c0: 00 f8 80 f0 08 88 70 00

[	DB 0X00 , 0X70 , 0X80 , 0XF0 , 0X88 , 0X88 , 0X70 , 0X00]
0001c8: 00 70 80 f0 88 88 70 00

[	DB 0X00 , 0XF8 , 0X08 , 0X10 , 0X20 , 0X20 , 0X20 , 0X00]
0001d0: 00 f8 08 10 20 20 20 00

[	DB 0X00 , 0X70 , 0X88 , 0X70 , 0X88 , 0X88 , 0X70 , 0X00]
0001d8: 00 70 88 70 88 88 70 00

[	DB 0X00 , 0X70 , 0X88 , 0X88 , 0X78 , 0X08 , 0X70 , 0X00]
0001e0: 00 70 88 88 78 08 70 00

[	DB 0X00 , 0X00 , 0X20 , 0X00 , 0X00 , 0X20 , 0X00 , 0X00]
0001e8: 00 00 20 00 00 20 00 00

[	DB 0X00 , 0X00 , 0X20 , 0X00 , 0X00 , 0X20 , 0X20 , 0X40]
0001f0: 00 00 20 00 00 20 20 40

[	DB 0X00 , 0X00 , 0X10 , 0X20 , 0X40 , 0X20 , 0X10 , 0X00]
0001f8: 00 00 10 20 40 20 10 00

[	DB 0X00 , 0X00 , 0X00 , 0X78 , 0X00 , 0X78 , 0X00 , 0X00]
000200: 00 00 00 78 00 78 00 00

[	DB 0X00 , 0X00 , 0X20 , 0X10 , 0X08 , 0X10 , 0X20 , 0X00]
000208: 00 00 20 10 08 10 20 00

[	DB 0X00 , 0X70 , 0X88 , 0X10 , 0X20 , 0X00 , 0X20 , 0X00]
000210: 00 70 88 10 20 00 20 00

[	DB 0X00 , 0X70 , 0XA8 , 0XA8 , 0XB0 , 0X80 , 0X78 , 0X00]
000218: 00 70 a8 a8 b0 80 78 00

[	DB 0X00 , 0X78 , 0X88 , 0X88 , 0XF8 , 0X88 , 0X88 , 0X00]
000220: 00 78 88 88 f8 88 88 00

[	DB 0X00 , 0XF0 , 0X88 , 0XF0 , 0X88 , 0X88 , 0XF0 , 0X00]
000228: 00 f0 88 f0 88 88 f0 00

[	DB 0X00 , 0X70 , 0X88 , 0X80 , 0X80 , 0X88 , 0X70 , 0X00]
000230: 00 70 88 80 80 88 70 00

[	DB 0X00 , 0XE0 , 0X90 , 0X88 , 0X88 , 0X88 , 0XF0 , 0X00]
000238: 00 e0 90 88 88 88 f0 00

[	DB 0X00 , 0XF8 , 0X80 , 0XF0 , 0X80 , 0X80 , 0XF8 , 0X00]
000240: 00 f8 80 f0 80 80 f8 00

[	DB 0X00 , 0XF8 , 0X80 , 0XF0 , 0X80 , 0X80 , 0X80 , 0X00]
000248: 00 f8 80 f0 80 80 80 00

[	DB 0X00 , 0X70 , 0X88 , 0X80 , 0XB8 , 0X88 , 0X70 , 0X00]
000250: 00 70 88 80 b8 88 70 00

[	DB 0X00 , 0X88 , 0X88 , 0XF8 , 0X88 , 0X88 , 0X88 , 0X00]
000258: 00 88 88 f8 88 88 88 00

[	DB 0X00 , 0XF8 , 0X20 , 0X20 , 0X20 , 0X20 , 0XF8 , 0X00]
000260: 00 f8 20 20 20 20 f8 00

[	DB 0X00 , 0X08 , 0X08 , 0X08 , 0X88 , 0X88 , 0X70 , 0X00]
000268: 00 08 08 08 88 88 70 00

[	DB 0X00 , 0X90 , 0XA0 , 0XC0 , 0XA0 , 0X90 , 0X88 , 0X00]
000270: 00 90 a0 c0 a0 90 88 00

[	DB 0X00 , 0X80 , 0X80 , 0X80 , 0X80 , 0X80 , 0XF8 , 0X00]
000278: 00 80 80 80 80 80 f8 00

[	DB 0X00 , 0X88 , 0XD8 , 0XA8 , 0XA8 , 0X88 , 0X88 , 0X00]
000280: 00 88 d8 a8 a8 88 88 00

[	DB 0X00 , 0X88 , 0X88 , 0XC8 , 0XA8 , 0X98 , 0X88 , 0X00]
000288: 00 88 88 c8 a8 98 88 00

[	DB 0X00 , 0X70 , 0X88 , 0X88 , 0X88 , 0X88 , 0X70 , 0X00]
000290: 00 70 88 88 88 88 70 00

[	DB 0X00 , 0XF0 , 0X88 , 0X88 , 0XF0 , 0X80 , 0X80 , 0X00]
000298: 00 f0 88 88 f0 80 80 00

[	DB 0X00 , 0X70 , 0X88 , 0X88 , 0X88 , 0XA8 , 0X70 , 0X10]
0002a0: 00 70 88 88 88 a8 70 10

[	DB 0X00 , 0XF0 , 0X88 , 0X88 , 0XF0 , 0X90 , 0X88 , 0X00]
0002a8: 00 f0 88 88 f0 90 88 00

[	DB 0X00 , 0X70 , 0X80 , 0X70 , 0X08 , 0X88 , 0X70 , 0X00]
0002b0: 00 70 80 70 08 88 70 00

[	DB 0X00 , 0XF8 , 0X20 , 0X20 , 0X20 , 0X20 , 0X20 , 0X00]
0002b8: 00 f8 20 20 20 20 20 00

[	DB 0X00 , 0X88 , 0X88 , 0X88 , 0X88 , 0X88 , 0X70 , 0X00]
0002c0: 00 88 88 88 88 88 70 00

[	DB 0X00 , 0X88 , 0X88 , 0X88 , 0X88 , 0X50 , 0X20 , 0X00]
0002c8: 00 88 88 88 88 50 20 00

[	DB 0X00 , 0X88 , 0X88 , 0X88 , 0XA8 , 0XA8 , 0X50 , 0X00]
0002d0: 00 88 88 88 a8 a8 50 00

[	DB 0X00 , 0X88 , 0X50 , 0X20 , 0X20 , 0X50 , 0X88 , 0X00]
0002d8: 00 88 50 20 20 50 88 00

[	DB 0X00 , 0X88 , 0X88 , 0X50 , 0X20 , 0X20 , 0X20 , 0X00]
0002e0: 00 88 88 50 20 20 20 00

[	DB 0X00 , 0XF8 , 0X90 , 0X20 , 0X40 , 0X88 , 0XF8 , 0X00]
0002e8: 00 f8 90 20 40 88 f8 00

[	DB 0X00 , 0X70 , 0X40 , 0X40 , 0X40 , 0X40 , 0X70 , 0X00]
0002f0: 00 70 40 40 40 40 70 00

[	DB 0X00 , 0X00 , 0X80 , 0X40 , 0X20 , 0X10 , 0X08 , 0X00]
0002f8: 00 00 80 40 20 10 08 00

[	DB 0X00 , 0X70 , 0X10 , 0X10 , 0X10 , 0X10 , 0X70 , 0X00]
000300: 00 70 10 10 10 10 70 00

[	DB 0X00 , 0X20 , 0X50 , 0X88 , 0X00 , 0X00 , 0X00 , 0X00]
000308: 00 20 50 88 00 00 00 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0XFC]
000310: 00 00 00 00 00 00 00 fc

[	DB 0X00 , 0X40 , 0X40 , 0X20 , 0X00 , 0X00 , 0X00 , 0X00]
000318: 00 40 40 20 00 00 00 00

[	DB 0X00 , 0X00 , 0X70 , 0X08 , 0X78 , 0X88 , 0X78 , 0X00]
000320: 00 00 70 08 78 88 78 00

[	DB 0X00 , 0X80 , 0X80 , 0XF0 , 0X88 , 0X88 , 0XF0 , 0X00]
000328: 00 80 80 f0 88 88 f0 00

[	DB 0X00 , 0X00 , 0X70 , 0X88 , 0X80 , 0X80 , 0X78 , 0X00]
000330: 00 00 70 88 80 80 78 00

[	DB 0X00 , 0X08 , 0X08 , 0X78 , 0X88 , 0X88 , 0X78 , 0X00]
000338: 00 08 08 78 88 88 78 00

[	DB 0X00 , 0X00 , 0X70 , 0X88 , 0XF0 , 0X80 , 0X78 , 0X00]
000340: 00 00 70 88 f0 80 78 00

[	DB 0X00 , 0X18 , 0X20 , 0X30 , 0X20 , 0X20 , 0X20 , 0X00]
000348: 00 18 20 30 20 20 20 00

[	DB 0X00 , 0X00 , 0X78 , 0X88 , 0X88 , 0X78 , 0X08 , 0X70]
000350: 00 00 78 88 88 78 08 70

[	DB 0X00 , 0X80 , 0X80 , 0XF0 , 0X88 , 0X88 , 0X88 , 0X00]
000358: 00 80 80 f0 88 88 88 00

[	DB 0X00 , 0X20 , 0X00 , 0X60 , 0X20 , 0X20 , 0X70 , 0X00]
000360: 00 20 00 60 20 20 70 00

[	DB 0X00 , 0X08 , 0X00 , 0X08 , 0X08 , 0X08 , 0X48 , 0X30]
000368: 00 08 00 08 08 08 48 30

[	DB 0X00 , 0X40 , 0X50 , 0X60 , 0X60 , 0X50 , 0X48 , 0X00]
000370: 00 40 50 60 60 50 48 00

[	DB 0X00 , 0X20 , 0X20 , 0X20 , 0X20 , 0X20 , 0X18 , 0X00]
000378: 00 20 20 20 20 20 18 00

[	DB 0X00 , 0X00 , 0XD0 , 0XA8 , 0XA8 , 0XA8 , 0XA8 , 0X00]
000380: 00 00 d0 a8 a8 a8 a8 00

[	DB 0X00 , 0X00 , 0XF0 , 0X88 , 0X88 , 0X88 , 0X88 , 0X00]
000388: 00 00 f0 88 88 88 88 00

[	DB 0X00 , 0X00 , 0X70 , 0X88 , 0X88 , 0X88 , 0X70 , 0X00]
000390: 00 00 70 88 88 88 70 00

[	DB 0X00 , 0X00 , 0XF0 , 0X88 , 0X88 , 0XF0 , 0X80 , 0X80]
000398: 00 00 f0 88 88 f0 80 80

[	DB 0X00 , 0X00 , 0X70 , 0X90 , 0X90 , 0X70 , 0X10 , 0X18]
0003a0: 00 00 70 90 90 70 10 18

[	DB 0X00 , 0X00 , 0X38 , 0X40 , 0X40 , 0X40 , 0X40 , 0X00]
0003a8: 00 00 38 40 40 40 40 00

[	DB 0X00 , 0X00 , 0X70 , 0X80 , 0X70 , 0X08 , 0XF0 , 0X00]
0003b0: 00 00 70 80 70 08 f0 00

[	DB 0X00 , 0X20 , 0X70 , 0X20 , 0X20 , 0X20 , 0X18 , 0X00]
0003b8: 00 20 70 20 20 20 18 00

[	DB 0X00 , 0X00 , 0X88 , 0X88 , 0X88 , 0X88 , 0X70 , 0X00]
0003c0: 00 00 88 88 88 88 70 00

[	DB 0X00 , 0X00 , 0X88 , 0X88 , 0X50 , 0X50 , 0X20 , 0X00]
0003c8: 00 00 88 88 50 50 20 00

[	DB 0X00 , 0X00 , 0X88 , 0XA8 , 0XA8 , 0XA8 , 0X50 , 0X00]
0003d0: 00 00 88 a8 a8 a8 50 00

[	DB 0X00 , 0X00 , 0X88 , 0X50 , 0X20 , 0X50 , 0X88 , 0X00]
0003d8: 00 00 88 50 20 50 88 00

[	DB 0X00 , 0X00 , 0X88 , 0X88 , 0X88 , 0X78 , 0X08 , 0X70]
0003e0: 00 00 88 88 88 78 08 70

[	DB 0X00 , 0X00 , 0XF8 , 0X10 , 0X20 , 0X40 , 0XF8 , 0X00]
0003e8: 00 00 f8 10 20 40 f8 00

[	DB 0X00 , 0X38 , 0X20 , 0XC0 , 0X20 , 0X20 , 0X38 , 0X00]
0003f0: 00 38 20 c0 20 20 38 00

[	DB 0X00 , 0X20 , 0X20 , 0X20 , 0X20 , 0X20 , 0X20 , 0X00]
0003f8: 00 20 20 20 20 20 20 00

[	DB 0X00 , 0XE0 , 0X20 , 0X18 , 0X20 , 0X20 , 0XE0 , 0X00]
000400: 00 e0 20 18 20 20 e0 00

[	DB 0X00 , 0X28 , 0X50 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
000408: 00 28 50 00 00 00 00 00

[	DB 0X30 , 0X48 , 0XB4 , 0XC4 , 0XC4 , 0XB4 , 0X48 , 0X30]
000410: 30 48 b4 c4 c4 b4 48 30

[	INCLUDE ".//ZG6x8_L.asm"] end

[CHCARS_END :]
	label address: 0x000418

[START :]
	label address: 0x000418

[	INCLUDE ".//iplrom3.asm"] begin
[	LD BC , END_P - ST_PROG] Z80:11cyc, R800:3cyc
000418: 01 d6 02

[	LD DE , PROG] Z80:11cyc, R800:3cyc
00041b: 11 00 fc

[	LD HL , END_BEG] Z80:11cyc, R800:3cyc
00041e: 21 26 04

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000421: ed b0

[	JP PROG] Z80:11cyc, R800:5cyc
000423: c3 00 fc

[END_BEG :]
	label address: 0x000426

[	ORG PROG]
	code address: 0x00fc00

[ST_PROG :]
	label address: 0x00fc00

[	LD A , 0XD4] Z80:8cyc, R800:2cyc
00fc00: 3e d4

[	OUT [ 0X40 ] , A] Z80:12cyc, R800:10 or 9cyc
00fc02: d3 40

[	LD A , 0X40] Z80:8cyc, R800:2cyc
00fc04: 3e 40

[	LD [ 0X6000 ] , A] Z80:14cyc, R800:6cyc
00fc06: 32 00 60

[	LD BC , 0X100] Z80:11cyc, R800:3cyc
00fc09: 01 00 01

[	LD D , C] Z80:5cyc, R800:2cyc
00fc0c: 51

[	LD E , C] Z80:5cyc, R800:2cyc
00fc0d: 59

[	LD HL , BUFFER] Z80:11cyc, R800:3cyc
00fc0e: 21 00 c0

[	CALL RD_CARD] Z80:18cyc, R800:5cyc
00fc11: cd 16 fe

[	JR C , RD_EPCS] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fc14: 38 20

[	CALL TEST_MBR] Z80:18cyc, R800:5cyc
00fc16: cd 5f fe

[	JR C , RD_EPCS] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fc19: 38 1b

[	PUSH DE] Z80:12cyc, R800:6cyc
00fc1b: d5

[	PUSH BC] Z80:12cyc, R800:6cyc
00fc1c: c5

[	LD B , 1] Z80:8cyc, R800:2cyc
00fc1d: 06 01

[	LD HL , BUFFER] Z80:11cyc, R800:3cyc
00fc1f: 21 00 c0

[	CALL RD_CARD] Z80:18cyc, R800:5cyc
00fc22: cd 16 fe

[	CALL SRC_FAT] Z80:18cyc, R800:5cyc
00fc25: cd 44 fe

[	POP BC] Z80:11cyc, R800:5cyc
00fc28: c1

[	POP DE] Z80:11cyc, R800:5cyc
00fc29: d1

[	JR NZ , RD_EPCS] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fc2a: 20 0a

[YES_FAT :]
	label address: 0x00fc2c

[	CALL TEST_BIOS] Z80:18cyc, R800:5cyc
00fc2c: cd 7b fe

[	JR C , RD_EPCS] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fc2f: 38 05

[	CALL PRM_SD] Z80:18cyc, R800:5cyc
00fc31: cd 10 fd

[	JR RD_SD] Z80:13cyc, R800:3cyc
00fc34: 18 11

[RD_EPCS :]
	label address: 0x00fc36

[	CALL PRM_EPCS] Z80:18cyc, R800:5cyc
00fc36: cd 09 fd

[	LD HL , LD_EPCS] Z80:11cyc, R800:3cyc
00fc39: 21 c7 fc

[	LD [ P_READ + 1 ] , HL] Z80:17cyc, R800:7cyc
00fc3c: 22 ae fc

[	LD A , 0X60] Z80:8cyc, R800:2cyc
00fc3f: 3e 60

[	LD [ 0X6000 ] , A] Z80:14cyc, R800:6cyc
00fc41: 32 00 60

[	LD DE , 0X3C00] Z80:11cyc, R800:3cyc
00fc44: 11 00 3c

[RD_SD :]
	label address: 0x00fc47

[	CALL LD_BIOS] Z80:18cyc, R800:5cyc
00fc47: cd 7b fc

[	JR C , ERR_LD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fc4a: 38 10

[	LD A , 0X80] Z80:8cyc, R800:2cyc
00fc4c: 3e 80

[	LD [ 0X7000 ] , A] Z80:14cyc, R800:6cyc
00fc4e: 32 00 70

[	LD HL , [ 0X8000 ]] Z80:17cyc, R800:7cyc
00fc51: 2a 00 80

[	XOR A , A] Z80:5cyc, R800:1cyc
00fc54: af

[	LD DE , 0X4241] Z80:11cyc, R800:3cyc
00fc55: 11 41 42

[	SBC HL , DE] Z80:17cyc, R800:2cyc
00fc58: ed 52

[	JR Z , ST_BIOS] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fc5a: 28 05

[ERR_LD :]
	label address: 0x00fc5c

[	CALL PRM_ERROR] Z80:18cyc, R800:5cyc
00fc5c: cd fa fc

[	JR $] Z80:13cyc, R800:3cyc
00fc5f: 18 fe

[ST_BIOS :]
	label address: 0x00fc61

[	XOR A , A] Z80:5cyc, R800:1cyc
00fc61: af

[	LD [ 0X6000 ] , A] Z80:14cyc, R800:6cyc
00fc62: 32 00 60

[	INC A] Z80:5cyc, R800:1cyc
00fc65: 3c

[	LD [ 0X6800 ] , A] Z80:14cyc, R800:6cyc
00fc66: 32 00 68

[	LD [ 0X7000 ] , A] Z80:14cyc, R800:6cyc
00fc69: 32 00 70

[	LD [ 0X7800 ] , A] Z80:14cyc, R800:6cyc
00fc6c: 32 00 78

[	LD A , 0X0C0] Z80:8cyc, R800:2cyc
00fc6f: 3e c0

[	OUT [ 0X0A8 ] , A] Z80:12cyc, R800:10 or 9cyc
00fc71: d3 a8

[	LD A , [ 0X0000 ]] Z80:14cyc, R800:6cyc
00fc73: 3a 00 00

[	CP A , 0XF3] Z80:8cyc, R800:2cyc
00fc76: fe f3

[	JR NZ , ERR_LD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fc78: 20 e2

[	RST 0] Z80:12cyc, R800:6 or 7cyc
00fc7a: c7

[LD_BIOS :]
	label address: 0x00fc7b

[	CALL PRM_STEP] Z80:18cyc, R800:5cyc
00fc7b: cd ed fc

[	LD B , 16 + 8 + 4] Z80:8cyc, R800:2cyc
00fc7e: 06 1c

[	LD A , 0X80] Z80:8cyc, R800:2cyc
00fc80: 3e 80

[	LD B , 9] Z80:8cyc, R800:2cyc
00fc82: 06 09

[	CALL LOAD_BLOCKS] Z80:18cyc, R800:5cyc
00fc84: cd 9e fc

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fc87: d8

[	CALL SET_F4_DEVICE] Z80:18cyc, R800:5cyc
00fc88: cd bb fc

[	LD B , SDBIOS_LEN - 9] Z80:8cyc, R800:2cyc
00fc8b: 06 17

[	CALL LOAD_BLOCKS] Z80:18cyc, R800:5cyc
00fc8d: cd 9e fc

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fc90: d8

[	LD A , 32 - 0X20] Z80:8cyc, R800:2cyc
00fc91: 3e 00

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
00fc93: d3 98

[	LD A , 79 - 0X20] Z80:8cyc, R800:2cyc
00fc95: 3e 2f

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
00fc97: d3 98

[	LD A , 75 - 0X20] Z80:8cyc, R800:2cyc
00fc99: 3e 2b

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
00fc9b: d3 98

[	RET] Z80:11cyc, R800:5cyc
00fc9d: c9

[LOAD_BLOCKS :]
	label address: 0x00fc9e

[	LD [ 0X7000 ] , A] Z80:14cyc, R800:6cyc
00fc9e: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
00fca1: 3c

[	LD [ 0X7800 ] , A] Z80:14cyc, R800:6cyc
00fca2: 32 00 78

[	INC A] Z80:5cyc, R800:1cyc
00fca5: 3c

[	PUSH AF] Z80:12cyc, R800:6cyc
00fca6: f5

[	PUSH BC] Z80:12cyc, R800:6cyc
00fca7: c5

[	LD B , 0X20] Z80:8cyc, R800:2cyc
00fca8: 06 20

[	LD HL , 0X8000] Z80:11cyc, R800:3cyc
00fcaa: 21 00 80

[P_READ :]
	label address: 0x00fcad

[	CALL RD_CARD] Z80:18cyc, R800:5cyc
00fcad: cd 16 fe

[	POP BC] Z80:11cyc, R800:5cyc
00fcb0: c1

[	POP HL] Z80:11cyc, R800:5cyc
00fcb1: e1

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fcb2: d8

[	LD A , 62 - 0X20] Z80:8cyc, R800:2cyc
00fcb3: 3e 1e

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
00fcb5: d3 98

[	LD A , H] Z80:5cyc, R800:2cyc
00fcb7: 7c

[	DJNZ LOAD_BLOCKS] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fcb8: 10 e4

[	RET] Z80:11cyc, R800:5cyc
00fcba: c9

[SET_F4_DEVICE :]
	label address: 0x00fcbb

[	EX AF , AF'] Z80:5cyc, R800:1cyc
00fcbb: 08

[	LD A , [ 0X8000 + 0X002D ]] Z80:14cyc, R800:6cyc
00fcbc: 3a 2d 80

[	SUB A , 0X03] Z80:8cyc, R800:2cyc
00fcbf: d6 03

[	OUT [ 0X4F ] , A] Z80:12cyc, R800:10 or 9cyc
00fcc1: d3 4f

[	OUT [ 0XF4 ] , A] Z80:12cyc, R800:10 or 9cyc
00fcc3: d3 f4

[	EX AF , AF'] Z80:5cyc, R800:1cyc
00fcc5: 08

[	RET] Z80:11cyc, R800:5cyc
00fcc6: c9

[LD_EPCS :]
	label address: 0x00fcc7

[	PUSH DE] Z80:12cyc, R800:6cyc
00fcc7: d5

[	SLA E] Z80:10cyc, R800:2cyc
00fcc8: cb 23

[	RL D] Z80:10cyc, R800:2cyc
00fcca: cb 12

[	XOR A , A] Z80:5cyc, R800:1cyc
00fccc: af

[	LD C , 64] Z80:8cyc, R800:2cyc
00fccd: 0e 40

[	LD B , A] Z80:5cyc, R800:2cyc
00fccf: 47

[	PUSH HL] Z80:12cyc, R800:6cyc
00fcd0: e5

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00fcd1: 21 00 40

[	LD [ HL ] , 0X03] Z80:11cyc, R800:5cyc
00fcd4: 36 03

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
00fcd6: 72

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00fcd7: 73

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00fcd8: 77

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fcd9: 7e

[	POP DE] Z80:11cyc, R800:5cyc
00fcda: d1

[CIKL_3 :]
	label address: 0x00fcdb

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fcdb: 7e

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
00fcdc: 12

[	INC DE] Z80:7cyc, R800:1cyc
00fcdd: 13

[	DJNZ CIKL_3] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fcde: 10 fb

[	DEC C] Z80:5cyc, R800:1cyc
00fce0: 0d

[	JR NZ , CIKL_3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fce1: 20 f8

[	LD A , [ 0X5000 ]] Z80:14cyc, R800:6cyc
00fce3: 3a 00 50

[	POP DE] Z80:11cyc, R800:5cyc
00fce6: d1

[	LD HL , 32] Z80:11cyc, R800:3cyc
00fce7: 21 20 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00fcea: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
00fceb: eb

[	RET] Z80:11cyc, R800:5cyc
00fcec: c9

[PRM_STEP :]
	label address: 0x00fced

[	LD A , ( 7 * 40 ) % 256] Z80:8cyc, R800:2cyc
00fced: 3e 18

[	OUT [ CMDP ] , A] Z80:12cyc, R800:10 or 9cyc
00fcef: d3 99

[	LD A , 0X40 + 0X08 + ( 7 * 40 ) / 256] Z80:8cyc, R800:2cyc
00fcf1: 3e 49

[	OUT [ CMDP ] , A] Z80:12cyc, R800:10 or 9cyc
00fcf3: d3 99

[	LD A , 58 - 0X20] Z80:8cyc, R800:2cyc
00fcf5: 3e 1a

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
00fcf7: d3 98

[	RET] Z80:11cyc, R800:5cyc
00fcf9: c9

[PRM_ERROR :]
	label address: 0x00fcfa

[	PUSH BC] Z80:12cyc, R800:6cyc
00fcfa: c5

[	PUSH HL] Z80:12cyc, R800:6cyc
00fcfb: e5

[	LD HL , T_ERR] Z80:11cyc, R800:3cyc
00fcfc: 21 49 fd

[	LD A , ( 8 * 40 ) % 256] Z80:8cyc, R800:2cyc
00fcff: 3e 40

[	LD C , CMDP] Z80:8cyc, R800:2cyc
00fd01: 0e 99

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00fd03: ed 79

[	LD A , 0X40 + 0X08 + ( 8 * 40 ) / 256] Z80:8cyc, R800:2cyc
00fd05: 3e 49

[	JR PRM_2] Z80:13cyc, R800:3cyc
00fd07: 18 14

[PRM_EPCS :]
	label address: 0x00fd09

[	PUSH BC] Z80:12cyc, R800:6cyc
00fd09: c5

[	PUSH HL] Z80:12cyc, R800:6cyc
00fd0a: e5

[	LD HL , T_EPCS] Z80:11cyc, R800:3cyc
00fd0b: 21 37 fd

[	JR PRM_] Z80:13cyc, R800:3cyc
00fd0e: 18 05

[PRM_SD :]
	label address: 0x00fd10

[	PUSH BC] Z80:12cyc, R800:6cyc
00fd10: c5

[	PUSH HL] Z80:12cyc, R800:6cyc
00fd11: e5

[	LD HL , T_SD] Z80:11cyc, R800:3cyc
00fd12: 21 25 fd

[PRM_ :]
	label address: 0x00fd15

[	LD A , 6 * 40] Z80:8cyc, R800:2cyc
00fd15: 3e f0

[	LD C , CMDP] Z80:8cyc, R800:2cyc
00fd17: 0e 99

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00fd19: ed 79

[	LD A , 0X40 + 0X08] Z80:8cyc, R800:2cyc
00fd1b: 3e 48

[PRM_2 :]
	label address: 0x00fd1d

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00fd1d: ed 79

[	CALL PRINT] Z80:18cyc, R800:5cyc
00fd1f: cd cc fe

[	POP HL] Z80:11cyc, R800:5cyc
00fd22: e1

[	POP BC] Z80:11cyc, R800:5cyc
00fd23: c1

[	RET] Z80:11cyc, R800:5cyc
00fd24: c9

[T_SD :]
	label address: 0x00fd25

[	DS "Load from SD-card"]
00fd25: 4c 6f 61 64 20 66 72 6f
00fd2d: 6d 20 53 44 2d 63 61 72
00fd35: 64

[	DB 0]
00fd36: 00

[T_EPCS :]
	label address: 0x00fd37

[	DS "Load from EPCS64 "]
00fd37: 4c 6f 61 64 20 66 72 6f
00fd3f: 6d 20 45 50 43 53 36 34
00fd47: 20

[	DB 0]
00fd48: 00

[T_ERR :]
	label address: 0x00fd49

[	DS "Error BIOS"]
00fd49: 45 72 72 6f 72 20 42 49
00fd51: 4f 53

[	DB 0]
00fd53: 00

[SET41CMD :]
	label address: 0x00fd54

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00fd54: 21 00 40

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fd57: 7e

[	LD [ HL ] , 0X40 + 41] Z80:11cyc, R800:5cyc
00fd58: 36 69

[	LD [ HL ] , 0X40] Z80:11cyc, R800:5cyc
00fd5a: 36 40

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
00fd5c: 36 00

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
00fd5e: 36 00

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
00fd60: 36 00

[	LD [ HL ] , 0X95] Z80:11cyc, R800:5cyc
00fd62: 36 95

[	JR SET_] Z80:13cyc, R800:3cyc
00fd64: 18 36

[SET8CMD :]
	label address: 0x00fd66

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00fd66: 21 00 40

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fd69: 7e

[	LD [ HL ] , 0X40 + 8] Z80:11cyc, R800:5cyc
00fd6a: 36 48

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
00fd6c: 36 00

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
00fd6e: 36 00

[	LD [ HL ] , 0X01] Z80:11cyc, R800:5cyc
00fd70: 36 01

[	LD [ HL ] , 0X0AA] Z80:11cyc, R800:5cyc
00fd72: 36 aa

[	LD [ HL ] , 0X87] Z80:11cyc, R800:5cyc
00fd74: 36 87

[	JR SET_] Z80:13cyc, R800:3cyc
00fd76: 18 24

[SET0CMD :]
	label address: 0x00fd78

[	LD C , 0] Z80:8cyc, R800:2cyc
00fd78: 0e 00

[	LD DE , 0] Z80:11cyc, R800:3cyc
00fd7a: 11 00 00

[SET_CMD :]
	label address: 0x00fd7d

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00fd7d: 21 00 40

[	LD A , 0] Z80:8cyc, R800:2cyc
00fd80: 3e 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00fd82: be

[	LD [ HL ] , B] Z80:8cyc, R800:4cyc
00fd83: 70

[	BIT 1 , A] Z80:10cyc, R800:2cyc
00fd84: cb 4f

[	JR Z , SET_SD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fd86: 28 07

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
00fd88: 36 00

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
00fd8a: 71

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
00fd8b: 72

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00fd8c: 73

[	JR SET_CRC] Z80:13cyc, R800:3cyc
00fd8d: 18 0b

[SET_SD :]
	label address: 0x00fd8f

[	SLA E] Z80:10cyc, R800:2cyc
00fd8f: cb 23

[	RL D] Z80:10cyc, R800:2cyc
00fd91: cb 12

[	RL C] Z80:10cyc, R800:2cyc
00fd93: cb 11

[	LD [ HL ] , C] Z80:8cyc, R800:4cyc
00fd95: 71

[	LD [ HL ] , D] Z80:8cyc, R800:4cyc
00fd96: 72

[	LD [ HL ] , E] Z80:8cyc, R800:4cyc
00fd97: 73

[	LD [ HL ] , 0] Z80:11cyc, R800:5cyc
00fd98: 36 00

[SET_CRC :]
	label address: 0x00fd9a

[	LD [ HL ] , 0X95] Z80:11cyc, R800:5cyc
00fd9a: 36 95

[SET_ :]
	label address: 0x00fd9c

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fd9c: 7e

[	LD B , 16] Z80:8cyc, R800:2cyc
00fd9d: 06 10

[CIKL_4 :]
	label address: 0x00fd9f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fd9f: 7e

[	CP A , 0X0FF] Z80:8cyc, R800:2cyc
00fda0: fe ff

[	CCF] Z80:5cyc, R800:1cyc
00fda2: 3f

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fda3: d0

[	DJNZ CIKL_4] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fda4: 10 f9

[	SCF] Z80:5cyc, R800:1cyc
00fda6: 37

[	RET] Z80:11cyc, R800:5cyc
00fda7: c9

[INIT_SD :]
	label address: 0x00fda8

[	LD B , 10] Z80:8cyc, R800:2cyc
00fda8: 06 0a

[INIT_C :]
	label address: 0x00fdaa

[	LD A , [ 0X5000 ]] Z80:14cyc, R800:6cyc
00fdaa: 3a 00 50

[	DJNZ INIT_C] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fdad: 10 fb

[	LD B , 0X40 + 0] Z80:8cyc, R800:2cyc
00fdaf: 06 40

[	CALL SET0CMD] Z80:18cyc, R800:5cyc
00fdb1: cd 78 fd

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fdb4: d8

[	AND A , 0X0F7] Z80:8cyc, R800:2cyc
00fdb5: e6 f7

[	CP A , 0X01] Z80:8cyc, R800:2cyc
00fdb7: fe 01

[	SCF] Z80:5cyc, R800:1cyc
00fdb9: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fdba: c0

[	CALL SET8CMD] Z80:18cyc, R800:5cyc
00fdbb: cd 66 fd

[	CP A , 0X01] Z80:8cyc, R800:2cyc
00fdbe: fe 01

[	JR NZ , MMC_] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fdc0: 20 18

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fdc2: 7e

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fdc3: 7e

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fdc4: 7e

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
00fdc5: e6 0f

[	CP A , 0X01] Z80:8cyc, R800:2cyc
00fdc7: fe 01

[	SCF] Z80:5cyc, R800:1cyc
00fdc9: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fdca: c0

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fdcb: 7e

[	CP A , 0X0AA] Z80:8cyc, R800:2cyc
00fdcc: fe aa

[	SCF] Z80:5cyc, R800:1cyc
00fdce: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fdcf: c0

[CIKL_I :]
	label address: 0x00fdd0

[	LD B , 0X40 + 55] Z80:8cyc, R800:2cyc
00fdd0: 06 77

[	CALL SET0CMD] Z80:18cyc, R800:5cyc
00fdd2: cd 78 fd

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fdd5: d8

[	AND A , 4] Z80:8cyc, R800:2cyc
00fdd6: e6 04

[	JR Z , COM_OK] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fdd8: 28 0b

[MMC_ :]
	label address: 0x00fdda

[	XOR A , A] Z80:5cyc, R800:1cyc
00fdda: af

[	LD [ TYPE_C ] , A] Z80:14cyc, R800:6cyc
00fddb: 32 81 fd

[	LD B , 0X40 + 1] Z80:8cyc, R800:2cyc
00fdde: 06 41

[	CALL SET0CMD] Z80:18cyc, R800:5cyc
00fde0: cd 78 fd

[	JR CORR] Z80:13cyc, R800:3cyc
00fde3: 18 08

[COM_OK :]
	label address: 0x00fde5

[	LD A , 1] Z80:8cyc, R800:2cyc
00fde5: 3e 01

[	LD [ TYPE_C ] , A] Z80:14cyc, R800:6cyc
00fde7: 32 81 fd

[	CALL SET41CMD] Z80:18cyc, R800:5cyc
00fdea: cd 54 fd

[CORR :]
	label address: 0x00fded

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fded: d8

[	CP A , 0X01] Z80:8cyc, R800:2cyc
00fdee: fe 01

[	JR Z , CIKL_I] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fdf0: 28 de

[	OR A , A] Z80:5cyc, R800:1cyc
00fdf2: b7

[	JR Z , INIT0OK] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fdf3: 28 02

[	SCF] Z80:5cyc, R800:1cyc
00fdf5: 37

[	RET] Z80:11cyc, R800:5cyc
00fdf6: c9

[INIT0OK :]
	label address: 0x00fdf7

[	LD A , [ TYPE_C ]] Z80:14cyc, R800:6cyc
00fdf7: 3a 81 fd

[	OR A , A] Z80:5cyc, R800:1cyc
00fdfa: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fdfb: c8

[	LD B , 0X40 + 58] Z80:8cyc, R800:2cyc
00fdfc: 06 7a

[	CALL SET0CMD] Z80:18cyc, R800:5cyc
00fdfe: cd 78 fd

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fe01: d8

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fe02: 7e

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00fe03: be

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00fe04: be

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00fe05: be

[	BIT 6 , A] Z80:10cyc, R800:2cyc
00fe06: cb 77

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fe08: c8

[	LD A , 2] Z80:8cyc, R800:2cyc
00fe09: 3e 02

[	LD [ TYPE_C ] , A] Z80:14cyc, R800:6cyc
00fe0b: 32 81 fd

[	RET] Z80:11cyc, R800:5cyc
00fe0e: c9

[REINIT :]
	label address: 0x00fe0f

[	CALL INIT_SD] Z80:18cyc, R800:5cyc
00fe0f: cd a8 fd

[	POP BC] Z80:11cyc, R800:5cyc
00fe12: c1

[	POP DE] Z80:11cyc, R800:5cyc
00fe13: d1

[	POP HL] Z80:11cyc, R800:5cyc
00fe14: e1

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fe15: d8

[RD_CARD :]
	label address: 0x00fe16

[	PUSH HL] Z80:12cyc, R800:6cyc
00fe16: e5

[	PUSH DE] Z80:12cyc, R800:6cyc
00fe17: d5

[	PUSH BC] Z80:12cyc, R800:6cyc
00fe18: c5

[	LD B , 0X51] Z80:8cyc, R800:2cyc
00fe19: 06 51

[	CALL SET_CMD] Z80:18cyc, R800:5cyc
00fe1b: cd 7d fd

[	JR C , REINIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe1e: 38 ef

[	POP BC] Z80:11cyc, R800:5cyc
00fe20: c1

[	POP DE] Z80:11cyc, R800:5cyc
00fe21: d1

[	POP HL] Z80:11cyc, R800:5cyc
00fe22: e1

[	OR A , A] Z80:5cyc, R800:1cyc
00fe23: b7

[	SCF] Z80:5cyc, R800:1cyc
00fe24: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fe25: c0

[	PUSH DE] Z80:12cyc, R800:6cyc
00fe26: d5

[	PUSH BC] Z80:12cyc, R800:6cyc
00fe27: c5

[	EX DE , HL] Z80:5cyc, R800:1cyc
00fe28: eb

[	LD BC , 0X200] Z80:11cyc, R800:3cyc
00fe29: 01 00 02

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00fe2c: 21 00 40

[CIKL_5 :]
	label address: 0x00fe2f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fe2f: 7e

[	CP A , 0X0FE] Z80:8cyc, R800:2cyc
00fe30: fe fe

[	JR NZ , CIKL_5] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe32: 20 fb

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00fe34: ed b0

[	EX DE , HL] Z80:5cyc, R800:1cyc
00fe36: eb

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00fe37: 1a

[	POP BC] Z80:11cyc, R800:5cyc
00fe38: c1

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00fe39: 1a

[	POP DE] Z80:11cyc, R800:5cyc
00fe3a: d1

[	INC DE] Z80:7cyc, R800:1cyc
00fe3b: 13

[	LD A , D] Z80:5cyc, R800:2cyc
00fe3c: 7a

[	OR A , E] Z80:5cyc, R800:1cyc
00fe3d: b3

[	JR NZ , PASS_2] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe3e: 20 01

[	INC C] Z80:5cyc, R800:1cyc
00fe40: 0c

[PASS_2 :]
	label address: 0x00fe41

[	DJNZ RD_CARD] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe41: 10 d3

[	RET] Z80:11cyc, R800:5cyc
00fe43: c9

[SRC_FAT :]
	label address: 0x00fe44

[	LD HL , BUFFER] Z80:11cyc, R800:3cyc
00fe44: 21 00 c0

[	LD BC , 0X80] Z80:11cyc, R800:3cyc
00fe47: 01 80 00

[CIKL_6 :]
	label address: 0x00fe4a

[	LD A , 70] Z80:8cyc, R800:2cyc
00fe4a: 3e 46

[	CPIR] Z80:23cyc(BC!=0 && A!=[HL]), 18cyc(others), R800:?cyc(BC!=0 && A!=[HL]), 8cyc(others)
00fe4c: ed b1

[	JR Z , PASS_3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe4e: 28 01

[	RET] Z80:11cyc, R800:5cyc
00fe50: c9

[PASS_3 :]
	label address: 0x00fe51

[	PUSH HL] Z80:12cyc, R800:6cyc
00fe51: e5

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00fe52: 56

[	INC HL] Z80:7cyc, R800:1cyc
00fe53: 23

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00fe54: 5e

[	LD HL , 65 * 256 + 84] Z80:11cyc, R800:3cyc
00fe55: 21 54 41

[	OR A , A] Z80:5cyc, R800:1cyc
00fe58: b7

[	SBC HL , DE] Z80:17cyc, R800:2cyc
00fe59: ed 52

[	POP HL] Z80:11cyc, R800:5cyc
00fe5b: e1

[	JR NZ , CIKL_6] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe5c: 20 ec

[	RET] Z80:11cyc, R800:5cyc
00fe5e: c9

[TEST_MBR :]
	label address: 0x00fe5f

[	LD B , 4] Z80:8cyc, R800:2cyc
00fe5f: 06 04

[	LD IX , BUFFER + 0X1BE] Z80:16cyc, R800:4cyc
00fe61: dd 21 be c1

[CIKL_7 :]
	label address: 0x00fe65

[	LD E , [ IX + 8 ]] Z80:21cyc, R800:7cyc
00fe65: dd 5e 08

[	LD D , [ IX + 9 ]] Z80:21cyc, R800:7cyc
00fe68: dd 56 09

[	LD C , [ IX + 10 ]] Z80:21cyc, R800:7cyc
00fe6b: dd 4e 0a

[	LD A , C] Z80:5cyc, R800:2cyc
00fe6e: 79

[	OR A , D] Z80:5cyc, R800:1cyc
00fe6f: b2

[	OR A , E] Z80:5cyc, R800:1cyc
00fe70: b3

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fe71: c0

[	LD DE , 16] Z80:11cyc, R800:3cyc
00fe72: 11 10 00

[	ADD IX , DE] Z80:17cyc, R800:2cyc
00fe75: dd 19

[	DJNZ CIKL_7] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe77: 10 ec

[	SCF] Z80:5cyc, R800:1cyc
00fe79: 37

[	RET] Z80:11cyc, R800:5cyc
00fe7a: c9

[TEST_BIOS :]
	label address: 0x00fe7b

[	LD IX , BUFFER] Z80:16cyc, R800:4cyc
00fe7b: dd 21 00 c0

[	LD L , [ IX + 0X0E ]] Z80:21cyc, R800:7cyc
00fe7f: dd 6e 0e

[	LD H , [ IX + 0X0F ]] Z80:21cyc, R800:7cyc
00fe82: dd 66 0f

[	LD A , C] Z80:5cyc, R800:2cyc
00fe85: 79

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00fe86: 19

[	ADC A , 0] Z80:8cyc, R800:2cyc
00fe87: ce 00

[	LD C , A] Z80:5cyc, R800:2cyc
00fe89: 4f

[	LD E , [ IX + 0X11 ]] Z80:21cyc, R800:7cyc
00fe8a: dd 5e 11

[	LD D , [ IX + 0X12 ]] Z80:21cyc, R800:7cyc
00fe8d: dd 56 12

[	LD A , E] Z80:5cyc, R800:2cyc
00fe90: 7b

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
00fe91: e6 0f

[	LD B , 4] Z80:8cyc, R800:2cyc
00fe93: 06 04

[CIKL_1 :]
	label address: 0x00fe95

[	SRL D] Z80:10cyc, R800:2cyc
00fe95: cb 3a

[	RR E] Z80:10cyc, R800:2cyc
00fe97: cb 1b

[	DJNZ CIKL_1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe99: 10 fa

[	OR A , A] Z80:5cyc, R800:1cyc
00fe9b: b7

[	JR Z , PASS_1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fe9c: 28 01

[	INC DE] Z80:7cyc, R800:1cyc
00fe9e: 13

[PASS_1 :]
	label address: 0x00fe9f

[	PUSH DE] Z80:12cyc, R800:6cyc
00fe9f: d5

[	LD B , [ IX + 0X10 ]] Z80:21cyc, R800:7cyc
00fea0: dd 46 10

[	LD E , [ IX + 0X16 ]] Z80:21cyc, R800:7cyc
00fea3: dd 5e 16

[	LD D , [ IX + 0X17 ]] Z80:21cyc, R800:7cyc
00fea6: dd 56 17

[	LD A , C] Z80:5cyc, R800:2cyc
00fea9: 79

[CIKL_2 :]
	label address: 0x00feaa

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00feaa: 19

[	ADC A , 0] Z80:8cyc, R800:2cyc
00feab: ce 00

[	DJNZ CIKL_2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00fead: 10 fb

[	POP DE] Z80:11cyc, R800:5cyc
00feaf: d1

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00feb0: 19

[	EX DE , HL] Z80:5cyc, R800:1cyc
00feb1: eb

[	LD C , A] Z80:5cyc, R800:2cyc
00feb2: 4f

[	PUSH DE] Z80:12cyc, R800:6cyc
00feb3: d5

[	PUSH BC] Z80:12cyc, R800:6cyc
00feb4: c5

[	LD B , 1] Z80:8cyc, R800:2cyc
00feb5: 06 01

[	LD HL , BUFFER] Z80:11cyc, R800:3cyc
00feb7: 21 00 c0

[	CALL RD_CARD] Z80:18cyc, R800:5cyc
00feba: cd 16 fe

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00febd: d8

[	LD HL , [ BUFFER ]] Z80:17cyc, R800:7cyc
00febe: 2a 00 c0

[	LD DE , 66 * 256 + 65] Z80:11cyc, R800:3cyc
00fec1: 11 41 42

[	OR A , A] Z80:5cyc, R800:1cyc
00fec4: b7

[	SBC HL , DE] Z80:17cyc, R800:2cyc
00fec5: ed 52

[	POP BC] Z80:11cyc, R800:5cyc
00fec7: c1

[	POP DE] Z80:11cyc, R800:5cyc
00fec8: d1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fec9: c8

[	SCF] Z80:5cyc, R800:1cyc
00feca: 37

[	RET] Z80:11cyc, R800:5cyc
00fecb: c9

[PRINT :]
	label address: 0x00fecc

[	XOR A , A] Z80:5cyc, R800:1cyc
00fecc: af

[C_PRN :]
	label address: 0x00fecd

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00fecd: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00fece: 23

[	SUB A , 0X20] Z80:8cyc, R800:2cyc
00fecf: d6 20

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00fed1: d8

[	OUT [ DATP ] , A] Z80:12cyc, R800:10 or 9cyc
00fed2: d3 98

[	JR C_PRN] Z80:13cyc, R800:3cyc
00fed4: 18 f7

[END_P :]
	label address: 0x00fed6

[	INCLUDE ".//iplrom3.asm"] end

[REPEAT I , 0X800 - ( ( END_BEG - BEGIN ) + ( END_P - PROG ) )]
	Scope path: @REPEAT0:

	repeat begin
[	DB 0XFF]
00fed6: ff

[	DB 0XFF]
00fed7: ff

[	DB 0XFF]
00fed8: ff

[	DB 0XFF]
00fed9: ff

[	DB 0XFF]
00feda: ff

[	DB 0XFF]
00fedb: ff

[	DB 0XFF]
00fedc: ff

[	DB 0XFF]
00fedd: ff

[	DB 0XFF]
00fede: ff

[	DB 0XFF]
00fedf: ff

[	DB 0XFF]
00fee0: ff

[	DB 0XFF]
00fee1: ff

[	DB 0XFF]
00fee2: ff

[	DB 0XFF]
00fee3: ff

[	DB 0XFF]
00fee4: ff

[	DB 0XFF]
00fee5: ff

[	DB 0XFF]
00fee6: ff

[	DB 0XFF]
00fee7: ff

[	DB 0XFF]
00fee8: ff

[	DB 0XFF]
00fee9: ff

[	DB 0XFF]
00feea: ff

[	DB 0XFF]
00feeb: ff

[	DB 0XFF]
00feec: ff

[	DB 0XFF]
00feed: ff

[	DB 0XFF]
00feee: ff

[	DB 0XFF]
00feef: ff

[	DB 0XFF]
00fef0: ff

[	DB 0XFF]
00fef1: ff

[	DB 0XFF]
00fef2: ff

[	DB 0XFF]
00fef3: ff

[	DB 0XFF]
00fef4: ff

[	DB 0XFF]
00fef5: ff

[	DB 0XFF]
00fef6: ff

[	DB 0XFF]
00fef7: ff

[	DB 0XFF]
00fef8: ff

[	DB 0XFF]
00fef9: ff

[	DB 0XFF]
00fefa: ff

[	DB 0XFF]
00fefb: ff

[	DB 0XFF]
00fefc: ff

[	DB 0XFF]
00fefd: ff

[	DB 0XFF]
00fefe: ff

[	DB 0XFF]
00feff: ff

[	DB 0XFF]
00ff00: ff

[	DB 0XFF]
00ff01: ff

[	DB 0XFF]
00ff02: ff

[	DB 0XFF]
00ff03: ff

[	DB 0XFF]
00ff04: ff

[	DB 0XFF]
00ff05: ff

[	DB 0XFF]
00ff06: ff

[	DB 0XFF]
00ff07: ff

[	DB 0XFF]
00ff08: ff

[	DB 0XFF]
00ff09: ff

[	DB 0XFF]
00ff0a: ff

[	DB 0XFF]
00ff0b: ff

[	DB 0XFF]
00ff0c: ff

[	DB 0XFF]
00ff0d: ff

[	DB 0XFF]
00ff0e: ff

[	DB 0XFF]
00ff0f: ff

[	DB 0XFF]
00ff10: ff

[	DB 0XFF]
00ff11: ff

[	DB 0XFF]
00ff12: ff

[	DB 0XFF]
00ff13: ff

[	DB 0XFF]
00ff14: ff

[	DB 0XFF]
00ff15: ff

[	DB 0XFF]
00ff16: ff

[	DB 0XFF]
00ff17: ff

[	DB 0XFF]
00ff18: ff

[	DB 0XFF]
00ff19: ff

[	DB 0XFF]
00ff1a: ff

[	DB 0XFF]
00ff1b: ff

[	DB 0XFF]
00ff1c: ff

[	DB 0XFF]
00ff1d: ff

[	DB 0XFF]
00ff1e: ff

[	DB 0XFF]
00ff1f: ff

[	DB 0XFF]
00ff20: ff

[	DB 0XFF]
00ff21: ff

[	DB 0XFF]
00ff22: ff

[	DB 0XFF]
00ff23: ff

[	DB 0XFF]
00ff24: ff

[	DB 0XFF]
00ff25: ff

[	DB 0XFF]
00ff26: ff

[	DB 0XFF]
00ff27: ff

[	DB 0XFF]
00ff28: ff

[	DB 0XFF]
00ff29: ff

[	DB 0XFF]
00ff2a: ff

[	DB 0XFF]
00ff2b: ff

[	DB 0XFF]
00ff2c: ff

[	DB 0XFF]
00ff2d: ff

[	DB 0XFF]
00ff2e: ff

[	DB 0XFF]
00ff2f: ff

[	DB 0XFF]
00ff30: ff

[	DB 0XFF]
00ff31: ff

[	DB 0XFF]
00ff32: ff

[	DB 0XFF]
00ff33: ff

[	DB 0XFF]
00ff34: ff

[	DB 0XFF]
00ff35: ff

[	DB 0XFF]
00ff36: ff

[	DB 0XFF]
00ff37: ff

[	DB 0XFF]
00ff38: ff

[	DB 0XFF]
00ff39: ff

[	DB 0XFF]
00ff3a: ff

[	DB 0XFF]
00ff3b: ff

[	DB 0XFF]
00ff3c: ff

[	DB 0XFF]
00ff3d: ff

[	DB 0XFF]
00ff3e: ff

[	DB 0XFF]
00ff3f: ff

[	DB 0XFF]
00ff40: ff

[	DB 0XFF]
00ff41: ff

[	DB 0XFF]
00ff42: ff

[	DB 0XFF]
00ff43: ff

[	DB 0XFF]
00ff44: ff

[	DB 0XFF]
00ff45: ff

[	DB 0XFF]
00ff46: ff

[	DB 0XFF]
00ff47: ff

[	DB 0XFF]
00ff48: ff

[	DB 0XFF]
00ff49: ff

[	DB 0XFF]
00ff4a: ff

[	DB 0XFF]
00ff4b: ff

[	DB 0XFF]
00ff4c: ff

[	DB 0XFF]
00ff4d: ff

[	DB 0XFF]
00ff4e: ff

[	DB 0XFF]
00ff4f: ff

[	DB 0XFF]
00ff50: ff

[	DB 0XFF]
00ff51: ff

[	DB 0XFF]
00ff52: ff

[	DB 0XFF]
00ff53: ff

[	DB 0XFF]
00ff54: ff

[	DB 0XFF]
00ff55: ff

[	DB 0XFF]
00ff56: ff

[	DB 0XFF]
00ff57: ff

[	DB 0XFF]
00ff58: ff

[	DB 0XFF]
00ff59: ff

[	DB 0XFF]
00ff5a: ff

[	DB 0XFF]
00ff5b: ff

[	DB 0XFF]
00ff5c: ff

[	DB 0XFF]
00ff5d: ff

[	DB 0XFF]
00ff5e: ff

[	DB 0XFF]
00ff5f: ff

[	DB 0XFF]
00ff60: ff

[	DB 0XFF]
00ff61: ff

[	DB 0XFF]
00ff62: ff

[	DB 0XFF]
00ff63: ff

[	DB 0XFF]
00ff64: ff

[	DB 0XFF]
00ff65: ff

[	DB 0XFF]
00ff66: ff

[	DB 0XFF]
00ff67: ff

[	DB 0XFF]
00ff68: ff

[	DB 0XFF]
00ff69: ff

[	DB 0XFF]
00ff6a: ff

[	DB 0XFF]
00ff6b: ff

[	DB 0XFF]
00ff6c: ff

[	DB 0XFF]
00ff6d: ff

[	DB 0XFF]
00ff6e: ff

[	DB 0XFF]
00ff6f: ff

[	DB 0XFF]
00ff70: ff

[	DB 0XFF]
00ff71: ff

[	DB 0XFF]
00ff72: ff

[	DB 0XFF]
00ff73: ff

[	DB 0XFF]
00ff74: ff

[	DB 0XFF]
00ff75: ff

[	DB 0XFF]
00ff76: ff

[	DB 0XFF]
00ff77: ff

[	DB 0XFF]
00ff78: ff

[	DB 0XFF]
00ff79: ff

[	DB 0XFF]
00ff7a: ff

[	DB 0XFF]
00ff7b: ff

[	DB 0XFF]
00ff7c: ff

[	DB 0XFF]
00ff7d: ff

[	DB 0XFF]
00ff7e: ff

[	DB 0XFF]
00ff7f: ff

[	DB 0XFF]
00ff80: ff

[	DB 0XFF]
00ff81: ff

[	DB 0XFF]
00ff82: ff

[	DB 0XFF]
00ff83: ff

[	DB 0XFF]
00ff84: ff

[	DB 0XFF]
00ff85: ff

[	DB 0XFF]
00ff86: ff

[	DB 0XFF]
00ff87: ff

[	DB 0XFF]
00ff88: ff

[	DB 0XFF]
00ff89: ff

[	DB 0XFF]
00ff8a: ff

[	DB 0XFF]
00ff8b: ff

[	DB 0XFF]
00ff8c: ff

[	DB 0XFF]
00ff8d: ff

[	DB 0XFF]
00ff8e: ff

[	DB 0XFF]
00ff8f: ff

[	DB 0XFF]
00ff90: ff

[	DB 0XFF]
00ff91: ff

[	DB 0XFF]
00ff92: ff

[	DB 0XFF]
00ff93: ff

[	DB 0XFF]
00ff94: ff

[	DB 0XFF]
00ff95: ff

[	DB 0XFF]
00ff96: ff

[	DB 0XFF]
00ff97: ff

[	DB 0XFF]
00ff98: ff

[	DB 0XFF]
00ff99: ff

[	DB 0XFF]
00ff9a: ff

[	DB 0XFF]
00ff9b: ff

[	DB 0XFF]
00ff9c: ff

[	DB 0XFF]
00ff9d: ff

[	DB 0XFF]
00ff9e: ff

[	DB 0XFF]
00ff9f: ff

[	DB 0XFF]
00ffa0: ff

[	DB 0XFF]
00ffa1: ff

[	DB 0XFF]
00ffa2: ff

[	DB 0XFF]
00ffa3: ff

[	DB 0XFF]
00ffa4: ff

[	DB 0XFF]
00ffa5: ff

[	DB 0XFF]
00ffa6: ff

[	DB 0XFF]
00ffa7: ff

[	DB 0XFF]
00ffa8: ff

[	DB 0XFF]
00ffa9: ff

[	DB 0XFF]
00ffaa: ff

[	DB 0XFF]
00ffab: ff

[	DB 0XFF]
00ffac: ff

[	DB 0XFF]
00ffad: ff

[	DB 0XFF]
00ffae: ff

[	DB 0XFF]
00ffaf: ff

[	DB 0XFF]
00ffb0: ff

[	DB 0XFF]
00ffb1: ff

[	DB 0XFF]
00ffb2: ff

[	DB 0XFF]
00ffb3: ff

[	DB 0XFF]
00ffb4: ff

[	DB 0XFF]
00ffb5: ff

[	DB 0XFF]
00ffb6: ff

[	DB 0XFF]
00ffb7: ff

[	DB 0XFF]
00ffb8: ff

[	DB 0XFF]
00ffb9: ff

[	DB 0XFF]
00ffba: ff

[	DB 0XFF]
00ffbb: ff

[	DB 0XFF]
00ffbc: ff

[	DB 0XFF]
00ffbd: ff

[	DB 0XFF]
00ffbe: ff

[	DB 0XFF]
00ffbf: ff

[	DB 0XFF]
00ffc0: ff

[	DB 0XFF]
00ffc1: ff

[	DB 0XFF]
00ffc2: ff

[	DB 0XFF]
00ffc3: ff

[	DB 0XFF]
00ffc4: ff

[	DB 0XFF]
00ffc5: ff

[	DB 0XFF]
00ffc6: ff

[	DB 0XFF]
00ffc7: ff

[	DB 0XFF]
00ffc8: ff

[	DB 0XFF]
00ffc9: ff

[	DB 0XFF]
00ffca: ff

[	DB 0XFF]
00ffcb: ff

[	DB 0XFF]
00ffcc: ff

[	DB 0XFF]
00ffcd: ff

[	DB 0XFF]
00ffce: ff

[	DB 0XFF]
00ffcf: ff

[	DB 0XFF]
00ffd0: ff

[	DB 0XFF]
00ffd1: ff

[	DB 0XFF]
00ffd2: ff

[	DB 0XFF]
00ffd3: ff

[	DB 0XFF]
00ffd4: ff

[	DB 0XFF]
00ffd5: ff

[	DB 0XFF]
00ffd6: ff

[	DB 0XFF]
00ffd7: ff

[	DB 0XFF]
00ffd8: ff

[	DB 0XFF]
00ffd9: ff

	repeat end
	Scope path: 



[IF ( SKIP_MESSAGE - HEADER ) > ( 4 * 40 )]

[ELSE]

MESSAGE: Message.asm length is OK.: ocm_load.asm(115)
[ENDIF]
	Selected {ELSE} block.


<< label >>
@REPEAT0:I 259 ( 0x103 )
BEGIN 0 ( 0x0 )
BUFFER 49152 ( 0xc000 )
CHCARS 280 ( 0x118 )
CHCARS_END 1048 ( 0x418 )
CIKL_1 65173 ( 0xfe95 )
CIKL_2 65194 ( 0xfeaa )
CIKL_3 64731 ( 0xfcdb )
CIKL_4 64927 ( 0xfd9f )
CIKL_5 65071 ( 0xfe2f )
CIKL_6 65098 ( 0xfe4a )
CIKL_7 65125 ( 0xfe65 )
CIKL_I 64976 ( 0xfdd0 )
CLEAR1 205 ( 0xcd )
CMDP 153 ( 0x99 )
COM_OK 64997 ( 0xfde5 )
COPYCHCARS 193 ( 0xc1 )
CORR 65005 ( 0xfded )
C_PRN 65229 ( 0xfecd )
DATP 152 ( 0x98 )
DAT_99 234 ( 0xea )
DAT_9A 248 ( 0xf8 )
END_BEG 1062 ( 0x426 )
END_P 65238 ( 0xfed6 )
EPCS64 1 ( 0x1 )
ERR_LD 64604 ( 0xfc5c )
HEAD 4 ( 0x4 )
HEADER 4 ( 0x4 )
INIT0OK 65015 ( 0xfdf7 )
INIT_C 64938 ( 0xfdaa )
INIT_SD 64936 ( 0xfda8 )
LD_BIOS 64635 ( 0xfc7b )
LD_EPCS 64711 ( 0xfcc7 )
LOAD_BLOCKS 64670 ( 0xfc9e )
MMC_ 64986 ( 0xfdda )
PASS_1 65183 ( 0xfe9f )
PASS_2 65089 ( 0xfe41 )
PASS_3 65105 ( 0xfe51 )
PRINT 65228 ( 0xfecc )
PRM_ 64789 ( 0xfd15 )
PRM_2 64797 ( 0xfd1d )
PRM_EPCS 64777 ( 0xfd09 )
PRM_ERROR 64762 ( 0xfcfa )
PRM_SD 64784 ( 0xfd10 )
PRM_STEP 64749 ( 0xfced )
PROG 64512 ( 0xfc00 )
PR_STR 223 ( 0xdf )
P_READ 64685 ( 0xfcad )
RD_CARD 65046 ( 0xfe16 )
RD_EPCS 64566 ( 0xfc36 )
RD_SD 64583 ( 0xfc47 )
REINIT 65039 ( 0xfe0f )
SDBIOS_LEN 32 ( 0x20 )
SET0CMD 64888 ( 0xfd78 )
SET41CMD 64852 ( 0xfd54 )
SET8CMD 64870 ( 0xfd66 )
SET_ 64924 ( 0xfd9c )
SET_CMD 64893 ( 0xfd7d )
SET_CRC 64922 ( 0xfd9a )
SET_F4_DEVICE 64699 ( 0xfcbb )
SET_SD 64911 ( 0xfd8f )
SKIP_MESSAGE 164 ( 0xa4 )
SRC_FAT 65092 ( 0xfe44 )
START 1048 ( 0x418 )
ST_BIOS 64609 ( 0xfc61 )
ST_PROG 64512 ( 0xfc00 )
TEST_BIOS 65147 ( 0xfe7b )
TEST_MBR 65119 ( 0xfe5f )
TYPE_C 64897 ( 0xfd81 )
T_EPCS 64823 ( 0xfd37 )
T_ERR 64841 ( 0xfd49 )
T_SD 64805 ( 0xfd25 )
YES_FAT 64556 ( 0xfc2c )
ZG_68 280 ( 0x118 )
