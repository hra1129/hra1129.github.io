1. PSGのレジスタへのアクセス
1-1. BIOS によるアクセス
	BIOS には下記のルーチンが用意されている。
	ZMA用の msx.asm でも定義済みなので、include すれば、そのままの名前を
	利用可能になる。

	GICINI .... PSGの初期化。PSGの全レジスタを初期状態に再設定する。
	WRTPSG .... PSGのレジスタに値を書き込む。Aにレジスタ番号。Eに書き込む値。
	RDPSG ..... PSGのレジスタを読み出す。Aにレジスタ番号。Aに読み出した値が返る。

1-2. I/Oポート直接操作によるアクセス
	0xA0番地がアドレスラッチ, 0xA1番地がデータ書き込み, 0xA2番地がデータ読みだし
	というシンプルな構成になっています。

	MSX-BASIC では、PSG のレジスタ R#n に v を書き込みたい場合、下記のように記述
	します。
	
		SOUND n,v
	
	これと同じことをアセンブラで記述するには、0xA0 に n を、0xA1 に v を
	書き込めば OK です。例えば下記のように記述します。

		ld		c, 0xA0
		ld		a, n		; PSGレジスタ番号
		out		[c], a
		inc		c
		ld		a, v		; 書き込みたいデータ
		out		[c], a

	たったこれだけです。
	ZMAの msx.asm では、0xA0〜0xA2 を下記の名前で定義してあります。

		IO_PSG_ADR					:= 0xA0
		IO_PSG_DATA_WR				:= 0xA1
		IO_PSG_DATA_RD				:= 0xA2

	この名前を使って上のサンプルを書き換えると下記のようになります。

		ld		c, IO_PSG_ADR
		ld		a, n		; PSGレジスタ番号
		out		[c], a
		inc		c
		ld		a, v		; 書き込みたいデータ
		out		[c], a

	これを下記のようにマクロ宣言しても良いでしょう。

		SOUND	MACRO	n, v
			ld		c, IO_PSG_ADR
			ld		a, n		; PSGレジスタ番号
			out		[c], a
			inc		c
			ld		a, v		; 書き込みたいデータ
			out		[c], a
		ENDM

1-3. ジョイスティック
	MSXのジョイスティックポートは、この PSG に接続されている。
	R#7 の bit6 がジョイスティックポート#1, bit7 がジョイスティックポート#2 に
	対応しており、それら bit に 0 を書き込むと入力ポート、1 を書き込むと出力ポート
	になる。
	ジョイスティックをつなげて、入力デバイスとして利用する場合は当然 0 を書き込む。

	その状態で、R#14 を読み込めばジョイスティックポート#1 の状態を、
	R#15 を読み込めばジョイスティックポート#2 の状態を取得できる。

	キーボードのカーソルキー等は繋がっていないので、キーボードでも操作できるように
	するためには、別途キー状態取得の手段を使ってカーソルキー情報を取得し、
	ジョイスティック情報とミックスする処理を書かなければならない。

2. PSGの音程周波数設定
	添付の図面を参照

------------------------------------------------------------------------------
2019/07/14	t.hara
