Z80 Macro Assembler ZMA v1.0.9
=====================================================
Programmed by t.hara

<< code >>
[	INCLUDE "..\..\../include//msx.asm"] begin
Define macro {ROM_HEADER MACRO INIT}

Define macro {BSAVE_HEADER MACRO SADDR , EADDR , EXEC}

Define macro {ROM_ALIGN MACRO}

Define macro {USE_WAIT_VDP_COMMAND MACRO INTR_CTRL}

Define macro {USE_VDP_COMMAND MACRO INTR_CTRL}

[	INCLUDE "..\..\../include//msx.asm"] end

((BSAVE_HEADER START_ADDRESS , END_ADDRESS , ENTRY_POINT))
	Scope path: @MACRO0:
[	DEFB 0XFE]
000000: fe

[	DEFW START_ADDRESS]
000001: 00 a0

[	DEFW END_ADDRESS]
000003: 35 be

[	DEFW ENTRY_POINT]
000005: 00 a0

[	ORG 0XA000]
	code address: 0x00a000

[START_ADDRESS :]
	label address: 0x00a000

[	SCOPE ENTRY_POINT]
	Scope path: ENTRY_POINT:

[ENTRY_POINT ::]
	global label address: 0x00a000

[	CALL INITIALIZER] Z80:18cyc, R800:5cyc
00a000: cd 0c a0

[LOOP :]
	label address: 0x00a003

[	CALL TITLE_PHASE] Z80:18cyc, R800:5cyc
00a003: cd 40 a0

[	CALL MAIN_PHASE] Z80:18cyc, R800:5cyc
00a006: cd 47 a0

[	JP LOOP] Z80:11cyc, R800:5cyc
00a009: c3 03 a0

[	ENDSCOPE]
	Scope path: 

[	SCOPE INITIALIZER]
	Scope path: INITIALIZER:

[INITIALIZER ::]
	global label address: 0x00a00c

[	CALL BGMDRIVER_INITIALIZE] Z80:18cyc, R800:5cyc
00a00c: cd c5 b6

[	CALL INTERRUPT_INITIALIZER] Z80:18cyc, R800:5cyc
00a00f: cd 9c af

[	DI] Z80:5cyc, R800:2cyc
00a012: f3

[	CALL SD_INITIALIZER] Z80:18cyc, R800:5cyc
00a013: cd d3 b0

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00a016: 0e 99

[	LD A , [ REG9SAV ]] Z80:14cyc, R800:6cyc
00a018: 3a e8 ff

[	AND A , 0B0111_1111] Z80:8cyc, R800:2cyc
00a01b: e6 7f

[	LD [ REG9SAV ] , A] Z80:14cyc, R800:6cyc
00a01d: 32 e8 ff

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a020: ed 79

[	LD A , 9 | 0X80] Z80:8cyc, R800:2cyc
00a022: 3e 89

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a024: ed 79

[	LD A , 0B1110_1111] Z80:8cyc, R800:2cyc
00a026: 3e ef

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a028: ed 79

[	LD A , 5 | 0X80] Z80:8cyc, R800:2cyc
00a02a: 3e 85

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a02c: ed 79

[	LD A , 0B0000_0011] Z80:8cyc, R800:2cyc
00a02e: 3e 03

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a030: ed 79

[	LD A , 11 | 0X80] Z80:8cyc, R800:2cyc
00a032: 3e 8b

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a034: ed 79

[	LD A , 0B0011_1111] Z80:8cyc, R800:2cyc
00a036: 3e 3f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a038: ed 79

[	LD A , 6 | 0X80] Z80:8cyc, R800:2cyc
00a03a: 3e 86

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a03c: ed 79

[	EI] Z80:5cyc, R800:1cyc
00a03e: fb

[	RET] Z80:11cyc, R800:5cyc
00a03f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE TITLE_PHASE]
	Scope path: TITLE_PHASE:

[TITLE_PHASE ::]
	global label address: 0x00a040

[	CALL TITLE_INTERRUPT_INITIALIZER] Z80:18cyc, R800:5cyc
00a040: cd d1 af

[	CALL TITLE_PROCESS] Z80:18cyc, R800:5cyc
00a043: cd 6c ad

[	RET] Z80:11cyc, R800:5cyc
00a046: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE MAIN_PHASE]
	Scope path: MAIN_PHASE:

[MAIN_PHASE ::]
	global label address: 0x00a047

[	XOR A , A] Z80:5cyc, R800:1cyc
00a047: af

[	LD [ VSCROLL ] , A] Z80:14cyc, R800:6cyc
00a048: 32 30 be

[	LD [ VSYNC_FLAG ] , A] Z80:14cyc, R800:6cyc
00a04b: 32 33 be

[	DEC A] Z80:5cyc, R800:1cyc
00a04e: 3d

[	LD [ VSCROLL_NEXT ] , A] Z80:14cyc, R800:6cyc
00a04f: 32 31 be

[	LD A , 2] Z80:8cyc, R800:2cyc
00a052: 3e 02

[	LD [ DRAW_PAGE ] , A] Z80:14cyc, R800:6cyc
00a054: 32 32 be

[	CALL BACKGROUND_INITIALIZE] Z80:18cyc, R800:5cyc
00a057: cd d6 aa

[	CALL PLAYER_INITIALIZER] Z80:18cyc, R800:5cyc
00a05a: cd f0 a0

[	CALL FLAG_INITIALIZER] Z80:18cyc, R800:5cyc
00a05d: cd 81 a1

[	CALL BIGCHAR_INITIALIZER] Z80:18cyc, R800:5cyc
00a060: cd 3b a2

[	CALL SHOT_INITIALIZER] Z80:18cyc, R800:5cyc
00a063: cd 9d a7

[	CALL MAIN_INTERRUPT_INITIALIZER] Z80:18cyc, R800:5cyc
00a066: cd 06 b0

[	LD HL , 0] Z80:11cyc, R800:3cyc
00a069: 21 00 00

[	LD [ SCORE ] , HL] Z80:17cyc, R800:7cyc
00a06c: 22 2c ad

[	CALL PUT_SCORE_INITIALIZER] Z80:18cyc, R800:5cyc
00a06f: cd 57 ac

[	LD HL , BGM_DATA] Z80:11cyc, R800:3cyc
00a072: 21 14 bd

[	CALL BGMDRIVER_PLAY] Z80:18cyc, R800:5cyc
00a075: cd d3 b6

[	DI] Z80:5cyc, R800:2cyc
00a078: f3

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00a079: 0e 99

[	LD A , [ REG1SAV ]] Z80:14cyc, R800:6cyc
00a07b: 3a e0 f3

[	OR A , 0B0100_0000] Z80:8cyc, R800:2cyc
00a07e: f6 40

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a080: ed 79

[	LD A , 1 | 0X80] Z80:8cyc, R800:2cyc
00a082: 3e 81

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a084: ed 79

[	EI] Z80:5cyc, R800:1cyc
00a086: fb

[MAIN_LOOP ::]
	global label address: 0x00a087

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00a087: 3a 32 be

[	XOR A , 2] Z80:8cyc, R800:2cyc
00a08a: ee 02

[	LD [ DRAW_PAGE ] , A] Z80:14cyc, R800:6cyc
00a08c: 32 32 be

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a08f: 3a 31 be

[	LD [ VSCROLL ] , A] Z80:14cyc, R800:6cyc
00a092: 32 30 be

[	DEC A] Z80:5cyc, R800:1cyc
00a095: 3d

[	LD [ VSCROLL_NEXT ] , A] Z80:14cyc, R800:6cyc
00a096: 32 31 be

[	CALL WAIT_VSYNC] Z80:18cyc, R800:5cyc
00a099: cd e4 a0

[	CALL BACKGROUND] Z80:18cyc, R800:5cyc
00a09c: cd 5a ab

[SKIP_VSCROLL :]
	label address: 0x00a09f

[	CALL PUT_SCORE] Z80:18cyc, R800:5cyc
00a09f: cd 67 ac

[	CALL SD_BEGIN_FRAME] Z80:18cyc, R800:5cyc
00a0a2: cd 08 b1

[	CALL BIGCHAR_BG_MOVE_1] Z80:18cyc, R800:5cyc
00a0a5: cd f4 a2

[	CALL PLAYER_MOVE] Z80:18cyc, R800:5cyc
00a0a8: cd ff a0

[	CALL BIGCHAR_BG_MOVE_2] Z80:18cyc, R800:5cyc
00a0ab: cd a8 a4

[	CALL FLAG_PROCESS] Z80:18cyc, R800:5cyc
00a0ae: cd 8b a1

[	CALL BIGCHAR_BG_MOVE_3] Z80:18cyc, R800:5cyc
00a0b1: cd 0a a5

[	CALL BACKGROUND] Z80:18cyc, R800:5cyc
00a0b4: cd 5a ab

[	CALL WAIT_VSYNC] Z80:18cyc, R800:5cyc
00a0b7: cd e4 a0

[	CALL BIGCHAR_BG_MOVE_4] Z80:18cyc, R800:5cyc
00a0ba: cd 75 a5

[	CALL SHOT_PROCESS] Z80:18cyc, R800:5cyc
00a0bd: cd b6 a7

[	CALL BIGCHAR_BG_MOVE_5] Z80:18cyc, R800:5cyc
00a0c0: cd d1 a5

[	CALL BIGCHAR_SP_MOVE] Z80:18cyc, R800:5cyc
00a0c3: cd 52 a2

[	CALL BIGCHAR_BG_MOVE_6] Z80:18cyc, R800:5cyc
00a0c6: cd 33 a6

[	CALL SD_FINALIZE] Z80:18cyc, R800:5cyc
00a0c9: cd d8 b2

[	LD A , [ PLAYER_IS_CRASHED ]] Z80:14cyc, R800:6cyc
00a0cc: 3a 80 a1

[	CP A , 1] Z80:8cyc, R800:2cyc
00a0cf: fe 01

[	JP NZ , MAIN_LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a0d1: c2 87 a0

[	DI] Z80:5cyc, R800:2cyc
00a0d4: f3

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00a0d5: 0e 99

[	LD A , [ REG1SAV ]] Z80:14cyc, R800:6cyc
00a0d7: 3a e0 f3

[	AND A , 0B1011_1111] Z80:8cyc, R800:2cyc
00a0da: e6 bf

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a0dc: ed 79

[	LD A , 1 | 0X80] Z80:8cyc, R800:2cyc
00a0de: 3e 81

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a0e0: ed 79

[	EI] Z80:5cyc, R800:1cyc
00a0e2: fb

[	RET] Z80:11cyc, R800:5cyc
00a0e3: c9

[WAIT_VSYNC :]
	label address: 0x00a0e4

[	LD A , [ VSYNC_FLAG ]] Z80:14cyc, R800:6cyc
00a0e4: 3a 33 be

[	OR A , A] Z80:5cyc, R800:1cyc
00a0e7: b7

[	JP Z , WAIT_VSYNC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a0e8: ca e4 a0

[	XOR A , A] Z80:5cyc, R800:1cyc
00a0eb: af

[	LD [ VSYNC_FLAG ] , A] Z80:14cyc, R800:6cyc
00a0ec: 32 33 be

[	RET] Z80:11cyc, R800:5cyc
00a0ef: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//player.asm"] begin
[	SCOPE PLAYER_MOVE]
	Scope path: PLAYER_MOVE:

[PLAYER_INITIALIZER ::]
	global label address: 0x00a0f0

[	XOR A , A] Z80:5cyc, R800:1cyc
00a0f0: af

[	LD [ PLAYER_IS_CRASHED ] , A] Z80:14cyc, R800:6cyc
00a0f1: 32 80 a1

[	LD A , 106 - 8] Z80:8cyc, R800:2cyc
00a0f4: 3e 62

[	LD [ PLAYER_Y ] , A] Z80:14cyc, R800:6cyc
00a0f6: 32 7e a1

[	LD A , 128 - 8] Z80:8cyc, R800:2cyc
00a0f9: 3e 78

[	LD [ PLAYER_X ] , A] Z80:14cyc, R800:6cyc
00a0fb: 32 7f a1

[	RET] Z80:11cyc, R800:5cyc
00a0fe: c9

[PLAYER_MOVE ::]
	global label address: 0x00a0ff

[	LD A , [ PLAYER_IS_CRASHED ]] Z80:14cyc, R800:6cyc
00a0ff: 3a 80 a1

[	OR A , A] Z80:5cyc, R800:1cyc
00a102: b7

[	JP NZ , CLASHED_EFFECT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a103: c2 53 a1

[	XOR A , A] Z80:5cyc, R800:1cyc
00a106: af

[	CALL GTSTICK] Z80:18cyc, R800:5cyc
00a107: cd d5 00

[	PUSH AF] Z80:12cyc, R800:6cyc
00a10a: f5

[	LD A , 1] Z80:8cyc, R800:2cyc
00a10b: 3e 01

[	CALL GTSTICK] Z80:18cyc, R800:5cyc
00a10d: cd d5 00

[	POP BC] Z80:11cyc, R800:5cyc
00a110: c1

[	OR A , B] Z80:5cyc, R800:1cyc
00a111: b0

[	LD C , A] Z80:5cyc, R800:2cyc
00a112: 4f

[	LD B , 0] Z80:8cyc, R800:2cyc
00a113: 06 00

[	LD HL , DIRECTION_Y_TABLE] Z80:11cyc, R800:3cyc
00a115: 21 6c a1

[	ADC HL , BC] Z80:17cyc, R800:2cyc
00a118: ed 4a

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00a11a: 4e

[	LD A , [ PLAYER_Y ]] Z80:14cyc, R800:6cyc
00a11b: 3a 7e a1

[	ADD A , C] Z80:5cyc, R800:1cyc
00a11e: 81

[	CP A , 16 - 2] Z80:8cyc, R800:2cyc
00a11f: fe 0e

[	JP NZ , SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a121: c2 26 a1

[	LD A , 16] Z80:8cyc, R800:2cyc
00a124: 3e 10

[SKIP0 :]
	label address: 0x00a126

[	CP A , 192 - 16 + 2] Z80:8cyc, R800:2cyc
00a126: fe b2

[	JP NZ , SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a128: c2 2d a1

[	LD A , 192 - 16] Z80:8cyc, R800:2cyc
00a12b: 3e b0

[SKIP1 :]
	label address: 0x00a12d

[	LD E , A] Z80:5cyc, R800:2cyc
00a12d: 5f

[	LD [ PLAYER_Y ] , A] Z80:14cyc, R800:6cyc
00a12e: 32 7e a1

[	LD C , 9] Z80:8cyc, R800:2cyc
00a131: 0e 09

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a133: 09

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00a134: 4e

[	LD A , [ PLAYER_X ]] Z80:14cyc, R800:6cyc
00a135: 3a 7f a1

[	ADD A , C] Z80:5cyc, R800:1cyc
00a138: 81

[	CP A , 0 - 2] Z80:8cyc, R800:2cyc
00a139: fe fe

[	JP NZ , SKIP2] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a13b: c2 3f a1

[	XOR A , A] Z80:5cyc, R800:1cyc
00a13e: af

[SKIP2 :]
	label address: 0x00a13f

[	CP A , 240 + 2] Z80:8cyc, R800:2cyc
00a13f: fe f2

[	JP NZ , SKIP3] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a141: c2 46 a1

[	LD A , 240] Z80:8cyc, R800:2cyc
00a144: 3e f0

[SKIP3 :]
	label address: 0x00a146

[	LD D , A] Z80:5cyc, R800:2cyc
00a146: 57

[	LD [ PLAYER_X ] , A] Z80:14cyc, R800:6cyc
00a147: 32 7f a1

[PUT_PLAYER :]
	label address: 0x00a14a

[	XOR A , A] Z80:5cyc, R800:1cyc
00a14a: af

[	LD B , A] Z80:5cyc, R800:2cyc
00a14b: 47

[	LD HL , PLAYER_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a14c: 21 85 b5

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a14f: cd 70 b1

[	RET] Z80:11cyc, R800:5cyc
00a152: c9

[CLASHED_EFFECT :]
	label address: 0x00a153

[	DEC A] Z80:5cyc, R800:1cyc
00a153: 3d

[	LD [ PLAYER_IS_CRASHED ] , A] Z80:14cyc, R800:6cyc
00a154: 32 80 a1

[	AND A , 1] Z80:8cyc, R800:2cyc
00a157: e6 01

[	JP Z , CLASHED_EFFECT_BLIND] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a159: ca 67 a1

[	LD A , [ PLAYER_X ]] Z80:14cyc, R800:6cyc
00a15c: 3a 7f a1

[	LD D , A] Z80:5cyc, R800:2cyc
00a15f: 57

[	LD A , [ PLAYER_Y ]] Z80:14cyc, R800:6cyc
00a160: 3a 7e a1

[	LD E , A] Z80:5cyc, R800:2cyc
00a163: 5f

[	JP PUT_PLAYER] Z80:11cyc, R800:5cyc
00a164: c3 4a a1

[CLASHED_EFFECT_BLIND :]
	label address: 0x00a167

[	LD E , 192] Z80:8cyc, R800:2cyc
00a167: 1e c0

[	JP PUT_PLAYER] Z80:11cyc, R800:5cyc
00a169: c3 4a a1

[DIRECTION_Y_TABLE :]
	label address: 0x00a16c

[	DB 0]
00a16c: 00

[	DB - 2]
00a16d: fe

[	DB - 2]
00a16e: fe

[	DB 0]
00a16f: 00

[	DB 2]
00a170: 02

[	DB 2]
00a171: 02

[	DB 2]
00a172: 02

[	DB 0]
00a173: 00

[	DB - 2]
00a174: fe

[DIRECTION_X_TABLE :]
	label address: 0x00a175

[	DB 0]
00a175: 00

[	DB 0]
00a176: 00

[	DB 2]
00a177: 02

[	DB 2]
00a178: 02

[	DB 2]
00a179: 02

[	DB 0]
00a17a: 00

[	DB - 2]
00a17b: fe

[	DB - 2]
00a17c: fe

[	DB - 2]
00a17d: fe

[PLAYER_Y ::]
	global label address: 0x00a17e

[	DB 0]
00a17e: 00

[PLAYER_X ::]
	global label address: 0x00a17f

[	DB 0]
00a17f: 00

[PLAYER_IS_CRASHED ::]
	global label address: 0x00a180

[	DB 0]
00a180: 00

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//player.asm"] end

[	INCLUDE ".//flag.asm"] begin
[	SCOPE FLAG_PROCESS]
	Scope path: FLAG_PROCESS:

[FLAG_INITIALIZER ::]
	global label address: 0x00a181

[	LD A , 50] Z80:8cyc, R800:2cyc
00a181: 3e 32

[	LD [ FLAG_WAIT_COUNTER ] , A] Z80:14cyc, R800:6cyc
00a183: 32 0b a2

[	XOR A , A] Z80:5cyc, R800:1cyc
00a186: af

[	LD [ FLAG_ENABLE ] , A] Z80:14cyc, R800:6cyc
00a187: 32 0c a2

[	RET] Z80:11cyc, R800:5cyc
00a18a: c9

[FLAG_PROCESS ::]
	global label address: 0x00a18b

[	LD A , [ FLAG_ENABLE ]] Z80:14cyc, R800:6cyc
00a18b: 3a 0c a2

[	OR A , A] Z80:5cyc, R800:1cyc
00a18e: b7

[	JP Z , FLAG_WAIT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a18f: ca e8 a1

[FLAG_MOVE :]
	label address: 0x00a192

[	LD A , [ FLAG_Y ]] Z80:14cyc, R800:6cyc
00a192: 3a 0e a2

[	INC A] Z80:5cyc, R800:1cyc
00a195: 3c

[	CP A , 192] Z80:8cyc, R800:2cyc
00a196: fe c0

[	JP C , FLAG_NORMAL_STATE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a198: da a1 a1

[	XOR A , A] Z80:5cyc, R800:1cyc
00a19b: af

[	LD [ FLAG_ENABLE ] , A] Z80:14cyc, R800:6cyc
00a19c: 32 0c a2

[	LD A , 192] Z80:8cyc, R800:2cyc
00a19f: 3e c0

[FLAG_NORMAL_STATE :]
	label address: 0x00a1a1

[	LD E , A] Z80:5cyc, R800:2cyc
00a1a1: 5f

[	LD [ FLAG_Y ] , A] Z80:14cyc, R800:6cyc
00a1a2: 32 0e a2

[	LD A , [ FLAG_X ]] Z80:14cyc, R800:6cyc
00a1a5: 3a 0d a2

[	LD D , A] Z80:5cyc, R800:2cyc
00a1a8: 57

[	LD B , 76] Z80:8cyc, R800:2cyc
00a1a9: 06 4c

[	LD HL , FLAG_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a1ab: 21 b5 b6

[	CALL SD_PUT_SPRITE_SINGLE] Z80:18cyc, R800:5cyc
00a1ae: cd 39 b2

[	LD A , [ PLAYER_IS_CRASHED ]] Z80:14cyc, R800:6cyc
00a1b1: 3a 80 a1

[	OR A , A] Z80:5cyc, R800:1cyc
00a1b4: b7

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a1b5: c0

[CHECK_CATCH_THE_FLAG_Y :]
	label address: 0x00a1b6

[	LD A , [ PLAYER_Y ]] Z80:14cyc, R800:6cyc
00a1b6: 3a 7e a1

[	LD C , A] Z80:5cyc, R800:2cyc
00a1b9: 4f

[	LD A , [ FLAG_Y ]] Z80:14cyc, R800:6cyc
00a1ba: 3a 0e a2

[	SUB A , C] Z80:5cyc, R800:1cyc
00a1bd: 91

[	JP NC , CHECK_CATCH_THE_FLAG_Y_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a1be: d2 c3 a1

[	NEG] Z80:10cyc, R800:2cyc
00a1c1: ed 44

[CHECK_CATCH_THE_FLAG_Y_SKIP0 :]
	label address: 0x00a1c3

[	CP A , 8] Z80:8cyc, R800:2cyc
00a1c3: fe 08

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a1c5: d0

[CHECK_CATCH_THE_FLAG_X :]
	label address: 0x00a1c6

[	LD A , [ PLAYER_X ]] Z80:14cyc, R800:6cyc
00a1c6: 3a 7f a1

[	LD C , A] Z80:5cyc, R800:2cyc
00a1c9: 4f

[	LD A , [ FLAG_X ]] Z80:14cyc, R800:6cyc
00a1ca: 3a 0d a2

[	SBC A , C] Z80:5cyc, R800:1cyc
00a1cd: 99

[	JP NC , CHECK_CATCH_THE_FLAG_X_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a1ce: d2 d3 a1

[	NEG] Z80:10cyc, R800:2cyc
00a1d1: ed 44

[CHECK_CATCH_THE_FLAG_X_SKIP0 :]
	label address: 0x00a1d3

[	CP A , 8] Z80:8cyc, R800:2cyc
00a1d3: fe 08

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a1d5: d0

[INCREMENT_SCORE :]
	label address: 0x00a1d6

[	LD HL , [ SCORE ]] Z80:17cyc, R800:7cyc
00a1d6: 2a 2c ad

[	INC HL] Z80:7cyc, R800:1cyc
00a1d9: 23

[	LD [ SCORE ] , HL] Z80:17cyc, R800:7cyc
00a1da: 22 2c ad

[	XOR A , A] Z80:5cyc, R800:1cyc
00a1dd: af

[	LD [ FLAG_ENABLE ] , A] Z80:14cyc, R800:6cyc
00a1de: 32 0c a2

[	LD HL , SE_GET_ITEM] Z80:11cyc, R800:3cyc
00a1e1: 21 0f a2

[	CALL BGMDRIVER_PLAY_SOUND_EFFECT] Z80:18cyc, R800:5cyc
00a1e4: cd 6b b7

[	RET] Z80:11cyc, R800:5cyc
00a1e7: c9

[FLAG_WAIT :]
	label address: 0x00a1e8

[	LD A , [ FLAG_WAIT_COUNTER ]] Z80:14cyc, R800:6cyc
00a1e8: 3a 0b a2

[	DEC A] Z80:5cyc, R800:1cyc
00a1eb: 3d

[	LD [ FLAG_WAIT_COUNTER ] , A] Z80:14cyc, R800:6cyc
00a1ec: 32 0b a2

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a1ef: c0

[	LD A , 50] Z80:8cyc, R800:2cyc
00a1f0: 3e 32

[	LD [ FLAG_WAIT_COUNTER ] , A] Z80:14cyc, R800:6cyc
00a1f2: 32 0b a2

[APPEAR_THE_FLAG :]
	label address: 0x00a1f5

[	CALL RANDOM] Z80:18cyc, R800:5cyc
00a1f5: cd bc b0

[	CP A , 240] Z80:8cyc, R800:2cyc
00a1f8: fe f0

[	JP C , NOT_ADJUST_RANDOM] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a1fa: da ff a1

[	AND A , 15] Z80:8cyc, R800:2cyc
00a1fd: e6 0f

[NOT_ADJUST_RANDOM :]
	label address: 0x00a1ff

[	LD [ FLAG_X ] , A] Z80:14cyc, R800:6cyc
00a1ff: 32 0d a2

[	XOR A , A] Z80:5cyc, R800:1cyc
00a202: af

[	LD [ FLAG_Y ] , A] Z80:14cyc, R800:6cyc
00a203: 32 0e a2

[	INC A] Z80:5cyc, R800:1cyc
00a206: 3c

[	LD [ FLAG_ENABLE ] , A] Z80:14cyc, R800:6cyc
00a207: 32 0c a2

[	RET] Z80:11cyc, R800:5cyc
00a20a: c9

[FLAG_WAIT_COUNTER :]
	label address: 0x00a20b

[	DB 50]
00a20b: 32

[FLAG_ENABLE :]
	label address: 0x00a20c

[	DB 0]
00a20c: 00

[FLAG_X :]
	label address: 0x00a20d

[	DB 0]
00a20d: 00

[FLAG_Y :]
	label address: 0x00a20e

[	DB 0]
00a20e: 00

[SE_GET_ITEM :]
	label address: 0x00a20f

[	DB 32]
00a20f: 20

[	DB BGM_SE_VOL]
00a210: 01

[	DB 12]
00a211: 0c

[	DB BGM_SE_FREQ]
00a212: 00

[	DW 30]
00a213: 1e 00

[	DB BGM_SE_WAIT]
00a215: 03

[	DB 1]
00a216: 01

[	DB BGM_SE_FREQ]
00a217: 00

[	DW 25]
00a218: 19 00

[	DB BGM_SE_WAIT]
00a21a: 03

[	DB 1]
00a21b: 01

[	DB BGM_SE_FREQ]
00a21c: 00

[	DW 20]
00a21d: 14 00

[	DB BGM_SE_WAIT]
00a21f: 03

[	DB 1]
00a220: 01

[	DB BGM_SE_FREQ]
00a221: 00

[	DW 10]
00a222: 0a 00

[	DB BGM_SE_WAIT]
00a224: 03

[	DB 1]
00a225: 01

[	DB BGM_SE_FREQ]
00a226: 00

[	DW 30]
00a227: 1e 00

[	DB BGM_SE_WAIT]
00a229: 03

[	DB 1]
00a22a: 01

[	DB BGM_SE_FREQ]
00a22b: 00

[	DW 25]
00a22c: 19 00

[	DB BGM_SE_WAIT]
00a22e: 03

[	DB 1]
00a22f: 01

[	DB BGM_SE_FREQ]
00a230: 00

[	DW 20]
00a231: 14 00

[	DB BGM_SE_WAIT]
00a233: 03

[	DB 1]
00a234: 01

[	DB BGM_SE_FREQ]
00a235: 00

[	DW 10]
00a236: 0a 00

[	DB BGM_SE_WAIT]
00a238: 03

[	DB 1]
00a239: 01

[	DB BGM_SE_END]
00a23a: 04

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//flag.asm"] end

[	INCLUDE ".//bigchar.asm"] begin
[	SCOPE BIGCHAR_SP_MOVE]
	Scope path: BIGCHAR_SP_MOVE:

[BIGCHAR_INITIALIZER ::]
	global label address: 0x00a23b

[	LD HL , - 200] Z80:11cyc, R800:3cyc
00a23b: 21 38 ff

[	LD [ BIGCHAR_Y ] , HL] Z80:17cyc, R800:7cyc
00a23e: 22 e2 a6

[	LD [ BIGCHAR_Y_SP ] , HL] Z80:17cyc, R800:7cyc
00a241: 22 e4 a6

[	LD A , 88 + 8 - 2] Z80:8cyc, R800:2cyc
00a244: 3e 5e

[	LD [ BG_BACKUP_TOP ] , A] Z80:14cyc, R800:6cyc
00a246: 32 e7 a6

[	XOR A , A] Z80:5cyc, R800:1cyc
00a249: af

[	LD [ BIGCHAR_Y_VSCROLL ] , A] Z80:14cyc, R800:6cyc
00a24a: 32 e6 a6

[	INC A] Z80:5cyc, R800:1cyc
00a24d: 3c

[	LD [ FIRST_FLAG ] , A] Z80:14cyc, R800:6cyc
00a24e: 32 e8 a6

[	RET] Z80:11cyc, R800:5cyc
00a251: c9

[BIGCHAR_SP_MOVE ::]
	global label address: 0x00a252

[	LD HL , [ BIGCHAR_Y_SP ]] Z80:17cyc, R800:7cyc
00a252: 2a e4 a6

[	LD BC , 80] Z80:11cyc, R800:3cyc
00a255: 01 50 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a258: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a259: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a25a: b7

[	JP NZ , END_OF_PUT_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a25b: c2 e2 a2

[	PUSH HL] Z80:12cyc, R800:6cyc
00a25e: e5

[	LD B , 56] Z80:8cyc, R800:2cyc
00a25f: 06 38

[	LD D , 88] Z80:8cyc, R800:2cyc
00a261: 16 58

[	LD E , L] Z80:5cyc, R800:2cyc
00a263: 5d

[	LD HL , ANDO_PART7_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a264: 21 65 b6

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a267: cd 70 b1

[	POP HL] Z80:11cyc, R800:5cyc
00a26a: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
00a26b: e5

[	LD B , 64] Z80:8cyc, R800:2cyc
00a26c: 06 40

[	LD D , 152] Z80:8cyc, R800:2cyc
00a26e: 16 98

[	LD E , L] Z80:5cyc, R800:2cyc
00a270: 5d

[	LD HL , ANDO_PART8_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a271: 21 85 b6

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a274: cd 70 b1

[	POP HL] Z80:11cyc, R800:5cyc
00a277: e1

[	LD BC , - 16] Z80:11cyc, R800:3cyc
00a278: 01 f0 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a27b: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a27c: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a27d: b7

[	JP NZ , END_OF_PUT_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a27e: c2 e2 a2

[	PUSH HL] Z80:12cyc, R800:6cyc
00a281: e5

[	LD B , 40] Z80:8cyc, R800:2cyc
00a282: 06 28

[	LD D , 80] Z80:8cyc, R800:2cyc
00a284: 16 50

[	LD E , L] Z80:5cyc, R800:2cyc
00a286: 5d

[	LD HL , ANDO_PART5_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a287: 21 25 b6

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a28a: cd 70 b1

[	POP HL] Z80:11cyc, R800:5cyc
00a28d: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
00a28e: e5

[	LD B , 48] Z80:8cyc, R800:2cyc
00a28f: 06 30

[	LD D , 160] Z80:8cyc, R800:2cyc
00a291: 16 a0

[	LD E , L] Z80:5cyc, R800:2cyc
00a293: 5d

[	LD HL , ANDO_PART6_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a294: 21 45 b6

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a297: cd 70 b1

[	POP HL] Z80:11cyc, R800:5cyc
00a29a: e1

[	LD BC , - 48] Z80:11cyc, R800:3cyc
00a29b: 01 d0 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a29e: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a29f: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a2a0: b7

[	JP NZ , END_OF_PUT_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a2a1: c2 e2 a2

[	PUSH HL] Z80:12cyc, R800:6cyc
00a2a4: e5

[	LD B , 24] Z80:8cyc, R800:2cyc
00a2a5: 06 18

[	LD D , 80] Z80:8cyc, R800:2cyc
00a2a7: 16 50

[	LD E , L] Z80:5cyc, R800:2cyc
00a2a9: 5d

[	LD HL , ANDO_PART3_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a2aa: 21 e5 b5

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a2ad: cd 70 b1

[	POP HL] Z80:11cyc, R800:5cyc
00a2b0: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
00a2b1: e5

[	LD B , 32] Z80:8cyc, R800:2cyc
00a2b2: 06 20

[	LD D , 160] Z80:8cyc, R800:2cyc
00a2b4: 16 a0

[	LD E , L] Z80:5cyc, R800:2cyc
00a2b6: 5d

[	LD HL , ANDO_PART4_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a2b7: 21 05 b6

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a2ba: cd 70 b1

[	POP HL] Z80:11cyc, R800:5cyc
00a2bd: e1

[	LD BC , - 16] Z80:11cyc, R800:3cyc
00a2be: 01 f0 ff

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a2c1: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a2c2: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a2c3: b7

[	JP NZ , END_OF_PUT_SPRITE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a2c4: c2 e2 a2

[	PUSH HL] Z80:12cyc, R800:6cyc
00a2c7: e5

[	LD B , 8] Z80:8cyc, R800:2cyc
00a2c8: 06 08

[	LD D , 88] Z80:8cyc, R800:2cyc
00a2ca: 16 58

[	LD E , L] Z80:5cyc, R800:2cyc
00a2cc: 5d

[	LD HL , ANDO_PART1_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a2cd: 21 a5 b5

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a2d0: cd 70 b1

[	POP HL] Z80:11cyc, R800:5cyc
00a2d3: e1

[	LD B , 16] Z80:8cyc, R800:2cyc
00a2d4: 06 10

[	LD D , 152] Z80:8cyc, R800:2cyc
00a2d6: 16 98

[	LD E , L] Z80:5cyc, R800:2cyc
00a2d8: 5d

[	LD HL , ANDO_PART2_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a2d9: 21 c5 b5

[	CALL SD_PUT_SPRITE_PAIR] Z80:18cyc, R800:5cyc
00a2dc: cd 70 b1

[	JP END_OF_PUT_SPRITE] Z80:11cyc, R800:5cyc
00a2df: c3 e2 a2

[END_OF_PUT_SPRITE :]
	label address: 0x00a2e2

[	LD HL , [ BIGCHAR_Y_SP ]] Z80:17cyc, R800:7cyc
00a2e2: 2a e4 a6

[	LD BC , 56] Z80:11cyc, R800:3cyc
00a2e5: 01 38 00

[	OR A , A] Z80:5cyc, R800:1cyc
00a2e8: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00a2e9: ed 42

[	RET P] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a2eb: f0

[BIGCHAR_MOVE_STATE :]
	label address: 0x00a2ec

[	LD HL , [ BIGCHAR_Y_SP ]] Z80:17cyc, R800:7cyc
00a2ec: 2a e4 a6

[	INC HL] Z80:7cyc, R800:1cyc
00a2ef: 23

[	LD [ BIGCHAR_Y_SP ] , HL] Z80:17cyc, R800:7cyc
00a2f0: 22 e4 a6

[	RET] Z80:11cyc, R800:5cyc
00a2f3: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE BIGCHAR_BG_MOVE_INTR1]
	Scope path: BIGCHAR_BG_MOVE_INTR1:

[BIGCHAR_BG_MOVE_1 ::]
	global label address: 0x00a2f4

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00a2f4: 3a 32 be

[	LD [ LINE_A_LEFT_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a2f7: 32 f0 a6

[	LD [ LINE_A_RIGHT_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a2fa: 32 ff a6

[	LD [ LINE_B_LEFT_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a2fd: 32 0e a7

[	LD [ LINE_B_RIGHT_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a300: 32 1d a7

[	LD [ LINE_C_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a303: 32 2c a7

[	LD [ BACKUP_COPY_SRC_PAGE ] , A] Z80:14cyc, R800:6cyc
00a306: 32 37 a7

[	LD [ BODY_A_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a309: 32 4a a7

[	LD [ BODY_B_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a30c: 32 59 a7

[	LD [ BODY_C_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a30f: 32 68 a7

[	LD [ BODY_D_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a312: 32 86 a7

[	LD [ BODY_E_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a315: 32 95 a7

[	LD [ BODY_F_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a318: 32 77 a7

[	LD A , [ BIGCHAR_Y + 1 ]] Z80:14cyc, R800:6cyc
00a31b: 3a e3 a6

[	OR A , A] Z80:5cyc, R800:1cyc
00a31e: b7

[	JP NZ , PUT_BODY_1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a31f: c2 4a a4

[	LD A , [ BIGCHAR_Y ]] Z80:14cyc, R800:6cyc
00a322: 3a e2 a6

[	CP A , 56] Z80:8cyc, R800:2cyc
00a325: fe 38

[	JP NZ , PUT_BODY_1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a327: c2 4a a4

[	LD B , A] Z80:5cyc, R800:2cyc
00a32a: 47

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a32b: 3a 31 be

[	ADD A , B] Z80:5cyc, R800:1cyc
00a32e: 80

[	LD [ BIGCHAR_Y_VSCROLL ] , A] Z80:14cyc, R800:6cyc
00a32f: 32 e6 a6

[	ADD A , 64] Z80:8cyc, R800:2cyc
00a332: c6 40

[	LD [ LINE_A_LEFT_DY ] , A] Z80:14cyc, R800:6cyc
00a334: 32 ef a6

[	LD [ LINE_A_RIGHT_DY ] , A] Z80:14cyc, R800:6cyc
00a337: 32 fe a6

[	LD E , A] Z80:5cyc, R800:2cyc
00a33a: 5f

[	LD A , [ BG_BACKUP_TOP ]] Z80:14cyc, R800:6cyc
00a33b: 3a e7 a6

[	ADD A , 64] Z80:8cyc, R800:2cyc
00a33e: c6 40

[	CP A , 192] Z80:8cyc, R800:2cyc
00a340: fe c0

[	JP C , LINE_A_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a342: da 47 a3

[	SUB A , 104] Z80:8cyc, R800:2cyc
00a345: d6 68

[LINE_A_SKIP0 :]
	label address: 0x00a347

[	LD [ LINE_A_LEFT_SY ] , A] Z80:14cyc, R800:6cyc
00a347: 32 eb a6

[	LD [ LINE_A_RIGHT_SY ] , A] Z80:14cyc, R800:6cyc
00a34a: 32 fa a6

[	LD D , A] Z80:5cyc, R800:2cyc
00a34d: 57

[	LD HL , LINE_A_LEFT] Z80:11cyc, R800:3cyc
00a34e: 21 e9 a6

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a351: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a354: cd 6f af

[	LD HL , LINE_A_RIGHT] Z80:11cyc, R800:3cyc
00a357: 21 f8 a6

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a35a: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a35d: cd 6f af

[	LD A , D] Z80:5cyc, R800:2cyc
00a360: 7a

[	INC A] Z80:5cyc, R800:1cyc
00a361: 3c

[	CP A , 192] Z80:8cyc, R800:2cyc
00a362: fe c0

[	JP C , LINE_A_SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a364: da 69 a3

[	LD A , 88] Z80:8cyc, R800:2cyc
00a367: 3e 58

[LINE_A_SKIP1 :]
	label address: 0x00a369

[	LD [ LINE_A_LEFT_SY ] , A] Z80:14cyc, R800:6cyc
00a369: 32 eb a6

[	LD [ LINE_A_RIGHT_SY ] , A] Z80:14cyc, R800:6cyc
00a36c: 32 fa a6

[	LD A , E] Z80:5cyc, R800:2cyc
00a36f: 7b

[	INC A] Z80:5cyc, R800:1cyc
00a370: 3c

[	LD [ LINE_A_LEFT_DY ] , A] Z80:14cyc, R800:6cyc
00a371: 32 ef a6

[	LD [ LINE_A_RIGHT_DY ] , A] Z80:14cyc, R800:6cyc
00a374: 32 fe a6

[	LD HL , LINE_A_LEFT] Z80:11cyc, R800:3cyc
00a377: 21 e9 a6

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a37a: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a37d: cd 6f af

[	LD HL , LINE_A_RIGHT] Z80:11cyc, R800:3cyc
00a380: 21 f8 a6

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a383: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a386: cd 6f af

[	LD A , [ BIGCHAR_Y_VSCROLL ]] Z80:14cyc, R800:6cyc
00a389: 3a e6 a6

[	ADD A , 80] Z80:8cyc, R800:2cyc
00a38c: c6 50

[	LD [ LINE_B_LEFT_DY ] , A] Z80:14cyc, R800:6cyc
00a38e: 32 0d a7

[	LD [ LINE_B_RIGHT_DY ] , A] Z80:14cyc, R800:6cyc
00a391: 32 1c a7

[	LD E , A] Z80:5cyc, R800:2cyc
00a394: 5f

[	LD A , [ BG_BACKUP_TOP ]] Z80:14cyc, R800:6cyc
00a395: 3a e7 a6

[	CP A , 192 - 80] Z80:8cyc, R800:2cyc
00a398: fe 70

[	JP C , LINE_B_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a39a: da 9f a3

[	SUB A , 104] Z80:8cyc, R800:2cyc
00a39d: d6 68

[LINE_B_SKIP0 :]
	label address: 0x00a39f

[	ADD A , 80] Z80:8cyc, R800:2cyc
00a39f: c6 50

[	LD [ LINE_B_LEFT_SY ] , A] Z80:14cyc, R800:6cyc
00a3a1: 32 09 a7

[	LD [ LINE_B_RIGHT_SY ] , A] Z80:14cyc, R800:6cyc
00a3a4: 32 18 a7

[	LD D , A] Z80:5cyc, R800:2cyc
00a3a7: 57

[	LD HL , LINE_B_LEFT] Z80:11cyc, R800:3cyc
00a3a8: 21 07 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3ab: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3ae: cd 6f af

[	LD HL , LINE_B_RIGHT] Z80:11cyc, R800:3cyc
00a3b1: 21 16 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3b4: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3b7: cd 6f af

[	LD A , D] Z80:5cyc, R800:2cyc
00a3ba: 7a

[	INC A] Z80:5cyc, R800:1cyc
00a3bb: 3c

[	CP A , 192] Z80:8cyc, R800:2cyc
00a3bc: fe c0

[	JP C , LINE_B_SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a3be: da c3 a3

[	LD A , 88] Z80:8cyc, R800:2cyc
00a3c1: 3e 58

[LINE_B_SKIP1 :]
	label address: 0x00a3c3

[	LD [ LINE_B_LEFT_SY ] , A] Z80:14cyc, R800:6cyc
00a3c3: 32 09 a7

[	LD [ LINE_B_RIGHT_SY ] , A] Z80:14cyc, R800:6cyc
00a3c6: 32 18 a7

[	LD A , E] Z80:5cyc, R800:2cyc
00a3c9: 7b

[	INC A] Z80:5cyc, R800:1cyc
00a3ca: 3c

[	LD [ LINE_B_LEFT_DY ] , A] Z80:14cyc, R800:6cyc
00a3cb: 32 0d a7

[	LD [ LINE_B_RIGHT_DY ] , A] Z80:14cyc, R800:6cyc
00a3ce: 32 1c a7

[	LD HL , LINE_B_LEFT] Z80:11cyc, R800:3cyc
00a3d1: 21 07 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3d4: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3d7: cd 6f af

[	LD HL , LINE_B_RIGHT] Z80:11cyc, R800:3cyc
00a3da: 21 16 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3dd: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3e0: cd 6f af

[	LD A , [ BIGCHAR_Y_VSCROLL ]] Z80:14cyc, R800:6cyc
00a3e3: 3a e6 a6

[	ADD A , 96] Z80:8cyc, R800:2cyc
00a3e6: c6 60

[	LD [ LINE_C_DY ] , A] Z80:14cyc, R800:6cyc
00a3e8: 32 2b a7

[	LD E , A] Z80:5cyc, R800:2cyc
00a3eb: 5f

[	LD A , [ BG_BACKUP_TOP ]] Z80:14cyc, R800:6cyc
00a3ec: 3a e7 a6

[	CP A , 192 - 96] Z80:8cyc, R800:2cyc
00a3ef: fe 60

[	JP C , LINE_C_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a3f1: da f6 a3

[	SUB A , 104] Z80:8cyc, R800:2cyc
00a3f4: d6 68

[LINE_C_SKIP0 :]
	label address: 0x00a3f6

[	ADD A , 96] Z80:8cyc, R800:2cyc
00a3f6: c6 60

[	LD [ LINE_C_SY ] , A] Z80:14cyc, R800:6cyc
00a3f8: 32 27 a7

[	LD D , A] Z80:5cyc, R800:2cyc
00a3fb: 57

[	LD HL , LINE_C] Z80:11cyc, R800:3cyc
00a3fc: 21 25 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a3ff: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a402: cd 6f af

[	LD A , D] Z80:5cyc, R800:2cyc
00a405: 7a

[	INC A] Z80:5cyc, R800:1cyc
00a406: 3c

[	CP A , 192] Z80:8cyc, R800:2cyc
00a407: fe c0

[	JP C , LINE_C_SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a409: da 0e a4

[	LD A , 88] Z80:8cyc, R800:2cyc
00a40c: 3e 58

[LINE_C_SKIP1 :]
	label address: 0x00a40e

[	LD [ LINE_C_SY ] , A] Z80:14cyc, R800:6cyc
00a40e: 32 27 a7

[	LD A , E] Z80:5cyc, R800:2cyc
00a411: 7b

[	INC A] Z80:5cyc, R800:1cyc
00a412: 3c

[	LD [ LINE_C_DY ] , A] Z80:14cyc, R800:6cyc
00a413: 32 2b a7

[	LD HL , LINE_C] Z80:11cyc, R800:3cyc
00a416: 21 25 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a419: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a41c: cd 6f af

[BACKUP :]
	label address: 0x00a41f

[	LD A , [ BIGCHAR_Y_VSCROLL ]] Z80:14cyc, R800:6cyc
00a41f: 3a e6 a6

[	LD [ BACKUP_COPY_SY ] , A] Z80:14cyc, R800:6cyc
00a422: 32 36 a7

[	LD A , [ FIRST_FLAG ]] Z80:14cyc, R800:6cyc
00a425: 3a e8 a6

[	OR A , A] Z80:5cyc, R800:1cyc
00a428: b7

[	JP NZ , BACKUP_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a429: c2 35 a4

[	LD HL , BACKUP_COPY] Z80:11cyc, R800:3cyc
00a42c: 21 34 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a42f: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a432: cd 6f af

[BACKUP_SKIP :]
	label address: 0x00a435

[	XOR A , A] Z80:5cyc, R800:1cyc
00a435: af

[	LD [ FIRST_FLAG ] , A] Z80:14cyc, R800:6cyc
00a436: 32 e8 a6

[	LD A , [ BG_BACKUP_TOP ]] Z80:14cyc, R800:6cyc
00a439: 3a e7 a6

[	DEC A] Z80:5cyc, R800:1cyc
00a43c: 3d

[	CP A , 87] Z80:8cyc, R800:2cyc
00a43d: fe 57

[	JP NZ , BACKUP_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a43f: c2 44 a4

[	LD A , 191] Z80:8cyc, R800:2cyc
00a442: 3e bf

[BACKUP_SKIP0 :]
	label address: 0x00a444

[	LD [ BG_BACKUP_TOP ] , A] Z80:14cyc, R800:6cyc
00a444: 32 e7 a6

[	LD [ BACKUP_COPY_DY ] , A] Z80:14cyc, R800:6cyc
00a447: 32 3a a7

[PUT_BODY_1 :]
	label address: 0x00a44a

[PUT_BODY_A :]
	label address: 0x00a44a

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a44a: 2a e2 a6

[	LD A , H] Z80:5cyc, R800:2cyc
00a44d: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a44e: b7

[	JP NZ , PUT_BODY_A_END] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a44f: c2 a7 a4

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00a452: 3a 32 be

[	LD [ BODY_A_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a455: 32 4a a7

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a458: 3a 31 be

[	ADD A , L] Z80:5cyc, R800:1cyc
00a45b: 85

[	CP A , 256 - 16 + 1] Z80:8cyc, R800:2cyc
00a45c: fe f1

[	LD [ BODY_A_DY ] , A] Z80:14cyc, R800:6cyc
00a45e: 32 49 a7

[	LD HL , BODY_A] Z80:11cyc, R800:3cyc
00a461: 21 43 a7

[	JP NC , BODY_A_IS_DIVIDED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a464: d2 7a a4

[BODY_A_IS_NOT_DIVIDED :]
	label address: 0x00a467

[	LD A , 88] Z80:8cyc, R800:2cyc
00a467: 3e 58

[	LD [ BODY_A_SY ] , A] Z80:14cyc, R800:6cyc
00a469: 32 45 a7

[	LD A , 16] Z80:8cyc, R800:2cyc
00a46c: 3e 10

[	LD [ BODY_A_NY ] , A] Z80:14cyc, R800:6cyc
00a46e: 32 4d a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a471: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a474: cd 6f af

[	JP PUT_BODY_A_END] Z80:11cyc, R800:5cyc
00a477: c3 a7 a4

[BODY_A_IS_DIVIDED :]
	label address: 0x00a47a

[	NEG] Z80:10cyc, R800:2cyc
00a47a: ed 44

[	LD [ BODY_A_NY ] , A] Z80:14cyc, R800:6cyc
00a47c: 32 4d a7

[	LD A , 88] Z80:8cyc, R800:2cyc
00a47f: 3e 58

[	LD [ BODY_A_SY ] , A] Z80:14cyc, R800:6cyc
00a481: 32 45 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a484: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a487: cd 6f af

[	LD A , [ BODY_A_NY ]] Z80:14cyc, R800:6cyc
00a48a: 3a 4d a7

[	ADD A , 88] Z80:8cyc, R800:2cyc
00a48d: c6 58

[	LD [ BODY_A_SY ] , A] Z80:14cyc, R800:6cyc
00a48f: 32 45 a7

[	LD A , [ BODY_A_DY ]] Z80:14cyc, R800:6cyc
00a492: 3a 49 a7

[	AND A , 15] Z80:8cyc, R800:2cyc
00a495: e6 0f

[	LD [ BODY_A_NY ] , A] Z80:14cyc, R800:6cyc
00a497: 32 4d a7

[	XOR A , A] Z80:5cyc, R800:1cyc
00a49a: af

[	LD [ BODY_A_DY ] , A] Z80:14cyc, R800:6cyc
00a49b: 32 49 a7

[	LD HL , BODY_A] Z80:11cyc, R800:3cyc
00a49e: 21 43 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a4a1: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a4a4: cd 6f af

[PUT_BODY_A_END :]
	label address: 0x00a4a7

[	RET] Z80:11cyc, R800:5cyc
00a4a7: c9

[BIGCHAR_BG_MOVE_2 ::]
	global label address: 0x00a4a8

[PUT_BODY_C :]
	label address: 0x00a4a8

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a4a8: 2a e2 a6

[	LD BC , 32] Z80:11cyc, R800:3cyc
00a4ab: 01 20 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a4ae: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a4af: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a4b0: b7

[	JP NZ , PUT_BODY_C_END] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a4b1: c2 09 a5

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00a4b4: 3a 32 be

[	LD [ BODY_C_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a4b7: 32 68 a7

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a4ba: 3a 31 be

[	ADD A , L] Z80:5cyc, R800:1cyc
00a4bd: 85

[	CP A , 256 - 16 + 1] Z80:8cyc, R800:2cyc
00a4be: fe f1

[	LD [ BODY_C_DY ] , A] Z80:14cyc, R800:6cyc
00a4c0: 32 67 a7

[	LD HL , BODY_C] Z80:11cyc, R800:3cyc
00a4c3: 21 61 a7

[	JP NC , BODY_C_IS_DIVIDED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a4c6: d2 dc a4

[BODY_C_IS_NOT_DIVIDED :]
	label address: 0x00a4c9

[	LD A , 120] Z80:8cyc, R800:2cyc
00a4c9: 3e 78

[	LD [ BODY_C_SY ] , A] Z80:14cyc, R800:6cyc
00a4cb: 32 63 a7

[	LD A , 16] Z80:8cyc, R800:2cyc
00a4ce: 3e 10

[	LD [ BODY_C_NY ] , A] Z80:14cyc, R800:6cyc
00a4d0: 32 6b a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a4d3: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a4d6: cd 6f af

[	JP PUT_BODY_C_END] Z80:11cyc, R800:5cyc
00a4d9: c3 09 a5

[BODY_C_IS_DIVIDED :]
	label address: 0x00a4dc

[	NEG] Z80:10cyc, R800:2cyc
00a4dc: ed 44

[	LD [ BODY_C_NY ] , A] Z80:14cyc, R800:6cyc
00a4de: 32 6b a7

[	LD A , 120] Z80:8cyc, R800:2cyc
00a4e1: 3e 78

[	LD [ BODY_C_SY ] , A] Z80:14cyc, R800:6cyc
00a4e3: 32 63 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a4e6: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a4e9: cd 6f af

[	LD A , [ BODY_C_NY ]] Z80:14cyc, R800:6cyc
00a4ec: 3a 6b a7

[	ADD A , 120] Z80:8cyc, R800:2cyc
00a4ef: c6 78

[	LD [ BODY_C_SY ] , A] Z80:14cyc, R800:6cyc
00a4f1: 32 63 a7

[	LD A , [ BODY_C_DY ]] Z80:14cyc, R800:6cyc
00a4f4: 3a 67 a7

[	AND A , 15] Z80:8cyc, R800:2cyc
00a4f7: e6 0f

[	LD [ BODY_C_NY ] , A] Z80:14cyc, R800:6cyc
00a4f9: 32 6b a7

[	XOR A , A] Z80:5cyc, R800:1cyc
00a4fc: af

[	LD [ BODY_C_DY ] , A] Z80:14cyc, R800:6cyc
00a4fd: 32 67 a7

[	LD HL , BODY_C] Z80:11cyc, R800:3cyc
00a500: 21 61 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a503: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a506: cd 6f af

[PUT_BODY_C_END :]
	label address: 0x00a509

[	RET] Z80:11cyc, R800:5cyc
00a509: c9

[BIGCHAR_BG_MOVE_3 ::]
	global label address: 0x00a50a

[	LD A , [ BIGCHAR_Y + 1 ]] Z80:14cyc, R800:6cyc
00a50a: 3a e3 a6

[	OR A , A] Z80:5cyc, R800:1cyc
00a50d: b7

[	JP NZ , PUT_BODY_3] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a50e: c2 19 a5

[	LD A , [ BIGCHAR_Y ]] Z80:14cyc, R800:6cyc
00a511: 3a e2 a6

[	CP A , 56] Z80:8cyc, R800:2cyc
00a514: fe 38

[	JP NZ , PUT_BODY_3] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a516: c2 19 a5

[PUT_BODY_3 :]
	label address: 0x00a519

[PUT_BODY_B :]
	label address: 0x00a519

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a519: 2a e2 a6

[	LD BC , 16] Z80:11cyc, R800:3cyc
00a51c: 01 10 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a51f: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a520: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a521: b7

[	JP NZ , PUT_BODY_B_END] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a522: c2 74 a5

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a525: 3a 31 be

[	ADD A , L] Z80:5cyc, R800:1cyc
00a528: 85

[	CP A , 256 - 16 + 1] Z80:8cyc, R800:2cyc
00a529: fe f1

[	LD [ BODY_B_DY ] , A] Z80:14cyc, R800:6cyc
00a52b: 32 58 a7

[	LD HL , BODY_B] Z80:11cyc, R800:3cyc
00a52e: 21 52 a7

[	JP NC , BODY_B_IS_DIVIDED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a531: d2 47 a5

[BODY_B_IS_NOT_DIVIDED :]
	label address: 0x00a534

[	LD A , 104] Z80:8cyc, R800:2cyc
00a534: 3e 68

[	LD [ BODY_B_SY ] , A] Z80:14cyc, R800:6cyc
00a536: 32 54 a7

[	LD A , 16] Z80:8cyc, R800:2cyc
00a539: 3e 10

[	LD [ BODY_B_NY ] , A] Z80:14cyc, R800:6cyc
00a53b: 32 5c a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a53e: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a541: cd 6f af

[	JP PUT_BODY_B_END] Z80:11cyc, R800:5cyc
00a544: c3 74 a5

[BODY_B_IS_DIVIDED :]
	label address: 0x00a547

[	NEG] Z80:10cyc, R800:2cyc
00a547: ed 44

[	LD [ BODY_B_NY ] , A] Z80:14cyc, R800:6cyc
00a549: 32 5c a7

[	LD A , 104] Z80:8cyc, R800:2cyc
00a54c: 3e 68

[	LD [ BODY_B_SY ] , A] Z80:14cyc, R800:6cyc
00a54e: 32 54 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a551: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a554: cd 6f af

[	LD A , [ BODY_B_NY ]] Z80:14cyc, R800:6cyc
00a557: 3a 5c a7

[	ADD A , 104] Z80:8cyc, R800:2cyc
00a55a: c6 68

[	LD [ BODY_B_SY ] , A] Z80:14cyc, R800:6cyc
00a55c: 32 54 a7

[	LD A , [ BODY_B_DY ]] Z80:14cyc, R800:6cyc
00a55f: 3a 58 a7

[	AND A , 15] Z80:8cyc, R800:2cyc
00a562: e6 0f

[	LD [ BODY_B_NY ] , A] Z80:14cyc, R800:6cyc
00a564: 32 5c a7

[	XOR A , A] Z80:5cyc, R800:1cyc
00a567: af

[	LD [ BODY_B_DY ] , A] Z80:14cyc, R800:6cyc
00a568: 32 58 a7

[	LD HL , BODY_B] Z80:11cyc, R800:3cyc
00a56b: 21 52 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a56e: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a571: cd 6f af

[PUT_BODY_B_END :]
	label address: 0x00a574

[	RET] Z80:11cyc, R800:5cyc
00a574: c9

[BIGCHAR_BG_MOVE_4 ::]
	global label address: 0x00a575

[PUT_BODY_D :]
	label address: 0x00a575

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a575: 2a e2 a6

[	LD BC , 64] Z80:11cyc, R800:3cyc
00a578: 01 40 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a57b: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a57c: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a57d: b7

[	JP NZ , PUT_BODY_D_END] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a57e: c2 d0 a5

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a581: 3a 31 be

[	ADD A , L] Z80:5cyc, R800:1cyc
00a584: 85

[	CP A , 256 - 16 + 1] Z80:8cyc, R800:2cyc
00a585: fe f1

[	LD [ BODY_D_DY ] , A] Z80:14cyc, R800:6cyc
00a587: 32 85 a7

[	LD HL , BODY_D] Z80:11cyc, R800:3cyc
00a58a: 21 7f a7

[	JP NC , BODY_D_IS_DIVIDED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a58d: d2 a3 a5

[BODY_D_IS_NOT_DIVIDED :]
	label address: 0x00a590

[	LD A , 152] Z80:8cyc, R800:2cyc
00a590: 3e 98

[	LD [ BODY_D_SY ] , A] Z80:14cyc, R800:6cyc
00a592: 32 81 a7

[	LD A , 16] Z80:8cyc, R800:2cyc
00a595: 3e 10

[	LD [ BODY_D_NY ] , A] Z80:14cyc, R800:6cyc
00a597: 32 89 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a59a: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a59d: cd 6f af

[	JP PUT_BODY_D_END] Z80:11cyc, R800:5cyc
00a5a0: c3 d0 a5

[BODY_D_IS_DIVIDED :]
	label address: 0x00a5a3

[	NEG] Z80:10cyc, R800:2cyc
00a5a3: ed 44

[	LD [ BODY_D_NY ] , A] Z80:14cyc, R800:6cyc
00a5a5: 32 89 a7

[	LD A , 152] Z80:8cyc, R800:2cyc
00a5a8: 3e 98

[	LD [ BODY_D_SY ] , A] Z80:14cyc, R800:6cyc
00a5aa: 32 81 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a5ad: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a5b0: cd 6f af

[	LD A , [ BODY_D_NY ]] Z80:14cyc, R800:6cyc
00a5b3: 3a 89 a7

[	ADD A , 152] Z80:8cyc, R800:2cyc
00a5b6: c6 98

[	LD [ BODY_D_SY ] , A] Z80:14cyc, R800:6cyc
00a5b8: 32 81 a7

[	LD A , [ BODY_D_DY ]] Z80:14cyc, R800:6cyc
00a5bb: 3a 85 a7

[	AND A , 15] Z80:8cyc, R800:2cyc
00a5be: e6 0f

[	LD [ BODY_D_NY ] , A] Z80:14cyc, R800:6cyc
00a5c0: 32 89 a7

[	XOR A , A] Z80:5cyc, R800:1cyc
00a5c3: af

[	LD [ BODY_D_DY ] , A] Z80:14cyc, R800:6cyc
00a5c4: 32 85 a7

[	LD HL , BODY_D] Z80:11cyc, R800:3cyc
00a5c7: 21 7f a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a5ca: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a5cd: cd 6f af

[PUT_BODY_D_END :]
	label address: 0x00a5d0

[	RET] Z80:11cyc, R800:5cyc
00a5d0: c9

[BIGCHAR_BG_MOVE_5 ::]
	global label address: 0x00a5d1

[PUT_BODY_F :]
	label address: 0x00a5d1

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a5d1: 2a e2 a6

[	LD BC , 48] Z80:11cyc, R800:3cyc
00a5d4: 01 30 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a5d7: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a5d8: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a5d9: b7

[	JP NZ , PUT_BODY_F_END] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a5da: c2 32 a6

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00a5dd: 3a 32 be

[	LD [ BODY_F_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a5e0: 32 77 a7

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a5e3: 3a 31 be

[	ADD A , L] Z80:5cyc, R800:1cyc
00a5e6: 85

[	CP A , 256 - 16 + 1] Z80:8cyc, R800:2cyc
00a5e7: fe f1

[	LD [ BODY_F_DY ] , A] Z80:14cyc, R800:6cyc
00a5e9: 32 76 a7

[	LD HL , BODY_F] Z80:11cyc, R800:3cyc
00a5ec: 21 70 a7

[	JP NC , BODY_F_IS_DIVIDED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a5ef: d2 05 a6

[BODY_F_IS_NOT_DIVIDED :]
	label address: 0x00a5f2

[	LD A , 136] Z80:8cyc, R800:2cyc
00a5f2: 3e 88

[	LD [ BODY_F_SY ] , A] Z80:14cyc, R800:6cyc
00a5f4: 32 72 a7

[	LD A , 16] Z80:8cyc, R800:2cyc
00a5f7: 3e 10

[	LD [ BODY_F_NY ] , A] Z80:14cyc, R800:6cyc
00a5f9: 32 7a a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a5fc: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a5ff: cd 6f af

[	JP PUT_BODY_F_END] Z80:11cyc, R800:5cyc
00a602: c3 32 a6

[BODY_F_IS_DIVIDED :]
	label address: 0x00a605

[	NEG] Z80:10cyc, R800:2cyc
00a605: ed 44

[	LD [ BODY_F_NY ] , A] Z80:14cyc, R800:6cyc
00a607: 32 7a a7

[	LD A , 136] Z80:8cyc, R800:2cyc
00a60a: 3e 88

[	LD [ BODY_F_SY ] , A] Z80:14cyc, R800:6cyc
00a60c: 32 72 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a60f: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a612: cd 6f af

[	LD A , [ BODY_F_NY ]] Z80:14cyc, R800:6cyc
00a615: 3a 7a a7

[	ADD A , 136] Z80:8cyc, R800:2cyc
00a618: c6 88

[	LD [ BODY_F_SY ] , A] Z80:14cyc, R800:6cyc
00a61a: 32 72 a7

[	LD A , [ BODY_F_DY ]] Z80:14cyc, R800:6cyc
00a61d: 3a 76 a7

[	AND A , 15] Z80:8cyc, R800:2cyc
00a620: e6 0f

[	LD [ BODY_F_NY ] , A] Z80:14cyc, R800:6cyc
00a622: 32 7a a7

[	XOR A , A] Z80:5cyc, R800:1cyc
00a625: af

[	LD [ BODY_F_DY ] , A] Z80:14cyc, R800:6cyc
00a626: 32 76 a7

[	LD HL , BODY_F] Z80:11cyc, R800:3cyc
00a629: 21 70 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a62c: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a62f: cd 6f af

[PUT_BODY_F_END :]
	label address: 0x00a632

[	RET] Z80:11cyc, R800:5cyc
00a632: c9

[BIGCHAR_BG_MOVE_6 ::]
	global label address: 0x00a633

[PUT_BODY_E :]
	label address: 0x00a633

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a633: 2a e2 a6

[	LD BC , 80] Z80:11cyc, R800:3cyc
00a636: 01 50 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a639: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00a63a: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
00a63b: b7

[	JP NZ , PUT_BODY_E_END] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a63c: c2 94 a6

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00a63f: 3a 32 be

[	LD [ BODY_E_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00a642: 32 95 a7

[	LD A , [ VSCROLL_NEXT ]] Z80:14cyc, R800:6cyc
00a645: 3a 31 be

[	ADD A , L] Z80:5cyc, R800:1cyc
00a648: 85

[	CP A , 256 - 16 + 1] Z80:8cyc, R800:2cyc
00a649: fe f1

[	LD [ BODY_E_DY ] , A] Z80:14cyc, R800:6cyc
00a64b: 32 94 a7

[	LD HL , BODY_E] Z80:11cyc, R800:3cyc
00a64e: 21 8e a7

[	JP NC , BODY_E_IS_DIVIDED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a651: d2 67 a6

[BODY_E_IS_NOT_DIVIDED :]
	label address: 0x00a654

[	LD A , 168] Z80:8cyc, R800:2cyc
00a654: 3e a8

[	LD [ BODY_E_SY ] , A] Z80:14cyc, R800:6cyc
00a656: 32 90 a7

[	LD A , 16] Z80:8cyc, R800:2cyc
00a659: 3e 10

[	LD [ BODY_E_NY ] , A] Z80:14cyc, R800:6cyc
00a65b: 32 98 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a65e: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a661: cd 6f af

[	JP PUT_BODY_E_END] Z80:11cyc, R800:5cyc
00a664: c3 94 a6

[BODY_E_IS_DIVIDED :]
	label address: 0x00a667

[	NEG] Z80:10cyc, R800:2cyc
00a667: ed 44

[	LD [ BODY_E_NY ] , A] Z80:14cyc, R800:6cyc
00a669: 32 98 a7

[	LD A , 168] Z80:8cyc, R800:2cyc
00a66c: 3e a8

[	LD [ BODY_E_SY ] , A] Z80:14cyc, R800:6cyc
00a66e: 32 90 a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a671: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a674: cd 6f af

[	LD A , [ BODY_E_NY ]] Z80:14cyc, R800:6cyc
00a677: 3a 98 a7

[	ADD A , 168] Z80:8cyc, R800:2cyc
00a67a: c6 a8

[	LD [ BODY_E_SY ] , A] Z80:14cyc, R800:6cyc
00a67c: 32 90 a7

[	LD A , [ BODY_E_DY ]] Z80:14cyc, R800:6cyc
00a67f: 3a 94 a7

[	AND A , 15] Z80:8cyc, R800:2cyc
00a682: e6 0f

[	LD [ BODY_E_NY ] , A] Z80:14cyc, R800:6cyc
00a684: 32 98 a7

[	XOR A , A] Z80:5cyc, R800:1cyc
00a687: af

[	LD [ BODY_E_DY ] , A] Z80:14cyc, R800:6cyc
00a688: 32 94 a7

[	LD HL , BODY_E] Z80:11cyc, R800:3cyc
00a68b: 21 8e a7

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a68e: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00a691: cd 6f af

[PUT_BODY_E_END :]
	label address: 0x00a694

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a694: 2a e2 a6

[	LD BC , 56] Z80:11cyc, R800:3cyc
00a697: 01 38 00

[	OR A , A] Z80:5cyc, R800:1cyc
00a69a: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00a69b: ed 42

[	JP P , PALETTE_BLINK] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a69d: f2 a8 a6

[BIGCHAR_MOVE_STATE :]
	label address: 0x00a6a0

[	LD HL , [ BIGCHAR_Y ]] Z80:17cyc, R800:7cyc
00a6a0: 2a e2 a6

[	INC HL] Z80:7cyc, R800:1cyc
00a6a3: 23

[	LD [ BIGCHAR_Y ] , HL] Z80:17cyc, R800:7cyc
00a6a4: 22 e2 a6

[	RET] Z80:11cyc, R800:5cyc
00a6a7: c9

[PALETTE_BLINK :]
	label address: 0x00a6a8

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00a6a8: 0e 99

[	LD A , 4] Z80:8cyc, R800:2cyc
00a6aa: 3e 04

[	DI] Z80:5cyc, R800:2cyc
00a6ac: f3

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a6ad: ed 79

[	LD A , 16 | 0X80] Z80:8cyc, R800:2cyc
00a6af: 3e 90

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a6b1: ed 79

[	EI] Z80:5cyc, R800:1cyc
00a6b3: fb

[	INC C] Z80:5cyc, R800:1cyc
00a6b4: 0c

[	LD A , [ PALETTE_BLINK_RB ]] Z80:14cyc, R800:6cyc
00a6b5: 3a e0 a6

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a6b8: ed 79

[	XOR A , A] Z80:5cyc, R800:1cyc
00a6ba: af

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00a6bb: ed 79

[	LD A , [ PALETTE_BLINK_RB_DIR ]] Z80:14cyc, R800:6cyc
00a6bd: 3a e1 a6

[	OR A , A] Z80:5cyc, R800:1cyc
00a6c0: b7

[	LD A , [ PALETTE_BLINK_RB ]] Z80:14cyc, R800:6cyc
00a6c1: 3a e0 a6

[	JP NZ , PALETTE_BLINK_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a6c4: c2 d5 a6

[	ADD A , 0X10] Z80:8cyc, R800:2cyc
00a6c7: c6 10

[	LD [ PALETTE_BLINK_RB ] , A] Z80:14cyc, R800:6cyc
00a6c9: 32 e0 a6

[	CP A , 0X70] Z80:8cyc, R800:2cyc
00a6cc: fe 70

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a6ce: c0

[	LD A , 1] Z80:8cyc, R800:2cyc
00a6cf: 3e 01

[	LD [ PALETTE_BLINK_RB ] , A] Z80:14cyc, R800:6cyc
00a6d1: 32 e0 a6

[	RET] Z80:11cyc, R800:5cyc
00a6d4: c9

[PALETTE_BLINK_SKIP :]
	label address: 0x00a6d5

[	SUB A , 0X10] Z80:8cyc, R800:2cyc
00a6d5: d6 10

[	LD [ PALETTE_BLINK_RB ] , A] Z80:14cyc, R800:6cyc
00a6d7: 32 e0 a6

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a6da: c0

[	INC A] Z80:5cyc, R800:1cyc
00a6db: 3c

[	LD [ PALETTE_BLINK_RB_DIR ] , A] Z80:14cyc, R800:6cyc
00a6dc: 32 e1 a6

[	RET] Z80:11cyc, R800:5cyc
00a6df: c9

[PALETTE_BLINK_RB :]
	label address: 0x00a6e0

[	DB 0X30]
00a6e0: 30

[PALETTE_BLINK_RB_DIR :]
	label address: 0x00a6e1

[	DB 0]
00a6e1: 00

[BIGCHAR_Y ::]
	global label address: 0x00a6e2

[	DW - 200]
00a6e2: 38 ff

[BIGCHAR_Y_SP ::]
	global label address: 0x00a6e4

[	DW - 200]
00a6e4: 38 ff

[BIGCHAR_Y_VSCROLL ::]
	global label address: 0x00a6e6

[	DB 0]
00a6e6: 00

[BG_BACKUP_TOP ::]
	global label address: 0x00a6e7

[	DB 88 + 8 - 2]
00a6e7: 5e

[FIRST_FLAG ::]
	global label address: 0x00a6e8

[	DB 1]
00a6e8: 01

[LINE_A_LEFT :]
	label address: 0x00a6e9

[	DB 0]
00a6e9: 00

[	DB 0]
00a6ea: 00

[LINE_A_LEFT_SY :]
	label address: 0x00a6eb

[	DB 0]
00a6eb: 00

[	DB 1]
00a6ec: 01

[	DB 80]
00a6ed: 50

[	DB 0]
00a6ee: 00

[LINE_A_LEFT_DY :]
	label address: 0x00a6ef

[	DB 0]
00a6ef: 00

[LINE_A_LEFT_DEST_PAGE :]
	label address: 0x00a6f0

[	DB 0]
00a6f0: 00

[	DB 16]
00a6f1: 10

[	DB 0]
00a6f2: 00

[LINE_A_LEFT_NY :]
	label address: 0x00a6f3

[	DB 1]
00a6f3: 01

[	DB 0]
00a6f4: 00

[	DB 0]
00a6f5: 00

[	DB 0]
00a6f6: 00

[	DB 0B1101_0000]
00a6f7: d0

[LINE_A_RIGHT :]
	label address: 0x00a6f8

[	DB 80]
00a6f8: 50

[	DB 0]
00a6f9: 00

[LINE_A_RIGHT_SY :]
	label address: 0x00a6fa

[	DB 0]
00a6fa: 00

[	DB 1]
00a6fb: 01

[	DB 160]
00a6fc: a0

[	DB 0]
00a6fd: 00

[LINE_A_RIGHT_DY :]
	label address: 0x00a6fe

[	DB 0]
00a6fe: 00

[LINE_A_RIGHT_DEST_PAGE :]
	label address: 0x00a6ff

[	DB 0]
00a6ff: 00

[	DB 16]
00a700: 10

[	DB 0]
00a701: 00

[LINE_A_RIGHT_NY :]
	label address: 0x00a702

[	DB 1]
00a702: 01

[	DB 0]
00a703: 00

[	DB 0]
00a704: 00

[	DB 0]
00a705: 00

[	DB 0B1101_0000]
00a706: d0

[LINE_B_LEFT :]
	label address: 0x00a707

[	DB 16]
00a707: 10

[	DB 0]
00a708: 00

[LINE_B_LEFT_SY :]
	label address: 0x00a709

[	DB 0]
00a709: 00

[	DB 1]
00a70a: 01

[	DB 96]
00a70b: 60

[	DB 0]
00a70c: 00

[LINE_B_LEFT_DY :]
	label address: 0x00a70d

[	DB 0]
00a70d: 00

[LINE_B_LEFT_DEST_PAGE :]
	label address: 0x00a70e

[	DB 0]
00a70e: 00

[	DB 8]
00a70f: 08

[	DB 0]
00a710: 00

[LINE_B_LEFT_NY :]
	label address: 0x00a711

[	DB 1]
00a711: 01

[	DB 0]
00a712: 00

[	DB 0]
00a713: 00

[	DB 0]
00a714: 00

[	DB 0B1101_0000]
00a715: d0

[LINE_B_RIGHT :]
	label address: 0x00a716

[	DB 72]
00a716: 48

[	DB 0]
00a717: 00

[LINE_B_RIGHT_SY :]
	label address: 0x00a718

[	DB 0]
00a718: 00

[	DB 1]
00a719: 01

[	DB 152]
00a71a: 98

[	DB 0]
00a71b: 00

[LINE_B_RIGHT_DY :]
	label address: 0x00a71c

[	DB 0]
00a71c: 00

[LINE_B_RIGHT_DEST_PAGE :]
	label address: 0x00a71d

[	DB 0]
00a71d: 00

[	DB 8]
00a71e: 08

[	DB 0]
00a71f: 00

[LINE_B_RIGHT_NY :]
	label address: 0x00a720

[	DB 1]
00a720: 01

[	DB 0]
00a721: 00

[	DB 0]
00a722: 00

[	DB 0]
00a723: 00

[	DB 0B1101_0000]
00a724: d0

[LINE_C :]
	label address: 0x00a725

[	DB 24]
00a725: 18

[	DB 0]
00a726: 00

[LINE_C_SY :]
	label address: 0x00a727

[	DB 0]
00a727: 00

[	DB 1]
00a728: 01

[	DB 104]
00a729: 68

[	DB 0]
00a72a: 00

[LINE_C_DY :]
	label address: 0x00a72b

[	DB 0]
00a72b: 00

[LINE_C_DEST_PAGE :]
	label address: 0x00a72c

[	DB 0]
00a72c: 00

[	DB 48]
00a72d: 30

[	DB 0]
00a72e: 00

[LINE_C_NY :]
	label address: 0x00a72f

[	DB 1]
00a72f: 01

[	DB 0]
00a730: 00

[	DB 0]
00a731: 00

[	DB 0]
00a732: 00

[	DB 0B1101_0000]
00a733: d0

[BACKUP_COPY :]
	label address: 0x00a734

[	DB 80]
00a734: 50

[	DB 0]
00a735: 00

[BACKUP_COPY_SY :]
	label address: 0x00a736

[	DB 0]
00a736: 00

[BACKUP_COPY_SRC_PAGE :]
	label address: 0x00a737

[	DB 0]
00a737: 00

[	DB 0]
00a738: 00

[	DB 0]
00a739: 00

[BACKUP_COPY_DY :]
	label address: 0x00a73a

[	DB 88 + 96 - 2]
00a73a: b6

[	DB 1]
00a73b: 01

[	DB 96]
00a73c: 60

[	DB 0]
00a73d: 00

[BACKUP_COPY_NY :]
	label address: 0x00a73e

[	DB 1]
00a73e: 01

[	DB 0]
00a73f: 00

[	DB 0]
00a740: 00

[	DB 0]
00a741: 00

[	DB 0B1101_0000]
00a742: d0

[BODY_A :]
	label address: 0x00a743

[	DB 120]
00a743: 78

[	DB 0]
00a744: 00

[BODY_A_SY :]
	label address: 0x00a745

[	DB 88]
00a745: 58

[	DB 1]
00a746: 01

[	DB 104]
00a747: 68

[	DB 0]
00a748: 00

[BODY_A_DY :]
	label address: 0x00a749

[	DB 0]
00a749: 00

[BODY_A_DEST_PAGE :]
	label address: 0x00a74a

[	DB 0]
00a74a: 00

[	DB 48]
00a74b: 30

[	DB 0]
00a74c: 00

[BODY_A_NY :]
	label address: 0x00a74d

[	DB 16]
00a74d: 10

[	DB 0]
00a74e: 00

[	DB 0]
00a74f: 00

[	DB 0]
00a750: 00

[	DB 0B1101_0000]
00a751: d0

[BODY_B :]
	label address: 0x00a752

[	DB 112]
00a752: 70

[	DB 0]
00a753: 00

[BODY_B_SY :]
	label address: 0x00a754

[	DB 104]
00a754: 68

[	DB 1]
00a755: 01

[	DB 96]
00a756: 60

[	DB 0]
00a757: 00

[BODY_B_DY :]
	label address: 0x00a758

[	DB 0]
00a758: 00

[BODY_B_DEST_PAGE :]
	label address: 0x00a759

[	DB 0]
00a759: 00

[	DB 64]
00a75a: 40

[	DB 0]
00a75b: 00

[BODY_B_NY :]
	label address: 0x00a75c

[	DB 16]
00a75c: 10

[	DB 0]
00a75d: 00

[	DB 0]
00a75e: 00

[	DB 0]
00a75f: 00

[	DB 0B1101_0000]
00a760: d0

[BODY_C :]
	label address: 0x00a761

[	DB 96]
00a761: 60

[	DB 0]
00a762: 00

[BODY_C_SY :]
	label address: 0x00a763

[	DB 120]
00a763: 78

[	DB 1]
00a764: 01

[	DB 80]
00a765: 50

[	DB 0]
00a766: 00

[BODY_C_DY :]
	label address: 0x00a767

[	DB 0]
00a767: 00

[BODY_C_DEST_PAGE :]
	label address: 0x00a768

[	DB 0]
00a768: 00

[	DB 96]
00a769: 60

[	DB 0]
00a76a: 00

[BODY_C_NY :]
	label address: 0x00a76b

[	DB 16]
00a76b: 10

[	DB 0]
00a76c: 00

[	DB 0]
00a76d: 00

[	DB 0]
00a76e: 00

[	DB 0B1101_0000]
00a76f: d0

[BODY_F :]
	label address: 0x00a770

[	DB 96]
00a770: 60

[	DB 0]
00a771: 00

[BODY_F_SY :]
	label address: 0x00a772

[	DB 136]
00a772: 88

[	DB 1]
00a773: 01

[	DB 80]
00a774: 50

[	DB 0]
00a775: 00

[BODY_F_DY :]
	label address: 0x00a776

[	DB 0]
00a776: 00

[BODY_F_DEST_PAGE :]
	label address: 0x00a777

[	DB 0]
00a777: 00

[	DB 96]
00a778: 60

[	DB 0]
00a779: 00

[BODY_F_NY :]
	label address: 0x00a77a

[	DB 16]
00a77a: 10

[	DB 0]
00a77b: 00

[	DB 0]
00a77c: 00

[	DB 0]
00a77d: 00

[	DB 0B1101_0000]
00a77e: d0

[BODY_D :]
	label address: 0x00a77f

[	DB 112]
00a77f: 70

[	DB 0]
00a780: 00

[BODY_D_SY :]
	label address: 0x00a781

[	DB 152]
00a781: 98

[	DB 1]
00a782: 01

[	DB 96]
00a783: 60

[	DB 0]
00a784: 00

[BODY_D_DY :]
	label address: 0x00a785

[	DB 0]
00a785: 00

[BODY_D_DEST_PAGE :]
	label address: 0x00a786

[	DB 0]
00a786: 00

[	DB 64]
00a787: 40

[	DB 0]
00a788: 00

[BODY_D_NY :]
	label address: 0x00a789

[	DB 16]
00a789: 10

[	DB 0]
00a78a: 00

[	DB 0]
00a78b: 00

[	DB 0]
00a78c: 00

[	DB 0B1101_0000]
00a78d: d0

[BODY_E :]
	label address: 0x00a78e

[	DB 120]
00a78e: 78

[	DB 0]
00a78f: 00

[BODY_E_SY :]
	label address: 0x00a790

[	DB 168]
00a790: a8

[	DB 1]
00a791: 01

[	DB 104]
00a792: 68

[	DB 0]
00a793: 00

[BODY_E_DY :]
	label address: 0x00a794

[	DB 0]
00a794: 00

[BODY_E_DEST_PAGE :]
	label address: 0x00a795

[	DB 0]
00a795: 00

[	DB 48]
00a796: 30

[	DB 0]
00a797: 00

[BODY_E_NY :]
	label address: 0x00a798

[	DB 16]
00a798: 10

[	DB 0]
00a799: 00

[	DB 0]
00a79a: 00

[	DB 0]
00a79b: 00

[	DB 0B1101_0000]
00a79c: d0

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//bigchar.asm"] end

[	INCLUDE ".//shot.asm"] begin
[	SCOPE SHOT_PROCESS]
	Scope path: SHOT_PROCESS:

[SHOT_INITIALIZER ::]
	global label address: 0x00a79d

[	LD HL , SHOT_TABLE] Z80:11cyc, R800:3cyc
00a79d: 21 4b a9

[	XOR A , A] Z80:5cyc, R800:1cyc
00a7a0: af

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00a7a1: 77

[	LD [ SHOT_ROUND_ROBIN ] , A] Z80:14cyc, R800:6cyc
00a7a2: 32 6b aa

[	LD A , 50] Z80:8cyc, R800:2cyc
00a7a5: 3e 32

[	LD [ SHOT_APPEAR_TIMING ] , A] Z80:14cyc, R800:6cyc
00a7a7: 32 6c aa

[	LD [ SHOT_APPEAR_TIMING_SPEED ] , A] Z80:14cyc, R800:6cyc
00a7aa: 32 6d aa

[	LD DE , SHOT_TABLE + 1] Z80:11cyc, R800:3cyc
00a7ad: 11 4c a9

[	LD BC , SA_SIZE * NUMBER_OF_SHOTS - 1] Z80:11cyc, R800:3cyc
00a7b0: 01 1f 01

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00a7b3: ed b0

[	RET] Z80:11cyc, R800:5cyc
00a7b5: c9

[SHOT_PROCESS ::]
	global label address: 0x00a7b6

[	LD HL , [ BIGCHAR_Y_SP ]] Z80:17cyc, R800:7cyc
00a7b6: 2a e4 a6

[	LD BC , 56] Z80:11cyc, R800:3cyc
00a7b9: 01 38 00

[	OR A , A] Z80:5cyc, R800:1cyc
00a7bc: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00a7bd: ed 42

[	JP NZ , SHOT_SILENCE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a7bf: c2 2b a9

[	LD A , [ SHOT_APPEAR_TIMING ]] Z80:14cyc, R800:6cyc
00a7c2: 3a 6c aa

[	OR A , A] Z80:5cyc, R800:1cyc
00a7c5: b7

[	JP Z , SKIP_SHOT_APPEAR_TIMING] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a7c6: ca cd a7

[	DEC A] Z80:5cyc, R800:1cyc
00a7c9: 3d

[	LD [ SHOT_APPEAR_TIMING ] , A] Z80:14cyc, R800:6cyc
00a7ca: 32 6c aa

[SKIP_SHOT_APPEAR_TIMING :]
	label address: 0x00a7cd

[	LD IX , SHOT_TABLE] Z80:16cyc, R800:4cyc
00a7cd: dd 21 4b a9

[	LD B , NUMBER_OF_SHOTS] Z80:8cyc, R800:2cyc
00a7d1: 06 20

[	LD A , [ SHOT_ROUND_ROBIN ]] Z80:14cyc, R800:6cyc
00a7d3: 3a 6b aa

[SHOT_ONE_PROCESS :]
	label address: 0x00a7d6

[	LD C , A] Z80:5cyc, R800:2cyc
00a7d6: 4f

[	PUSH BC] Z80:12cyc, R800:6cyc
00a7d7: c5

[	LD A , [ IX + SA_ENABLE ]] Z80:21cyc, R800:7cyc
00a7d8: dd 7e 00

[	OR A , A] Z80:5cyc, R800:1cyc
00a7db: b7

[	JP Z , SHOT_IS_DISABLE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a7dc: ca 85 a8

[	LD C , [ IX + SA_DELTA_X + 0 ]] Z80:21cyc, R800:7cyc
00a7df: dd 4e 01

[	LD B , [ IX + SA_DELTA_X + 1 ]] Z80:21cyc, R800:7cyc
00a7e2: dd 46 02

[	LD L , [ IX + SA_X_POSITION + 0 ]] Z80:21cyc, R800:7cyc
00a7e5: dd 6e 03

[	LD H , [ IX + SA_X_POSITION + 1 ]] Z80:21cyc, R800:7cyc
00a7e8: dd 66 04

[	XOR A , A] Z80:5cyc, R800:1cyc
00a7eb: af

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a7ec: 09

[	ADC A , B] Z80:5cyc, R800:1cyc
00a7ed: 88

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a7ee: 09

[	ADC A , B] Z80:5cyc, R800:1cyc
00a7ef: 88

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a7f0: 09

[	ADC A , B] Z80:5cyc, R800:1cyc
00a7f1: 88

[	JP NZ , SHOT_IS_DISABLE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a7f2: c2 85 a8

[	LD [ IX + SA_X_POSITION + 0 ] , L] Z80:8cyc, R800:4cyc
00a7f5: dd 75 03

[	LD [ IX + SA_X_POSITION + 1 ] , H] Z80:8cyc, R800:4cyc
00a7f8: dd 74 04

[	LD D , H] Z80:5cyc, R800:2cyc
00a7fb: 54

[	LD C , [ IX + SA_DELTA_Y + 0 ]] Z80:21cyc, R800:7cyc
00a7fc: dd 4e 05

[	LD B , [ IX + SA_DELTA_Y + 1 ]] Z80:21cyc, R800:7cyc
00a7ff: dd 46 06

[	LD L , [ IX + SA_Y_POSITION + 0 ]] Z80:21cyc, R800:7cyc
00a802: dd 6e 07

[	LD H , [ IX + SA_Y_POSITION + 1 ]] Z80:21cyc, R800:7cyc
00a805: dd 66 08

[	XOR A , A] Z80:5cyc, R800:1cyc
00a808: af

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a809: 09

[	ADC A , B] Z80:5cyc, R800:1cyc
00a80a: 88

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a80b: 09

[	ADC A , B] Z80:5cyc, R800:1cyc
00a80c: 88

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a80d: 09

[	ADC A , B] Z80:5cyc, R800:1cyc
00a80e: 88

[	JP NZ , SHOT_IS_DISABLE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a80f: c2 85 a8

[	LD [ IX + SA_Y_POSITION + 0 ] , L] Z80:8cyc, R800:4cyc
00a812: dd 75 07

[	LD [ IX + SA_Y_POSITION + 1 ] , H] Z80:8cyc, R800:4cyc
00a815: dd 74 08

[	LD E , H] Z80:5cyc, R800:2cyc
00a818: 5c

[PUT_SHOT :]
	label address: 0x00a819

[	POP BC] Z80:11cyc, R800:5cyc
00a819: c1

[	PUSH BC] Z80:12cyc, R800:6cyc
00a81a: c5

[	LD HL , ANDO_SHOT_SPRITE_COLOR1] Z80:11cyc, R800:3cyc
00a81b: 21 a5 b6

[	LD B , 72] Z80:8cyc, R800:2cyc
00a81e: 06 48

[	CALL SD_PUT_SPRITE_SINGLE] Z80:18cyc, R800:5cyc
00a820: cd 39 b2

[PUT_SHOT_EXIT :]
	label address: 0x00a823

[CHECK_CRASH_Y :]
	label address: 0x00a823

[	LD A , [ IX + SA_Y_POSITION + 1 ]] Z80:21cyc, R800:7cyc
00a823: dd 7e 08

[	LD E , A] Z80:5cyc, R800:2cyc
00a826: 5f

[	LD A , [ PLAYER_Y ]] Z80:14cyc, R800:6cyc
00a827: 3a 7e a1

[	SUB A , E] Z80:5cyc, R800:1cyc
00a82a: 93

[	JP NC , CHECK_CRASH_Y_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a82b: d2 30 a8

[	NEG] Z80:10cyc, R800:2cyc
00a82e: ed 44

[CHECK_CRASH_Y_SKIP0 :]
	label address: 0x00a830

[	CP A , 8] Z80:8cyc, R800:2cyc
00a830: fe 08

[	JP NC , EXIT_CRASH] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a832: d2 46 a8

[CHECK_CRASH_X :]
	label address: 0x00a835

[	LD A , [ IX + SA_X_POSITION + 1 ]] Z80:21cyc, R800:7cyc
00a835: dd 7e 04

[	LD D , A] Z80:5cyc, R800:2cyc
00a838: 57

[	LD A , [ PLAYER_X ]] Z80:14cyc, R800:6cyc
00a839: 3a 7f a1

[	SBC A , D] Z80:5cyc, R800:1cyc
00a83c: 9a

[	JP NC , CHECK_CRASH_X_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a83d: d2 41 a8

[	CPL] Z80:5cyc, R800:1cyc
00a840: 2f

[CHECK_CRASH_X_SKIP0 :]
	label address: 0x00a841

[	CP A , 8] Z80:8cyc, R800:2cyc
00a841: fe 08

[	JP C , CRASH] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a843: da 6d a8

[EXIT_CRASH :]
	label address: 0x00a846

[	LD BC , SA_SIZE] Z80:11cyc, R800:3cyc
00a846: 01 09 00

[	ADD IX , BC] Z80:17cyc, R800:2cyc
00a849: dd 09

[	POP BC] Z80:11cyc, R800:5cyc
00a84b: c1

[	LD A , C] Z80:5cyc, R800:2cyc
00a84c: 79

[	INC A] Z80:5cyc, R800:1cyc
00a84d: 3c

[	CP A , NUMBER_OF_SHOTS] Z80:8cyc, R800:2cyc
00a84e: fe 20

[	JP NZ , PUT_SHOT_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a850: c2 54 a8

[	XOR A , A] Z80:5cyc, R800:1cyc
00a853: af

[PUT_SHOT_SKIP :]
	label address: 0x00a854

[	DEC B] Z80:5cyc, R800:1cyc
00a854: 05

[	JP NZ , SHOT_ONE_PROCESS] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a855: c2 d6 a7

[PREPARE_NEXT_FRAME :]
	label address: 0x00a858

[	SUB A , 7] Z80:8cyc, R800:2cyc
00a858: d6 07

[	JP NC , PREPARE_NEXT_FRAME_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a85a: d2 5f a8

[	ADD A , NUMBER_OF_SHOTS] Z80:8cyc, R800:2cyc
00a85d: c6 20

[PREPARE_NEXT_FRAME_SKIP :]
	label address: 0x00a85f

[	LD [ SHOT_ROUND_ROBIN ] , A] Z80:14cyc, R800:6cyc
00a85f: 32 6b aa

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a862: c0

[	LD A , [ SHOT_APPEAR_TIMING_SPEED ]] Z80:14cyc, R800:6cyc
00a863: 3a 6d aa

[	OR A , A] Z80:5cyc, R800:1cyc
00a866: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00a867: c8

[	DEC A] Z80:5cyc, R800:1cyc
00a868: 3d

[	LD [ SHOT_APPEAR_TIMING_SPEED ] , A] Z80:14cyc, R800:6cyc
00a869: 32 6d aa

[	RET] Z80:11cyc, R800:5cyc
00a86c: c9

[CRASH :]
	label address: 0x00a86d

[	LD A , [ PLAYER_IS_CRASHED ]] Z80:14cyc, R800:6cyc
00a86d: 3a 80 a1

[	OR A , A] Z80:5cyc, R800:1cyc
00a870: b7

[	JP NZ , EXIT_CRASH] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a871: c2 46 a8

[	LD A , 50] Z80:8cyc, R800:2cyc
00a874: 3e 32

[	LD [ PLAYER_IS_CRASHED ] , A] Z80:14cyc, R800:6cyc
00a876: 32 80 a1

[	CALL BGMDRIVER_STOP] Z80:18cyc, R800:5cyc
00a879: cd 10 b7

[	LD HL , SE_CRASH] Z80:11cyc, R800:3cyc
00a87c: 21 b7 aa

[	CALL BGMDRIVER_PLAY_SOUND_EFFECT] Z80:18cyc, R800:5cyc
00a87f: cd 6b b7

[	JP EXIT_CRASH] Z80:11cyc, R800:5cyc
00a882: c3 46 a8

[SHOT_IS_DISABLE :]
	label address: 0x00a885

[	LD A , [ SHOT_APPEAR_TIMING ]] Z80:14cyc, R800:6cyc
00a885: 3a 6c aa

[	OR A , A] Z80:5cyc, R800:1cyc
00a888: b7

[	JP Z , PUT_NEW_SHOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a889: ca 93 a8

[	XOR A , A] Z80:5cyc, R800:1cyc
00a88c: af

[	LD [ IX + SA_ENABLE ] , A] Z80:8cyc, R800:4cyc
00a88d: dd 77 00

[	JP PUT_SHOT_EXIT] Z80:11cyc, R800:5cyc
00a890: c3 23 a8

[PUT_NEW_SHOT :]
	label address: 0x00a893

[	INC A] Z80:5cyc, R800:1cyc
00a893: 3c

[	LD [ IX + SA_ENABLE ] , A] Z80:8cyc, R800:4cyc
00a894: dd 77 00

[	LD A , [ SHOT_APPEAR_TIMING_SPEED ]] Z80:14cyc, R800:6cyc
00a897: 3a 6d aa

[	LD [ SHOT_APPEAR_TIMING ] , A] Z80:14cyc, R800:6cyc
00a89a: 32 6c aa

[	LD A , [ SHOT_TYPE ]] Z80:14cyc, R800:6cyc
00a89d: 3a 6e aa

[	INC A] Z80:5cyc, R800:1cyc
00a8a0: 3c

[	AND A , 7] Z80:8cyc, R800:2cyc
00a8a1: e6 07

[	LD [ SHOT_TYPE ] , A] Z80:14cyc, R800:6cyc
00a8a3: 32 6e aa

[	SRL A] Z80:10cyc, R800:2cyc
00a8a6: cb 3f

[	JP C , APPEAR_DIRECT_SHOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a8a8: da d3 a8

[APPEAR_ROUND_SHOT :]
	label address: 0x00a8ab

[	CALL SET_APPEAR_POSITION] Z80:18cyc, R800:5cyc
00a8ab: cd 2c a9

[	CALL RANDOM] Z80:18cyc, R800:5cyc
00a8ae: cd bc b0

[	AND A , 15] Z80:8cyc, R800:2cyc
00a8b1: e6 0f

[	RLCA] Z80:5cyc, R800:1cyc
00a8b3: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a8b4: 07

[	LD C , A] Z80:5cyc, R800:2cyc
00a8b5: 4f

[	LD B , 0] Z80:8cyc, R800:2cyc
00a8b6: 06 00

[	LD HL , COS_SIN_TABLE] Z80:11cyc, R800:3cyc
00a8b8: 21 77 aa

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a8bb: 09

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00a8bc: 4e

[	INC HL] Z80:7cyc, R800:1cyc
00a8bd: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00a8be: 46

[	INC HL] Z80:7cyc, R800:1cyc
00a8bf: 23

[	LD [ IX + SA_DELTA_X + 0 ] , C] Z80:8cyc, R800:4cyc
00a8c0: dd 71 01

[	LD [ IX + SA_DELTA_X + 1 ] , B] Z80:8cyc, R800:4cyc
00a8c3: dd 70 02

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00a8c6: 4e

[	INC HL] Z80:7cyc, R800:1cyc
00a8c7: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00a8c8: 46

[	INC HL] Z80:7cyc, R800:1cyc
00a8c9: 23

[	LD [ IX + SA_DELTA_Y + 0 ] , C] Z80:8cyc, R800:4cyc
00a8ca: dd 71 05

[	LD [ IX + SA_DELTA_Y + 1 ] , B] Z80:8cyc, R800:4cyc
00a8cd: dd 70 06

[	JP PUT_SHOT] Z80:11cyc, R800:5cyc
00a8d0: c3 19 a8

[APPEAR_DIRECT_SHOT :]
	label address: 0x00a8d3

[	CALL SET_APPEAR_POSITION] Z80:18cyc, R800:5cyc
00a8d3: cd 2c a9

[	PUSH DE] Z80:12cyc, R800:6cyc
00a8d6: d5

[APPEAR_DIRECT_SHOT_GET_DX :]
	label address: 0x00a8d7

[	LD A , [ PLAYER_X ]] Z80:14cyc, R800:6cyc
00a8d7: 3a 7f a1

[	LD L , A] Z80:5cyc, R800:2cyc
00a8da: 6f

[	LD C , D] Z80:5cyc, R800:2cyc
00a8db: 4a

[	XOR A , A] Z80:5cyc, R800:1cyc
00a8dc: af

[	LD H , A] Z80:5cyc, R800:2cyc
00a8dd: 67

[	LD B , A] Z80:5cyc, R800:2cyc
00a8de: 47

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00a8df: ed 42

[	LD [ IX + SA_DELTA_X + 0 ] , L] Z80:8cyc, R800:4cyc
00a8e1: dd 75 01

[	LD [ IX + SA_DELTA_X + 1 ] , H] Z80:8cyc, R800:4cyc
00a8e4: dd 74 02

[APPEAR_DIRECT_SHOT_ABS_DX :]
	label address: 0x00a8e7

[	LD A , L] Z80:5cyc, R800:2cyc
00a8e7: 7d

[	INC H] Z80:5cyc, R800:1cyc
00a8e8: 24

[	JP NZ , APPEAR_DIRECT_SHOT_ABS_DX_PLUS] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a8e9: c2 ee a8

[	NEG] Z80:10cyc, R800:2cyc
00a8ec: ed 44

[APPEAR_DIRECT_SHOT_ABS_DX_PLUS :]
	label address: 0x00a8ee

[	LD D , A] Z80:5cyc, R800:2cyc
00a8ee: 57

[APPEAR_DIRECT_SHOT_GET_DY :]
	label address: 0x00a8ef

[	LD A , [ PLAYER_Y ]] Z80:14cyc, R800:6cyc
00a8ef: 3a 7e a1

[	LD L , A] Z80:5cyc, R800:2cyc
00a8f2: 6f

[	LD C , E] Z80:5cyc, R800:2cyc
00a8f3: 4b

[	XOR A , A] Z80:5cyc, R800:1cyc
00a8f4: af

[	LD H , A] Z80:5cyc, R800:2cyc
00a8f5: 67

[	LD B , A] Z80:5cyc, R800:2cyc
00a8f6: 47

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00a8f7: ed 42

[	LD [ IX + SA_DELTA_Y + 0 ] , L] Z80:8cyc, R800:4cyc
00a8f9: dd 75 05

[	LD [ IX + SA_DELTA_Y + 1 ] , H] Z80:8cyc, R800:4cyc
00a8fc: dd 74 06

[APPEAR_DIRECT_SHOT_ABS_DY :]
	label address: 0x00a8ff

[	LD A , L] Z80:5cyc, R800:2cyc
00a8ff: 7d

[	INC H] Z80:5cyc, R800:1cyc
00a900: 24

[	JP NZ , APPEAR_DIRECT_SHOT_ABS_DY_PLUS] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a901: c2 06 a9

[	NEG] Z80:10cyc, R800:2cyc
00a904: ed 44

[APPEAR_DIRECT_SHOT_ABS_DY_PLUS :]
	label address: 0x00a906

[	CP A , D] Z80:5cyc, R800:1cyc
00a906: ba

[	JP NC , APPEAR_DIRECT_SHOT_GT_DY] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a907: d2 0b a9

[	LD A , D] Z80:5cyc, R800:2cyc
00a90a: 7a

[APPEAR_DIRECT_SHOT_GT_DY :]
	label address: 0x00a90b

[	LD D , [ IX + SA_DELTA_X + 0 ]] Z80:21cyc, R800:7cyc
00a90b: dd 56 01

[	LD E , [ IX + SA_DELTA_Y + 0 ]] Z80:21cyc, R800:7cyc
00a90e: dd 5e 05

[	LD H , 7] Z80:8cyc, R800:2cyc
00a911: 26 07

[APPEAR_DIRECT_SHOT_CALC_VECTOR :]
	label address: 0x00a913

[	CP A , 0X80] Z80:8cyc, R800:2cyc
00a913: fe 80

[	JP NC , APPEAR_DIRECT_SHOT_CALC_VECTOR_EXIT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a915: d2 21 a9

[	RLCA] Z80:5cyc, R800:1cyc
00a918: 07

[	RLC D] Z80:10cyc, R800:2cyc
00a919: cb 02

[	RLC E] Z80:10cyc, R800:2cyc
00a91b: cb 03

[	DEC H] Z80:5cyc, R800:1cyc
00a91d: 25

[	JP NZ , APPEAR_DIRECT_SHOT_CALC_VECTOR] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00a91e: c2 13 a9

[APPEAR_DIRECT_SHOT_CALC_VECTOR_EXIT :]
	label address: 0x00a921

[	LD [ IX + SA_DELTA_X + 0 ] , D] Z80:8cyc, R800:4cyc
00a921: dd 72 01

[	LD [ IX + SA_DELTA_Y + 0 ] , E] Z80:8cyc, R800:4cyc
00a924: dd 73 05

[	POP DE] Z80:11cyc, R800:5cyc
00a927: d1

[	JP PUT_SHOT] Z80:11cyc, R800:5cyc
00a928: c3 19 a8

[SHOT_SILENCE :]
	label address: 0x00a92b

[	RET] Z80:11cyc, R800:5cyc
00a92b: c9

[SET_APPEAR_POSITION :]
	label address: 0x00a92c

[	CALL RANDOM] Z80:18cyc, R800:5cyc
00a92c: cd bc b0

[	AND A , 3] Z80:8cyc, R800:2cyc
00a92f: e6 03

[	RLCA] Z80:5cyc, R800:1cyc
00a931: 07

[	LD C , A] Z80:5cyc, R800:2cyc
00a932: 4f

[	LD B , 0] Z80:8cyc, R800:2cyc
00a933: 06 00

[	LD HL , SHOT_START_TABLE] Z80:11cyc, R800:3cyc
00a935: 21 6f aa

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00a938: 09

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00a939: 56

[	INC HL] Z80:7cyc, R800:1cyc
00a93a: 23

[	LD [ IX + SA_X_POSITION + 1 ] , D] Z80:8cyc, R800:4cyc
00a93b: dd 72 04

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00a93e: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00a93f: 23

[	LD [ IX + SA_Y_POSITION + 1 ] , E] Z80:8cyc, R800:4cyc
00a940: dd 73 08

[	XOR A , A] Z80:5cyc, R800:1cyc
00a943: af

[	LD [ IX + SA_X_POSITION + 0 ] , A] Z80:8cyc, R800:4cyc
00a944: dd 77 03

[	LD [ IX + SA_Y_POSITION + 0 ] , A] Z80:8cyc, R800:4cyc
00a947: dd 77 07

[	RET] Z80:11cyc, R800:5cyc
00a94a: c9

Define macro {SHOT_ATTRIBUTE MACRO}

[SHOT_TABLE :]
	label address: 0x00a94b

[REPEAT I , NUMBER_OF_SHOTS]
	Scope path: SHOT_PROCESS:@REPEAT1:

	repeat begin
((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO1:
[	DB 0]
00a94b: 00

[	DW 0]
00a94c: 00 00

[	DW 0]
00a94e: 00 00

[	DW 0]
00a950: 00 00

[	DW 0]
00a952: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO2:
[	DB 0]
00a954: 00

[	DW 0]
00a955: 00 00

[	DW 0]
00a957: 00 00

[	DW 0]
00a959: 00 00

[	DW 0]
00a95b: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO3:
[	DB 0]
00a95d: 00

[	DW 0]
00a95e: 00 00

[	DW 0]
00a960: 00 00

[	DW 0]
00a962: 00 00

[	DW 0]
00a964: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO4:
[	DB 0]
00a966: 00

[	DW 0]
00a967: 00 00

[	DW 0]
00a969: 00 00

[	DW 0]
00a96b: 00 00

[	DW 0]
00a96d: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO5:
[	DB 0]
00a96f: 00

[	DW 0]
00a970: 00 00

[	DW 0]
00a972: 00 00

[	DW 0]
00a974: 00 00

[	DW 0]
00a976: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO6:
[	DB 0]
00a978: 00

[	DW 0]
00a979: 00 00

[	DW 0]
00a97b: 00 00

[	DW 0]
00a97d: 00 00

[	DW 0]
00a97f: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO7:
[	DB 0]
00a981: 00

[	DW 0]
00a982: 00 00

[	DW 0]
00a984: 00 00

[	DW 0]
00a986: 00 00

[	DW 0]
00a988: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO8:
[	DB 0]
00a98a: 00

[	DW 0]
00a98b: 00 00

[	DW 0]
00a98d: 00 00

[	DW 0]
00a98f: 00 00

[	DW 0]
00a991: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO9:
[	DB 0]
00a993: 00

[	DW 0]
00a994: 00 00

[	DW 0]
00a996: 00 00

[	DW 0]
00a998: 00 00

[	DW 0]
00a99a: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO10:
[	DB 0]
00a99c: 00

[	DW 0]
00a99d: 00 00

[	DW 0]
00a99f: 00 00

[	DW 0]
00a9a1: 00 00

[	DW 0]
00a9a3: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO11:
[	DB 0]
00a9a5: 00

[	DW 0]
00a9a6: 00 00

[	DW 0]
00a9a8: 00 00

[	DW 0]
00a9aa: 00 00

[	DW 0]
00a9ac: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO12:
[	DB 0]
00a9ae: 00

[	DW 0]
00a9af: 00 00

[	DW 0]
00a9b1: 00 00

[	DW 0]
00a9b3: 00 00

[	DW 0]
00a9b5: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO13:
[	DB 0]
00a9b7: 00

[	DW 0]
00a9b8: 00 00

[	DW 0]
00a9ba: 00 00

[	DW 0]
00a9bc: 00 00

[	DW 0]
00a9be: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO14:
[	DB 0]
00a9c0: 00

[	DW 0]
00a9c1: 00 00

[	DW 0]
00a9c3: 00 00

[	DW 0]
00a9c5: 00 00

[	DW 0]
00a9c7: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO15:
[	DB 0]
00a9c9: 00

[	DW 0]
00a9ca: 00 00

[	DW 0]
00a9cc: 00 00

[	DW 0]
00a9ce: 00 00

[	DW 0]
00a9d0: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO16:
[	DB 0]
00a9d2: 00

[	DW 0]
00a9d3: 00 00

[	DW 0]
00a9d5: 00 00

[	DW 0]
00a9d7: 00 00

[	DW 0]
00a9d9: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO17:
[	DB 0]
00a9db: 00

[	DW 0]
00a9dc: 00 00

[	DW 0]
00a9de: 00 00

[	DW 0]
00a9e0: 00 00

[	DW 0]
00a9e2: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO18:
[	DB 0]
00a9e4: 00

[	DW 0]
00a9e5: 00 00

[	DW 0]
00a9e7: 00 00

[	DW 0]
00a9e9: 00 00

[	DW 0]
00a9eb: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO19:
[	DB 0]
00a9ed: 00

[	DW 0]
00a9ee: 00 00

[	DW 0]
00a9f0: 00 00

[	DW 0]
00a9f2: 00 00

[	DW 0]
00a9f4: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO20:
[	DB 0]
00a9f6: 00

[	DW 0]
00a9f7: 00 00

[	DW 0]
00a9f9: 00 00

[	DW 0]
00a9fb: 00 00

[	DW 0]
00a9fd: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO21:
[	DB 0]
00a9ff: 00

[	DW 0]
00aa00: 00 00

[	DW 0]
00aa02: 00 00

[	DW 0]
00aa04: 00 00

[	DW 0]
00aa06: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO22:
[	DB 0]
00aa08: 00

[	DW 0]
00aa09: 00 00

[	DW 0]
00aa0b: 00 00

[	DW 0]
00aa0d: 00 00

[	DW 0]
00aa0f: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO23:
[	DB 0]
00aa11: 00

[	DW 0]
00aa12: 00 00

[	DW 0]
00aa14: 00 00

[	DW 0]
00aa16: 00 00

[	DW 0]
00aa18: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO24:
[	DB 0]
00aa1a: 00

[	DW 0]
00aa1b: 00 00

[	DW 0]
00aa1d: 00 00

[	DW 0]
00aa1f: 00 00

[	DW 0]
00aa21: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO25:
[	DB 0]
00aa23: 00

[	DW 0]
00aa24: 00 00

[	DW 0]
00aa26: 00 00

[	DW 0]
00aa28: 00 00

[	DW 0]
00aa2a: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO26:
[	DB 0]
00aa2c: 00

[	DW 0]
00aa2d: 00 00

[	DW 0]
00aa2f: 00 00

[	DW 0]
00aa31: 00 00

[	DW 0]
00aa33: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO27:
[	DB 0]
00aa35: 00

[	DW 0]
00aa36: 00 00

[	DW 0]
00aa38: 00 00

[	DW 0]
00aa3a: 00 00

[	DW 0]
00aa3c: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO28:
[	DB 0]
00aa3e: 00

[	DW 0]
00aa3f: 00 00

[	DW 0]
00aa41: 00 00

[	DW 0]
00aa43: 00 00

[	DW 0]
00aa45: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO29:
[	DB 0]
00aa47: 00

[	DW 0]
00aa48: 00 00

[	DW 0]
00aa4a: 00 00

[	DW 0]
00aa4c: 00 00

[	DW 0]
00aa4e: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO30:
[	DB 0]
00aa50: 00

[	DW 0]
00aa51: 00 00

[	DW 0]
00aa53: 00 00

[	DW 0]
00aa55: 00 00

[	DW 0]
00aa57: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO31:
[	DB 0]
00aa59: 00

[	DW 0]
00aa5a: 00 00

[	DW 0]
00aa5c: 00 00

[	DW 0]
00aa5e: 00 00

[	DW 0]
00aa60: 00 00

((SHOT_ATTRIBUTE))
	Scope path: SHOT_PROCESS:@REPEAT1:@MACRO32:
[	DB 0]
00aa62: 00

[	DW 0]
00aa63: 00 00

[	DW 0]
00aa65: 00 00

[	DW 0]
00aa67: 00 00

[	DW 0]
00aa69: 00 00

	repeat end
	Scope path: SHOT_PROCESS:



[SHOT_ROUND_ROBIN ::]
	global label address: 0x00aa6b

[	DB 0]
00aa6b: 00

[SHOT_APPEAR_TIMING :]
	label address: 0x00aa6c

[	DB 0]
00aa6c: 00

[SHOT_APPEAR_TIMING_SPEED :]
	label address: 0x00aa6d

[	DB 50]
00aa6d: 32

[SHOT_TYPE :]
	label address: 0x00aa6e

[	DB 0]
00aa6e: 00

[SHOT_START_TABLE :]
	label address: 0x00aa6f

[	DB 104 , 80]
00aa6f: 68 50

[	DB 136 , 80]
00aa71: 88 50

[	DB 136 , 112]
00aa73: 88 70

[	DB 104 , 112]
00aa75: 68 70

[COS_SIN_TABLE :]
	label address: 0x00aa77

[	DW 244 , 74]
00aa77: f4 00 4a 00

[	DW 197 , 162]
00aa7b: c5 00 a2 00

[	DW 120 , 225]
00aa7f: 78 00 e1 00

[	DW 25 , 254]
00aa83: 19 00 fe 00

[	DW - 75 , 244]
00aa87: b5 ff f4 00

[	DW - 163 , 197]
00aa8b: 5d ff c5 00

[	DW - 226 , 120]
00aa8f: 1e ff 78 00

[	DW - 255 , 25]
00aa93: 01 ff 19 00

[	DW - 245 , - 75]
00aa97: 0b ff b5 ff

[	DW - 198 , - 163]
00aa9b: 3a ff 5d ff

[	DW - 121 , - 226]
00aa9f: 87 ff 1e ff

[	DW - 26 , - 255]
00aaa3: e6 ff 01 ff

[	DW 74 , - 245]
00aaa7: 4a 00 0b ff

[	DW 162 , - 198]
00aaab: a2 00 3a ff

[	DW 225 , - 121]
00aaaf: e1 00 87 ff

[	DW 254 , - 26]
00aab3: fe 00 e6 ff

[SE_CRASH :]
	label address: 0x00aab7

[	DB 128]
00aab7: 80

[	DB BGM_SE_VOL]
00aab8: 01

[	DB 12]
00aab9: 0c

[	DB BGM_SE_FREQ]
00aaba: 00

[	DW 32768]
00aabb: 00 80

[	DB BGM_SE_NOISE_FREQ]
00aabd: 02

[	DB 20 + 0X80]
00aabe: 94

[	DB BGM_SE_WAIT]
00aabf: 03

[	DB 5]
00aac0: 05

[	DB BGM_SE_NOISE_FREQ]
00aac1: 02

[	DB 8 + 0X80]
00aac2: 88

[	DB BGM_SE_WAIT]
00aac3: 03

[	DB 5]
00aac4: 05

[	DB BGM_SE_NOISE_FREQ]
00aac5: 02

[	DB 28 + 0X80]
00aac6: 9c

[	DB BGM_SE_WAIT]
00aac7: 03

[	DB 5]
00aac8: 05

[	DB BGM_SE_NOISE_FREQ]
00aac9: 02

[	DB 12 + 0X80]
00aaca: 8c

[	DB BGM_SE_WAIT]
00aacb: 03

[	DB 5]
00aacc: 05

[	DB BGM_SE_NOISE_FREQ]
00aacd: 02

[	DB 31 + 0X80]
00aace: 9f

[	DB BGM_SE_WAIT]
00aacf: 03

[	DB 10]
00aad0: 0a

[	DB BGM_SE_NOISE_FREQ]
00aad1: 02

[	DB 15 + 0X80]
00aad2: 8f

[	DB BGM_SE_WAIT]
00aad3: 03

[	DB 10]
00aad4: 0a

[	DB BGM_SE_END]
00aad5: 04

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//shot.asm"] end

[	INCLUDE ".//background.asm"] begin
[	SCOPE BACKGROUND]
	Scope path: BACKGROUND:

[BACKGROUND_INITIALIZE ::]
	global label address: 0x00aad6

[	LD A , 192 - 8] Z80:8cyc, R800:2cyc
00aad6: 3e b8

[	LD [ PARTS_DY ] , A] Z80:14cyc, R800:6cyc
00aad8: 32 4e ac

[	LD A , 1] Z80:8cyc, R800:2cyc
00aadb: 3e 01

[	LD [ PARTS_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00aadd: 32 4f ac

[	LD HL , 37 * 32] Z80:11cyc, R800:3cyc
00aae0: 21 a0 04

[	LD [ MAP_ADDRESS ] , HL] Z80:17cyc, R800:7cyc
00aae3: 22 25 ac

[	LD B , 13] Z80:8cyc, R800:2cyc
00aae6: 06 0d

[BACKGROUND_INITIALIZE_LOOP_Y :]
	label address: 0x00aae8

[	PUSH BC] Z80:12cyc, R800:6cyc
00aae8: c5

[	DI] Z80:5cyc, R800:2cyc
00aae9: f3

[	CALL GET_MAP] Z80:18cyc, R800:5cyc
00aaea: cd cf ab

[	EI] Z80:5cyc, R800:1cyc
00aaed: fb

[	XOR A , A] Z80:5cyc, R800:1cyc
00aaee: af

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00aaef: 32 4c ac

[	LD A , 10] Z80:8cyc, R800:2cyc
00aaf2: 3e 0a

[	LD [ BACKGROUND_PARTS_INDEX ] , A] Z80:14cyc, R800:6cyc
00aaf4: 32 27 ac

[	LD B , 12] Z80:8cyc, R800:2cyc
00aaf7: 06 0c

[BACKGROUND_INITIALIZE_LOOP_X :]
	label address: 0x00aaf9

[	PUSH BC] Z80:12cyc, R800:6cyc
00aaf9: c5

[	LD A , [ BACKGROUND_PARTS_INDEX ]] Z80:14cyc, R800:6cyc
00aafa: 3a 27 ac

[	LD HL , BACKGROUND_PARTS] Z80:11cyc, R800:3cyc
00aafd: 21 28 ac

[	ADD A , L] Z80:5cyc, R800:1cyc
00ab00: 85

[	JP NC , BI_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ab01: d2 05 ab

[	INC H] Z80:5cyc, R800:1cyc
00ab04: 24

[BI_SKIP0 :]
	label address: 0x00ab05

[	LD L , A] Z80:5cyc, R800:2cyc
00ab05: 6f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00ab06: 7e

[	PUSH HL] Z80:12cyc, R800:6cyc
00ab07: e5

[	CALL SET_SX_AND_SY] Z80:18cyc, R800:5cyc
00ab08: cd 13 ac

[	LD HL , PARTS] Z80:11cyc, R800:3cyc
00ab0b: 21 48 ac

[	DI] Z80:5cyc, R800:2cyc
00ab0e: f3

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab0f: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab12: cd 6f af

[	EI] Z80:5cyc, R800:1cyc
00ab15: fb

[	LD A , [ PARTS_DX ]] Z80:14cyc, R800:6cyc
00ab16: 3a 4c ac

[	ADD A , 8] Z80:8cyc, R800:2cyc
00ab19: c6 08

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00ab1b: 32 4c ac

[	LD A , [ BACKGROUND_PARTS_INDEX ]] Z80:14cyc, R800:6cyc
00ab1e: 3a 27 ac

[	INC A] Z80:5cyc, R800:1cyc
00ab21: 3c

[	LD [ BACKGROUND_PARTS_INDEX ] , A] Z80:14cyc, R800:6cyc
00ab22: 32 27 ac

[	POP HL] Z80:11cyc, R800:5cyc
00ab25: e1

[	POP BC] Z80:11cyc, R800:5cyc
00ab26: c1

[	DJNZ BACKGROUND_INITIALIZE_LOOP_X] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ab27: 10 d0

[	LD A , [ PARTS_DY ]] Z80:14cyc, R800:6cyc
00ab29: 3a 4e ac

[	SUB A , 8] Z80:8cyc, R800:2cyc
00ab2c: d6 08

[	LD [ PARTS_DY ] , A] Z80:14cyc, R800:6cyc
00ab2e: 32 4e ac

[	POP BC] Z80:11cyc, R800:5cyc
00ab31: c1

[	DJNZ BACKGROUND_INITIALIZE_LOOP_Y] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ab32: 10 b4

[	LD A , 192 - 8] Z80:8cyc, R800:2cyc
00ab34: 3e b8

[	LD [ PARTS_DY ] , A] Z80:14cyc, R800:6cyc
00ab36: 32 4e ac

[	XOR A , A] Z80:5cyc, R800:1cyc
00ab39: af

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00ab3a: 32 4c ac

[	LD [ PARTS_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00ab3d: 32 4f ac

[	LD [ BACKGROUND_PARTS_INDEX ] , A] Z80:14cyc, R800:6cyc
00ab40: 32 27 ac

[	LD [ MAP_ADDRESS ] , A] Z80:14cyc, R800:6cyc
00ab43: 32 25 ac

[	LD [ MAP_ADDRESS + 1 ] , A] Z80:14cyc, R800:6cyc
00ab46: 32 26 ac

[	DI] Z80:5cyc, R800:2cyc
00ab49: f3

[	LD HL , 16 * 30] Z80:11cyc, R800:3cyc
00ab4a: 21 e0 01

[BG_LOOP :]
	label address: 0x00ab4d

[	PUSH HL] Z80:12cyc, R800:6cyc
00ab4d: e5

[	CALL BACKGROUND] Z80:18cyc, R800:5cyc
00ab4e: cd 5a ab

[	POP HL] Z80:11cyc, R800:5cyc
00ab51: e1

[	DEC HL] Z80:7cyc, R800:1cyc
00ab52: 2b

[	LD A , L] Z80:5cyc, R800:2cyc
00ab53: 7d

[	OR A , H] Z80:5cyc, R800:1cyc
00ab54: b4

[	JP NZ , BG_LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ab55: c2 4d ab

[	EI] Z80:5cyc, R800:1cyc
00ab58: fb

[	RET] Z80:11cyc, R800:5cyc
00ab59: c9

[BACKGROUND ::]
	global label address: 0x00ab5a

[	LD A , [ BACKGROUND_PARTS_INDEX ]] Z80:14cyc, R800:6cyc
00ab5a: 3a 27 ac

[	OR A , A] Z80:5cyc, R800:1cyc
00ab5d: b7

[	CALL Z , GET_MAP] Z80:18cyc(branch), 11cyc(through), R800:5cyc(branch), 3cyc(through)
00ab5e: cc cf ab

[PUT_PARTS :]
	label address: 0x00ab61

[	LD HL , BACKGROUND_PARTS] Z80:11cyc, R800:3cyc
00ab61: 21 28 ac

[	ADD A , L] Z80:5cyc, R800:1cyc
00ab64: 85

[	JP NC , SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ab65: d2 69 ab

[	INC H] Z80:5cyc, R800:1cyc
00ab68: 24

[SKIP0 :]
	label address: 0x00ab69

[	LD L , A] Z80:5cyc, R800:2cyc
00ab69: 6f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00ab6a: 7e

[	PUSH HL] Z80:12cyc, R800:6cyc
00ab6b: e5

[	CALL SET_SX_AND_SY] Z80:18cyc, R800:5cyc
00ab6c: cd 13 ac

[	LD HL , PARTS] Z80:11cyc, R800:3cyc
00ab6f: 21 48 ac

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab72: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab75: cd 6f af

[	LD A , 2] Z80:8cyc, R800:2cyc
00ab78: 3e 02

[	LD [ PARTS_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00ab7a: 32 4f ac

[	LD HL , PARTS] Z80:11cyc, R800:3cyc
00ab7d: 21 48 ac

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab80: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab83: cd 6f af

[	XOR A , A] Z80:5cyc, R800:1cyc
00ab86: af

[	LD [ PARTS_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00ab87: 32 4f ac

[	LD A , [ PARTS_DX ]] Z80:14cyc, R800:6cyc
00ab8a: 3a 4c ac

[	ADD A , 8] Z80:8cyc, R800:2cyc
00ab8d: c6 08

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00ab8f: 32 4c ac

[	POP HL] Z80:11cyc, R800:5cyc
00ab92: e1

[	INC HL] Z80:7cyc, R800:1cyc
00ab93: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00ab94: 7e

[	CALL SET_SX_AND_SY] Z80:18cyc, R800:5cyc
00ab95: cd 13 ac

[	LD HL , PARTS] Z80:11cyc, R800:3cyc
00ab98: 21 48 ac

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab9b: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ab9e: cd 6f af

[	LD A , 2] Z80:8cyc, R800:2cyc
00aba1: 3e 02

[	LD [ PARTS_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00aba3: 32 4f ac

[	LD HL , PARTS] Z80:11cyc, R800:3cyc
00aba6: 21 48 ac

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00aba9: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00abac: cd 6f af

[	XOR A , A] Z80:5cyc, R800:1cyc
00abaf: af

[	LD [ PARTS_DEST_PAGE ] , A] Z80:14cyc, R800:6cyc
00abb0: 32 4f ac

[	LD A , [ PARTS_DX ]] Z80:14cyc, R800:6cyc
00abb3: 3a 4c ac

[	ADD A , 8] Z80:8cyc, R800:2cyc
00abb6: c6 08

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00abb8: 32 4c ac

[	LD A , [ BACKGROUND_PARTS_INDEX ]] Z80:14cyc, R800:6cyc
00abbb: 3a 27 ac

[	INC A] Z80:5cyc, R800:1cyc
00abbe: 3c

[	INC A] Z80:5cyc, R800:1cyc
00abbf: 3c

[	AND A , 31] Z80:8cyc, R800:2cyc
00abc0: e6 1f

[	LD [ BACKGROUND_PARTS_INDEX ] , A] Z80:14cyc, R800:6cyc
00abc2: 32 27 ac

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00abc5: c0

[	LD A , [ PARTS_DY ]] Z80:14cyc, R800:6cyc
00abc6: 3a 4e ac

[	SUB A , 8] Z80:8cyc, R800:2cyc
00abc9: d6 08

[	LD [ PARTS_DY ] , A] Z80:14cyc, R800:6cyc
00abcb: 32 4e ac

[	RET] Z80:11cyc, R800:5cyc
00abce: c9

[GET_MAP :]
	label address: 0x00abcf

[	LD HL , [ MAP_ADDRESS ]] Z80:17cyc, R800:7cyc
00abcf: 2a 25 ac

[	LD A , H] Z80:5cyc, R800:2cyc
00abd2: 7c

[	RLCA] Z80:5cyc, R800:1cyc
00abd3: 07

[	RLCA] Z80:5cyc, R800:1cyc
00abd4: 07

[	AND A , 1] Z80:8cyc, R800:2cyc
00abd5: e6 01

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00abd7: 0e 99

[	OR A , 0B0000_00110] Z80:8cyc, R800:2cyc
00abd9: f6 06

[	DI] Z80:5cyc, R800:2cyc
00abdb: f3

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00abdc: ed 79

[	LD A , 14 | 0X80] Z80:8cyc, R800:2cyc
00abde: 3e 8e

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00abe0: ed 79

[	LD A , H] Z80:5cyc, R800:2cyc
00abe2: 7c

[	AND A , 0B0011_1111] Z80:8cyc, R800:2cyc
00abe3: e6 3f

[	OUT [ C ] , L] Z80:14cyc, R800:10 or 9cyc
00abe5: ed 69

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00abe7: ed 79

[	EI] Z80:5cyc, R800:1cyc
00abe9: fb

[	LD BC , 32] Z80:11cyc, R800:3cyc
00abea: 01 20 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00abed: 09

[	LD A , H] Z80:5cyc, R800:2cyc
00abee: 7c

[	CP A , 0X60] Z80:8cyc, R800:2cyc
00abef: fe 60

[	JP NZ , GET_MAP_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00abf1: c2 f7 ab

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00abf4: 21 00 00

[GET_MAP_SKIP :]
	label address: 0x00abf7

[	LD [ MAP_ADDRESS ] , HL] Z80:17cyc, R800:7cyc
00abf7: 22 25 ac

[	LD BC , ( 32 << 8 ) | IO_VDP_PORT0] Z80:11cyc, R800:3cyc
00abfa: 01 98 20

[	LD HL , BACKGROUND_PARTS] Z80:11cyc, R800:3cyc
00abfd: 21 28 ac

[	INIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00ac00: ed b2

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00ac02: 0e 99

[	LD A , [ REG14SAV ]] Z80:14cyc, R800:6cyc
00ac04: 3a ed ff

[	DI] Z80:5cyc, R800:2cyc
00ac07: f3

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ac08: ed 79

[	LD A , 14 | 0X80] Z80:8cyc, R800:2cyc
00ac0a: 3e 8e

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ac0c: ed 79

[	EI] Z80:5cyc, R800:1cyc
00ac0e: fb

[	LD A , [ BACKGROUND_PARTS_INDEX ]] Z80:14cyc, R800:6cyc
00ac0f: 3a 27 ac

[	RET] Z80:11cyc, R800:5cyc
00ac12: c9

[SET_SX_AND_SY :]
	label address: 0x00ac13

[	LD B , A] Z80:5cyc, R800:2cyc
00ac13: 47

[	AND A , 31] Z80:8cyc, R800:2cyc
00ac14: e6 1f

[	RLCA] Z80:5cyc, R800:1cyc
00ac16: 07

[	RLCA] Z80:5cyc, R800:1cyc
00ac17: 07

[	RLCA] Z80:5cyc, R800:1cyc
00ac18: 07

[	LD [ PARTS_SX ] , A] Z80:14cyc, R800:6cyc
00ac19: 32 48 ac

[	LD A , B] Z80:5cyc, R800:2cyc
00ac1c: 78

[	AND A , ~ 31] Z80:8cyc, R800:2cyc
00ac1d: e6 e0

[	RRCA] Z80:5cyc, R800:1cyc
00ac1f: 0f

[	RRCA] Z80:5cyc, R800:1cyc
00ac20: 0f

[	LD [ PARTS_SY ] , A] Z80:14cyc, R800:6cyc
00ac21: 32 4a ac

[	RET] Z80:11cyc, R800:5cyc
00ac24: c9

[MAP_ADDRESS :]
	label address: 0x00ac25

[	DW 0X0000]
00ac25: 00 00

[BACKGROUND_PARTS_INDEX :]
	label address: 0x00ac27

[	DB 0]
00ac27: 00

[BACKGROUND_PARTS ::]
	global label address: 0x00ac28

[	DB 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0]
00ac28: 00 00 00 00 00 00 00 00
00ac30: 00 00 00 00 00 00 00 00

[	DB 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0]
00ac38: 00 00 00 00 00 00 00 00
00ac40: 00 00 00 00 00 00 00 00

[PARTS :]
	label address: 0x00ac48

[PARTS_SX :]
	label address: 0x00ac48

[	DB 0]
00ac48: 00

[	DB 0]
00ac49: 00

[PARTS_SY :]
	label address: 0x00ac4a

[	DB 0]
00ac4a: 00

[	DB 1]
00ac4b: 01

[PARTS_DX :]
	label address: 0x00ac4c

[	DB 0]
00ac4c: 00

[	DB 0]
00ac4d: 00

[PARTS_DY :]
	label address: 0x00ac4e

[	DB 192 - 8]
00ac4e: b8

[PARTS_DEST_PAGE :]
	label address: 0x00ac4f

[	DB 0]
00ac4f: 00

[	DB 8]
00ac50: 08

[	DB 0]
00ac51: 00

[	DB 8]
00ac52: 08

[	DB 0]
00ac53: 00

[	DB 0]
00ac54: 00

[	DB 0]
00ac55: 00

[	DB 0B1101_0000]
00ac56: d0

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//background.asm"] end

[	INCLUDE ".//score.asm"] begin
[	SCOPE PUT_SCORE]
	Scope path: PUT_SCORE:

[PUT_SCORE_INITIALIZER ::]
	global label address: 0x00ac57

[	XOR A , A] Z80:5cyc, R800:1cyc
00ac57: af

[	LD [ STATE ] , A] Z80:14cyc, R800:6cyc
00ac58: 32 30 ad

[	LD B , 10] Z80:8cyc, R800:2cyc
00ac5b: 06 0a

[PUT_SCORE_INITIALIZER_LOOP :]
	label address: 0x00ac5d

[	PUSH BC] Z80:12cyc, R800:6cyc
00ac5d: c5

[	DI] Z80:5cyc, R800:2cyc
00ac5e: f3

[	CALL PUT_SCORE] Z80:18cyc, R800:5cyc
00ac5f: cd 67 ac

[	EI] Z80:5cyc, R800:1cyc
00ac62: fb

[	POP BC] Z80:11cyc, R800:5cyc
00ac63: c1

[	DJNZ PUT_SCORE_INITIALIZER_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ac64: 10 f7

[	RET] Z80:11cyc, R800:5cyc
00ac66: c9

[PUT_SCORE ::]
	global label address: 0x00ac67

[	LD A , [ STATE ]] Z80:14cyc, R800:6cyc
00ac67: 3a 30 ad

[	OR A , A] Z80:5cyc, R800:1cyc
00ac6a: b7

[	JP Z , DO_STATE0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ac6b: ca 98 ac

[	CP A , 5] Z80:8cyc, R800:2cyc
00ac6e: fe 05

[	JP NZ , DO_OTHER_STATE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ac70: c2 ac ac

[DO_STATE5 :]
	label address: 0x00ac73

[	LD HL , [ HISCORE ]] Z80:17cyc, R800:7cyc
00ac73: 2a 2e ad

[	LD DE , [ SCORE ]] Z80:22cyc, R800:8cyc
00ac76: ed 5b 2c ad

[	OR A , A] Z80:5cyc, R800:1cyc
00ac7a: b7

[	SBC HL , DE] Z80:17cyc, R800:2cyc
00ac7b: ed 52

[	JP NC , DO_STATE5_SKIP0] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ac7d: d2 84 ac

[	LD [ HISCORE ] , DE] Z80:22cyc, R800:8cyc
00ac80: ed 53 2e ad

[DO_STATE5_SKIP0 :]
	label address: 0x00ac84

[	LD A , 96] Z80:8cyc, R800:2cyc
00ac84: 3e 60

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00ac86: 32 61 ad

[	LD HL , [ HISCORE ]] Z80:17cyc, R800:7cyc
00ac89: 2a 2e ad

[	LD [ CAPTURED_SCORE ] , HL] Z80:17cyc, R800:7cyc
00ac8c: 22 31 ad

[	LD HL , BINARY_SEARCH_TABLE] Z80:11cyc, R800:3cyc
00ac8f: 21 35 ad

[	LD [ TABLE_PTR ] , HL] Z80:17cyc, R800:7cyc
00ac92: 22 33 ad

[	JP DO_OTHER_STATE] Z80:11cyc, R800:5cyc
00ac95: c3 ac ac

[DO_STATE0 :]
	label address: 0x00ac98

[	LD A , 24] Z80:8cyc, R800:2cyc
00ac98: 3e 18

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00ac9a: 32 61 ad

[	LD HL , [ SCORE ]] Z80:17cyc, R800:7cyc
00ac9d: 2a 2c ad

[	LD [ CAPTURED_SCORE ] , HL] Z80:17cyc, R800:7cyc
00aca0: 22 31 ad

[	LD HL , BINARY_SEARCH_TABLE] Z80:11cyc, R800:3cyc
00aca3: 21 35 ad

[	LD [ TABLE_PTR ] , HL] Z80:17cyc, R800:7cyc
00aca6: 22 33 ad

[	JP DO_OTHER_STATE] Z80:11cyc, R800:5cyc
00aca9: c3 ac ac

[DO_OTHER_STATE :]
	label address: 0x00acac

[	LD DE , [ CAPTURED_SCORE ]] Z80:22cyc, R800:8cyc
00acac: ed 5b 31 ad

[	LD HL , [ TABLE_PTR ]] Z80:17cyc, R800:7cyc
00acb0: 2a 33 ad

[	CALL GET_DIGIT] Z80:18cyc, R800:5cyc
00acb3: cd dd ac

[	LD [ TABLE_PTR ] , HL] Z80:17cyc, R800:7cyc
00acb6: 22 33 ad

[	LD [ CAPTURED_SCORE ] , DE] Z80:22cyc, R800:8cyc
00acb9: ed 53 31 ad

[	LD HL , PARTS] Z80:11cyc, R800:3cyc
00acbd: 21 5d ad

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00acc0: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00acc3: cd 6f af

[	LD A , [ PARTS_DX ]] Z80:14cyc, R800:6cyc
00acc6: 3a 61 ad

[	ADD A , 8] Z80:8cyc, R800:2cyc
00acc9: c6 08

[	LD [ PARTS_DX ] , A] Z80:14cyc, R800:6cyc
00accb: 32 61 ad

[	LD A , [ STATE ]] Z80:14cyc, R800:6cyc
00acce: 3a 30 ad

[	INC A] Z80:5cyc, R800:1cyc
00acd1: 3c

[	CP A , 10] Z80:8cyc, R800:2cyc
00acd2: fe 0a

[	LD [ STATE ] , A] Z80:14cyc, R800:6cyc
00acd4: 32 30 ad

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00acd7: c0

[	XOR A , A] Z80:5cyc, R800:1cyc
00acd8: af

[	LD [ STATE ] , A] Z80:14cyc, R800:6cyc
00acd9: 32 30 ad

[	RET] Z80:11cyc, R800:5cyc
00acdc: c9

[GET_DIGIT :]
	label address: 0x00acdd

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00acdd: 4e

[	INC HL] Z80:7cyc, R800:1cyc
00acde: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00acdf: 46

[	INC HL] Z80:7cyc, R800:1cyc
00ace0: 23

[	EX DE , HL] Z80:5cyc, R800:1cyc
00ace1: eb

[	XOR A , A] Z80:5cyc, R800:1cyc
00ace2: af

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00ace3: ed 42

[	JP NC , SKIP0_NO] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ace5: d2 ec ac

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00ace8: 09

[	JP SKIP0_YES] Z80:11cyc, R800:5cyc
00ace9: c3 ee ac

[SKIP0_NO :]
	label address: 0x00acec

[	LD A , 5] Z80:8cyc, R800:2cyc
00acec: 3e 05

[SKIP0_YES :]
	label address: 0x00acee

[	EX DE , HL] Z80:5cyc, R800:1cyc
00acee: eb

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00acef: 4e

[	INC HL] Z80:7cyc, R800:1cyc
00acf0: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00acf1: 46

[	INC HL] Z80:7cyc, R800:1cyc
00acf2: 23

[	EX DE , HL] Z80:5cyc, R800:1cyc
00acf3: eb

[	OR A , A] Z80:5cyc, R800:1cyc
00acf4: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00acf5: ed 42

[	JP NC , SKIP1_NO] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00acf7: d2 fe ac

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00acfa: 09

[	JP SKIP1_YES] Z80:11cyc, R800:5cyc
00acfb: c3 01 ad

[SKIP1_NO :]
	label address: 0x00acfe

[	INC A] Z80:5cyc, R800:1cyc
00acfe: 3c

[	INC A] Z80:5cyc, R800:1cyc
00acff: 3c

[	INC A] Z80:5cyc, R800:1cyc
00ad00: 3c

[SKIP1_YES :]
	label address: 0x00ad01

[	EX DE , HL] Z80:5cyc, R800:1cyc
00ad01: eb

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00ad02: 4e

[	INC HL] Z80:7cyc, R800:1cyc
00ad03: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00ad04: 46

[	INC HL] Z80:7cyc, R800:1cyc
00ad05: 23

[	EX DE , HL] Z80:5cyc, R800:1cyc
00ad06: eb

[	OR A , A] Z80:5cyc, R800:1cyc
00ad07: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00ad08: ed 42

[	JP NC , SKIP2_NO] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ad0a: d2 11 ad

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00ad0d: 09

[	JP SKIP2_YES] Z80:11cyc, R800:5cyc
00ad0e: c3 13 ad

[SKIP2_NO :]
	label address: 0x00ad11

[	INC A] Z80:5cyc, R800:1cyc
00ad11: 3c

[	INC A] Z80:5cyc, R800:1cyc
00ad12: 3c

[SKIP2_YES :]
	label address: 0x00ad13

[	EX DE , HL] Z80:5cyc, R800:1cyc
00ad13: eb

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00ad14: 4e

[	INC HL] Z80:7cyc, R800:1cyc
00ad15: 23

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00ad16: 46

[	INC HL] Z80:7cyc, R800:1cyc
00ad17: 23

[	EX DE , HL] Z80:5cyc, R800:1cyc
00ad18: eb

[	OR A , A] Z80:5cyc, R800:1cyc
00ad19: b7

[	SBC HL , BC] Z80:17cyc, R800:2cyc
00ad1a: ed 42

[	JP NC , SKIP3_NO] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ad1c: d2 23 ad

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00ad1f: 09

[	JP SKIP3_YES] Z80:11cyc, R800:5cyc
00ad20: c3 24 ad

[SKIP3_NO :]
	label address: 0x00ad23

[	INC A] Z80:5cyc, R800:1cyc
00ad23: 3c

[SKIP3_YES :]
	label address: 0x00ad24

[	EX DE , HL] Z80:5cyc, R800:1cyc
00ad24: eb

[	RLCA] Z80:5cyc, R800:1cyc
00ad25: 07

[	RLCA] Z80:5cyc, R800:1cyc
00ad26: 07

[	RLCA] Z80:5cyc, R800:1cyc
00ad27: 07

[	LD [ PARTS_SX ] , A] Z80:14cyc, R800:6cyc
00ad28: 32 5d ad

[	RET] Z80:11cyc, R800:5cyc
00ad2b: c9

[SCORE ::]
	global label address: 0x00ad2c

[	DW 0]
00ad2c: 00 00

[HISCORE ::]
	global label address: 0x00ad2e

[	DW 0]
00ad2e: 00 00

[STATE :]
	label address: 0x00ad30

[	DB 0]
00ad30: 00

[CAPTURED_SCORE :]
	label address: 0x00ad31

[	DW 0]
00ad31: 00 00

[TABLE_PTR :]
	label address: 0x00ad33

[	DW 0]
00ad33: 00 00

[BINARY_SEARCH_TABLE :]
	label address: 0x00ad35

[	DW 50000]
00ad35: 50 c3

[	DW 30000]
00ad37: 30 75

[	DW 20000]
00ad39: 20 4e

[	DW 10000]
00ad3b: 10 27

[	DW 5000]
00ad3d: 88 13

[	DW 3000]
00ad3f: b8 0b

[	DW 2000]
00ad41: d0 07

[	DW 1000]
00ad43: e8 03

[	DW 500]
00ad45: f4 01

[	DW 300]
00ad47: 2c 01

[	DW 200]
00ad49: c8 00

[	DW 100]
00ad4b: 64 00

[	DW 50]
00ad4d: 32 00

[	DW 30]
00ad4f: 1e 00

[	DW 20]
00ad51: 14 00

[	DW 10]
00ad53: 0a 00

[	DW 5]
00ad55: 05 00

[	DW 3]
00ad57: 03 00

[	DW 2]
00ad59: 02 00

[	DW 1]
00ad5b: 01 00

[PARTS :]
	label address: 0x00ad5d

[PARTS_SX :]
	label address: 0x00ad5d

[	DB 0]
00ad5d: 00

[	DB 0]
00ad5e: 00

[	DB 80]
00ad5f: 50

[	DB 1]
00ad60: 01

[PARTS_DX :]
	label address: 0x00ad61

[	DB 24]
00ad61: 18

[	DB 0]
00ad62: 00

[	DB 72]
00ad63: 48

[	DB 1]
00ad64: 01

[	DB 8]
00ad65: 08

[	DB 0]
00ad66: 00

[	DB 8]
00ad67: 08

[	DB 0]
00ad68: 00

[	DB 0]
00ad69: 00

[	DB 0]
00ad6a: 00

[	DB 0B1101_0000]
00ad6b: d0

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//score.asm"] end

[	INCLUDE ".//title.asm"] begin
[	SCOPE TITLE_PROCESS]
	Scope path: TITLE_PROCESS:

[TITLE_PROCESS ::]
	global label address: 0x00ad6c

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00ad6c: 0e 99

[	DI] Z80:5cyc, R800:2cyc
00ad6e: f3

[	LD A , 0B0001_1111] Z80:8cyc, R800:2cyc
00ad6f: 3e 1f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad71: ed 79

[	LD A , 2 | 0X80] Z80:8cyc, R800:2cyc
00ad73: 3e 82

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad75: ed 79

[	LD A , 0B1101_1111] Z80:8cyc, R800:2cyc
00ad77: 3e df

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad79: ed 79

[	LD A , 5 | 0X80] Z80:8cyc, R800:2cyc
00ad7b: 3e 85

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad7d: ed 79

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00ad7f: 0e 99

[	LD A , 4] Z80:8cyc, R800:2cyc
00ad81: 3e 04

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad83: ed 79

[	LD A , 16 | 0X80] Z80:8cyc, R800:2cyc
00ad85: 3e 90

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad87: ed 79

[	INC C] Z80:5cyc, R800:1cyc
00ad89: 0c

[	LD A , 0X30] Z80:8cyc, R800:2cyc
00ad8a: 3e 30

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad8c: ed 79

[	XOR A , A] Z80:5cyc, R800:1cyc
00ad8e: af

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ad8f: ed 79

[	EI] Z80:5cyc, R800:1cyc
00ad91: fb

[	CALL PUT_SCORE_INITIALIZER] Z80:18cyc, R800:5cyc
00ad92: cd 57 ac

[	LD HL , SCORE_COPY] Z80:11cyc, R800:3cyc
00ad95: 21 fe ae

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ad98: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ad9b: cd 6f af

[	LD HL , CLEAR_SCREEN] Z80:11cyc, R800:3cyc
00ad9e: 21 1c af

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ada1: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ada4: cd 6f af

[	LD A , 192] Z80:8cyc, R800:2cyc
00ada7: 3e c0

[	LD [ TITLE_LOGO_COPY1_SX ] , A] Z80:14cyc, R800:6cyc
00ada9: 32 d1 ae

[	XOR A , A] Z80:5cyc, R800:1cyc
00adac: af

[	LD [ TITLE_LOGO_COPY1_DX ] , A] Z80:14cyc, R800:6cyc
00adad: 32 d5 ae

[	LD [ BLINK_PUSH_TRIGGER_FLAG ] , A] Z80:14cyc, R800:6cyc
00adb0: 32 d0 ae

[	LD B , 64] Z80:8cyc, R800:2cyc
00adb3: 06 40

[MAKE_UP_TITLE_LOGO_LOOP1 :]
	label address: 0x00adb5

[	PUSH BC] Z80:12cyc, R800:6cyc
00adb5: c5

[	LD HL , TITLE_LOGO_COPY1] Z80:11cyc, R800:3cyc
00adb6: 21 d1 ae

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00adb9: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00adbc: cd 6f af

[	LD A , [ TITLE_LOGO_COPY1_DX ]] Z80:14cyc, R800:6cyc
00adbf: 3a d5 ae

[	INC A] Z80:5cyc, R800:1cyc
00adc2: 3c

[	LD [ TITLE_LOGO_COPY1_DX ] , A] Z80:14cyc, R800:6cyc
00adc3: 32 d5 ae

[	LD HL , TITLE_LOGO_COPY1] Z80:11cyc, R800:3cyc
00adc6: 21 d1 ae

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00adc9: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00adcc: cd 6f af

[	LD A , [ TITLE_LOGO_COPY1_SX ]] Z80:14cyc, R800:6cyc
00adcf: 3a d1 ae

[	INC A] Z80:5cyc, R800:1cyc
00add2: 3c

[	LD [ TITLE_LOGO_COPY1_SX ] , A] Z80:14cyc, R800:6cyc
00add3: 32 d1 ae

[	LD A , [ TITLE_LOGO_COPY1_DX ]] Z80:14cyc, R800:6cyc
00add6: 3a d5 ae

[	INC A] Z80:5cyc, R800:1cyc
00add9: 3c

[	LD [ TITLE_LOGO_COPY1_DX ] , A] Z80:14cyc, R800:6cyc
00adda: 32 d5 ae

[	POP BC] Z80:11cyc, R800:5cyc
00addd: c1

[	DJNZ MAKE_UP_TITLE_LOGO_LOOP1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00adde: 10 d5

[	LD A , 192 + 23] Z80:8cyc, R800:2cyc
00ade0: 3e d7

[	LD [ TITLE_LOGO_COPY2_SY ] , A] Z80:14cyc, R800:6cyc
00ade2: 32 e2 ae

[	LD A , 192 + 47] Z80:8cyc, R800:2cyc
00ade5: 3e ef

[	LD [ TITLE_LOGO_COPY2_DY ] , A] Z80:14cyc, R800:6cyc
00ade7: 32 e6 ae

[	LD B , 24] Z80:8cyc, R800:2cyc
00adea: 06 18

[MAKE_UP_TITLE_LOGO_LOOP2 :]
	label address: 0x00adec

[	PUSH BC] Z80:12cyc, R800:6cyc
00adec: c5

[	LD HL , TITLE_LOGO_COPY2] Z80:11cyc, R800:3cyc
00aded: 21 e0 ae

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00adf0: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00adf3: cd 6f af

[	LD A , [ TITLE_LOGO_COPY2_DY ]] Z80:14cyc, R800:6cyc
00adf6: 3a e6 ae

[	DEC A] Z80:5cyc, R800:1cyc
00adf9: 3d

[	LD [ TITLE_LOGO_COPY2_DY ] , A] Z80:14cyc, R800:6cyc
00adfa: 32 e6 ae

[	LD HL , TITLE_LOGO_COPY2] Z80:11cyc, R800:3cyc
00adfd: 21 e0 ae

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ae00: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ae03: cd 6f af

[	LD A , [ TITLE_LOGO_COPY2_SY ]] Z80:14cyc, R800:6cyc
00ae06: 3a e2 ae

[	DEC A] Z80:5cyc, R800:1cyc
00ae09: 3d

[	LD [ TITLE_LOGO_COPY2_SY ] , A] Z80:14cyc, R800:6cyc
00ae0a: 32 e2 ae

[	LD A , [ TITLE_LOGO_COPY2_DY ]] Z80:14cyc, R800:6cyc
00ae0d: 3a e6 ae

[	DEC A] Z80:5cyc, R800:1cyc
00ae10: 3d

[	LD [ TITLE_LOGO_COPY2_DY ] , A] Z80:14cyc, R800:6cyc
00ae11: 32 e6 ae

[	POP BC] Z80:11cyc, R800:5cyc
00ae14: c1

[	DJNZ MAKE_UP_TITLE_LOGO_LOOP2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ae15: 10 d5

[	LD A , 254] Z80:8cyc, R800:2cyc
00ae17: 3e fe

[	LD [ TITLE_LOGO_COPY3_DX ] , A] Z80:14cyc, R800:6cyc
00ae19: 32 f3 ae

[	LD A , 20] Z80:8cyc, R800:2cyc
00ae1c: 3e 14

[	LD [ BLINK_PUSH_TRIGGER ] , A] Z80:14cyc, R800:6cyc
00ae1e: 32 cf ae

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ae21: cd 7f af

[	DI] Z80:5cyc, R800:2cyc
00ae24: f3

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00ae25: 0e 99

[	LD A , [ REG1SAV ]] Z80:14cyc, R800:6cyc
00ae27: 3a e0 f3

[	OR A , 0B0100_0000] Z80:8cyc, R800:2cyc
00ae2a: f6 40

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ae2c: ed 79

[	LD A , 1 | 0X80] Z80:8cyc, R800:2cyc
00ae2e: 3e 81

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ae30: ed 79

[	EI] Z80:5cyc, R800:1cyc
00ae32: fb

[TITLE_LOOP :]
	label address: 0x00ae33

[	XOR A , A] Z80:5cyc, R800:1cyc
00ae33: af

[	PUSH BC] Z80:12cyc, R800:6cyc
00ae34: c5

[	CALL GTTRIG] Z80:18cyc, R800:5cyc
00ae35: cd d8 00

[	POP BC] Z80:11cyc, R800:5cyc
00ae38: c1

[	OR A , A] Z80:5cyc, R800:1cyc
00ae39: b7

[	JP NZ , TITLE_FINALIZE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ae3a: c2 82 ae

[	XOR A , A] Z80:5cyc, R800:1cyc
00ae3d: af

[	INC A] Z80:5cyc, R800:1cyc
00ae3e: 3c

[	PUSH BC] Z80:12cyc, R800:6cyc
00ae3f: c5

[	CALL GTTRIG] Z80:18cyc, R800:5cyc
00ae40: cd d8 00

[	POP BC] Z80:11cyc, R800:5cyc
00ae43: c1

[	OR A , A] Z80:5cyc, R800:1cyc
00ae44: b7

[	JP NZ , TITLE_FINALIZE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ae45: c2 82 ae

[	CALL RANDOM] Z80:18cyc, R800:5cyc
00ae48: cd bc b0

[	LD A , [ BLINK_PUSH_TRIGGER ]] Z80:14cyc, R800:6cyc
00ae4b: 3a cf ae

[	DEC A] Z80:5cyc, R800:1cyc
00ae4e: 3d

[	LD [ BLINK_PUSH_TRIGGER ] , A] Z80:14cyc, R800:6cyc
00ae4f: 32 cf ae

[	JP NZ , SKIP_BLINK_PUSH_TRIGGER] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ae52: c2 5d ae

[	LD A , 20] Z80:8cyc, R800:2cyc
00ae55: 3e 14

[	LD [ BLINK_PUSH_TRIGGER ] , A] Z80:14cyc, R800:6cyc
00ae57: 32 cf ae

[	CALL UPDATE_PUSH_TRIGGER] Z80:18cyc, R800:5cyc
00ae5a: cd af ae

[SKIP_BLINK_PUSH_TRIGGER :]
	label address: 0x00ae5d

[	LD A , [ TITLE_LOGO_COPY3_DX ]] Z80:14cyc, R800:6cyc
00ae5d: 3a f3 ae

[	CP A , 64] Z80:8cyc, R800:2cyc
00ae60: fe 40

[	JP Z , TITLE_LOOP_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00ae62: ca 76 ae

[	LD HL , TITLE_LOGO_COPY3] Z80:11cyc, R800:3cyc
00ae65: 21 ef ae

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ae68: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00ae6b: cd 6f af

[	LD A , [ TITLE_LOGO_COPY3_DX ]] Z80:14cyc, R800:6cyc
00ae6e: 3a f3 ae

[	DEC A] Z80:5cyc, R800:1cyc
00ae71: 3d

[	DEC A] Z80:5cyc, R800:1cyc
00ae72: 3d

[	LD [ TITLE_LOGO_COPY3_DX ] , A] Z80:14cyc, R800:6cyc
00ae73: 32 f3 ae

[TITLE_LOOP_SKIP :]
	label address: 0x00ae76

[	CALL TITLE_WAIT] Z80:18cyc, R800:5cyc
00ae76: cd a4 ae

[	JP TITLE_LOOP] Z80:11cyc, R800:5cyc
00ae79: c3 33 ae

[TITLE_TICK ::]
	global label address: 0x00ae7c

[	LD A , 1] Z80:8cyc, R800:2cyc
00ae7c: 3e 01

[	LD [ TITLE_WAIT_FLAG ] , A] Z80:14cyc, R800:6cyc
00ae7e: 32 ce ae

[	RET] Z80:11cyc, R800:5cyc
00ae81: c9

[TITLE_FINALIZE :]
	label address: 0x00ae82

[	LD HL , SE_START] Z80:11cyc, R800:3cyc
00ae82: 21 2b af

[	CALL BGMDRIVER_PLAY_SOUND_EFFECT] Z80:18cyc, R800:5cyc
00ae85: cd 6b b7

[	LD B , 50] Z80:8cyc, R800:2cyc
00ae88: 06 32

[TITLE_FINALIZE_LOOP :]
	label address: 0x00ae8a

[	PUSH BC] Z80:12cyc, R800:6cyc
00ae8a: c5

[	CALL UPDATE_PUSH_TRIGGER] Z80:18cyc, R800:5cyc
00ae8b: cd af ae

[	CALL TITLE_WAIT] Z80:18cyc, R800:5cyc
00ae8e: cd a4 ae

[	POP BC] Z80:11cyc, R800:5cyc
00ae91: c1

[	DJNZ TITLE_FINALIZE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ae92: 10 f6

[	DI] Z80:5cyc, R800:2cyc
00ae94: f3

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00ae95: 0e 99

[	LD A , [ REG1SAV ]] Z80:14cyc, R800:6cyc
00ae97: 3a e0 f3

[	AND A , 0B1011_1111] Z80:8cyc, R800:2cyc
00ae9a: e6 bf

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00ae9c: ed 79

[	LD A , 1 | 0X80] Z80:8cyc, R800:2cyc
00ae9e: 3e 81

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00aea0: ed 79

[	EI] Z80:5cyc, R800:1cyc
00aea2: fb

[	RET] Z80:11cyc, R800:5cyc
00aea3: c9

[TITLE_WAIT :]
	label address: 0x00aea4

[	LD A , [ TITLE_WAIT_FLAG ]] Z80:14cyc, R800:6cyc
00aea4: 3a ce ae

[	OR A , A] Z80:5cyc, R800:1cyc
00aea7: b7

[	JR Z , TITLE_WAIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00aea8: 28 fa

[	XOR A , A] Z80:5cyc, R800:1cyc
00aeaa: af

[	LD [ TITLE_WAIT_FLAG ] , A] Z80:14cyc, R800:6cyc
00aeab: 32 ce ae

[	RET] Z80:11cyc, R800:5cyc
00aeae: c9

[UPDATE_PUSH_TRIGGER :]
	label address: 0x00aeaf

[	LD A , [ BLINK_PUSH_TRIGGER_FLAG ]] Z80:14cyc, R800:6cyc
00aeaf: 3a d0 ae

[	XOR A , 1] Z80:8cyc, R800:2cyc
00aeb2: ee 01

[	LD [ BLINK_PUSH_TRIGGER_FLAG ] , A] Z80:14cyc, R800:6cyc
00aeb4: 32 d0 ae

[	JP NZ , ERASE_PUSH_TRIGGER] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00aeb7: c2 bf ae

[	LD A , 0B1101_0000] Z80:8cyc, R800:2cyc
00aeba: 3e d0

[	JP DRAW_PUSH_TRIGGER] Z80:11cyc, R800:5cyc
00aebc: c3 c1 ae

[ERASE_PUSH_TRIGGER :]
	label address: 0x00aebf

[	LD A , 0B1100_0000] Z80:8cyc, R800:2cyc
00aebf: 3e c0

[DRAW_PUSH_TRIGGER :]
	label address: 0x00aec1

[	LD [ PUSH_TRIGGER_COPY_CMD ] , A] Z80:14cyc, R800:6cyc
00aec1: 32 1b af

[	LD HL , PUSH_TRIGGER_COPY] Z80:11cyc, R800:3cyc
00aec4: 21 0d af

[	CALL WAIT_VDP_COMMAND] Z80:18cyc, R800:5cyc
00aec7: cd 7f af

[	CALL RUN_VDP_COMMAND] Z80:18cyc, R800:5cyc
00aeca: cd 6f af

[	RET] Z80:11cyc, R800:5cyc
00aecd: c9

[TITLE_WAIT_FLAG :]
	label address: 0x00aece

[	DB 0]
00aece: 00

[BLINK_PUSH_TRIGGER :]
	label address: 0x00aecf

[	DB 0]
00aecf: 00

[BLINK_PUSH_TRIGGER_FLAG :]
	label address: 0x00aed0

[	DB 0]
00aed0: 00

[TITLE_LOGO_COPY1 :]
	label address: 0x00aed1

[TITLE_LOGO_COPY1_SX :]
	label address: 0x00aed1

[	DB 192]
00aed1: c0

[	DB 0]
00aed2: 00

[	DB 88]
00aed3: 58

[	DB 1]
00aed4: 01

[TITLE_LOGO_COPY1_DX :]
	label address: 0x00aed5

[	DB 0]
00aed5: 00

[	DB 0]
00aed6: 00

[	DB 192]
00aed7: c0

[	DB 1]
00aed8: 01

[	DB 1]
00aed9: 01

[	DB 0]
00aeda: 00

[	DB 24]
00aedb: 18

[	DB 0]
00aedc: 00

[	DB 0]
00aedd: 00

[	DB 0]
00aede: 00

[	DB 0B1001_0000]
00aedf: 90

[TITLE_LOGO_COPY2 :]
	label address: 0x00aee0

[	DB 0]
00aee0: 00

[	DB 0]
00aee1: 00

[TITLE_LOGO_COPY2_SY :]
	label address: 0x00aee2

[	DB 192 + 23]
00aee2: d7

[	DB 1]
00aee3: 01

[	DB 0]
00aee4: 00

[	DB 0]
00aee5: 00

[TITLE_LOGO_COPY2_DY :]
	label address: 0x00aee6

[	DB 192 + 47]
00aee6: ef

[	DB 1]
00aee7: 01

[	DB 128]
00aee8: 80

[	DB 0]
00aee9: 00

[	DB 1]
00aeea: 01

[	DB 0]
00aeeb: 00

[	DB 0]
00aeec: 00

[	DB 0]
00aeed: 00

[	DB 0B1101_0000]
00aeee: d0

[TITLE_LOGO_COPY3 :]
	label address: 0x00aeef

[	DB 0]
00aeef: 00

[	DB 0]
00aef0: 00

[	DB 192]
00aef1: c0

[	DB 1]
00aef2: 01

[TITLE_LOGO_COPY3_DX :]
	label address: 0x00aef3

[	DB 254]
00aef3: fe

[	DB 0]
00aef4: 00

[	DB 56]
00aef5: 38

[	DB 0]
00aef6: 00

[	DB 128]
00aef7: 80

[	DB 0]
00aef8: 00

[	DB 48]
00aef9: 30

[	DB 0]
00aefa: 00

[	DB 0]
00aefb: 00

[	DB 0]
00aefc: 00

[	DB 0B1101_0000]
00aefd: d0

[SCORE_COPY :]
	label address: 0x00aefe

[	DB 0]
00aefe: 00

[	DB 0]
00aeff: 00

[	DB 64]
00af00: 40

[	DB 1]
00af01: 01

[	DB 0]
00af02: 00

[	DB 0]
00af03: 00

[	DB 0]
00af04: 00

[	DB 0]
00af05: 00

[	DB 0]
00af06: 00

[	DB 1]
00af07: 01

[	DB 16]
00af08: 10

[	DB 0]
00af09: 00

[	DB 0]
00af0a: 00

[	DB 0]
00af0b: 00

[	DB 0B1110_0000]
00af0c: e0

[PUSH_TRIGGER_COPY :]
	label address: 0x00af0d

[	DB 80]
00af0d: 50

[	DB 0]
00af0e: 00

[	DB 80]
00af0f: 50

[	DB 1]
00af10: 01

[	DB 80]
00af11: 50

[	DB 0]
00af12: 00

[	DB 160]
00af13: a0

[	DB 0]
00af14: 00

[	DB 96]
00af15: 60

[	DB 0]
00af16: 00

[	DB 8]
00af17: 08

[	DB 0]
00af18: 00

[	DB 0X00]
00af19: 00

[	DB 0]
00af1a: 00

[PUSH_TRIGGER_COPY_CMD :]
	label address: 0x00af1b

[	DB 0B1101_0000]
00af1b: d0

[CLEAR_SCREEN :]
	label address: 0x00af1c

[	DB 0]
00af1c: 00

[	DB 0]
00af1d: 00

[	DB 0]
00af1e: 00

[	DB 0]
00af1f: 00

[	DB 0]
00af20: 00

[	DB 0]
00af21: 00

[	DB 16]
00af22: 10

[	DB 0]
00af23: 00

[	DB 0]
00af24: 00

[	DB 1]
00af25: 01

[	DB 240]
00af26: f0

[	DB 0]
00af27: 00

[	DB 0X00]
00af28: 00

[	DB 0]
00af29: 00

[	DB 0B1100_0000]
00af2a: c0

[SE_START :]
	label address: 0x00af2b

[	DB 240]
00af2b: f0

[	DB BGM_SE_VOL]
00af2c: 01

[	DB 12]
00af2d: 0c

[	DB BGM_SE_FREQ]
00af2e: 00

[	DW 500]
00af2f: f4 01

[	DB BGM_SE_WAIT]
00af31: 03

[	DB 5]
00af32: 05

[	DB BGM_SE_FREQ]
00af33: 00

[	DW 400]
00af34: 90 01

[	DB BGM_SE_WAIT]
00af36: 03

[	DB 7]
00af37: 07

[	DB BGM_SE_FREQ]
00af38: 00

[	DW 300]
00af39: 2c 01

[	DB BGM_SE_WAIT]
00af3b: 03

[	DB 10]
00af3c: 0a

[	DB BGM_SE_FREQ]
00af3d: 00

[	DW 200]
00af3e: c8 00

[	DB BGM_SE_WAIT]
00af40: 03

[	DB 15]
00af41: 0f

[	DB BGM_SE_VOL]
00af42: 01

[	DB 8]
00af43: 08

[	DB BGM_SE_FREQ]
00af44: 00

[	DW 400]
00af45: 90 01

[	DB BGM_SE_WAIT]
00af47: 03

[	DB 5]
00af48: 05

[	DB BGM_SE_FREQ]
00af49: 00

[	DW 300]
00af4a: 2c 01

[	DB BGM_SE_WAIT]
00af4c: 03

[	DB 7]
00af4d: 07

[	DB BGM_SE_FREQ]
00af4e: 00

[	DW 200]
00af4f: c8 00

[	DB BGM_SE_WAIT]
00af51: 03

[	DB 10]
00af52: 0a

[	DB BGM_SE_FREQ]
00af53: 00

[	DW 100]
00af54: 64 00

[	DB BGM_SE_WAIT]
00af56: 03

[	DB 15]
00af57: 0f

[	DB BGM_SE_VOL]
00af58: 01

[	DB 4]
00af59: 04

[	DB BGM_SE_FREQ]
00af5a: 00

[	DW 300]
00af5b: 2c 01

[	DB BGM_SE_WAIT]
00af5d: 03

[	DB 5]
00af5e: 05

[	DB BGM_SE_FREQ]
00af5f: 00

[	DW 200]
00af60: c8 00

[	DB BGM_SE_WAIT]
00af62: 03

[	DB 7]
00af63: 07

[	DB BGM_SE_FREQ]
00af64: 00

[	DW 100]
00af65: 64 00

[	DB BGM_SE_WAIT]
00af67: 03

[	DB 10]
00af68: 0a

[	DB BGM_SE_FREQ]
00af69: 00

[	DW 50]
00af6a: 32 00

[	DB BGM_SE_WAIT]
00af6c: 03

[	DB 15]
00af6d: 0f

[	DB BGM_SE_END]
00af6e: 04

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//title.asm"] end

[	INCLUDE ".//vdp_control.asm"] begin
[	SCOPE RUN_VDP_COMMAND]
	Scope path: RUN_VDP_COMMAND:

[RUN_VDP_COMMAND ::]
	global label address: 0x00af6f

[	LD A , 32] Z80:8cyc, R800:2cyc
00af6f: 3e 20

[	DI] Z80:5cyc, R800:2cyc
00af71: f3

[	OUT [ IO_VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
00af72: d3 99

[	LD A , 0X80 | 17] Z80:8cyc, R800:2cyc
00af74: 3e 91

[	OUT [ IO_VDP_PORT1 ] , A] Z80:12cyc, R800:10 or 9cyc
00af76: d3 99

[	LD BC , ( 15 << 8 ) | IO_VDP_PORT3] Z80:11cyc, R800:3cyc
00af78: 01 9b 0f

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00af7b: ed b3

[	EI] Z80:5cyc, R800:1cyc
00af7d: fb

[	RET] Z80:11cyc, R800:5cyc
00af7e: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE WAIT_VDP_COMMAND]
	Scope path: WAIT_VDP_COMMAND:

[WAIT_VDP_COMMAND ::]
	global label address: 0x00af7f

[LOOP :]
	label address: 0x00af7f

[	DI] Z80:5cyc, R800:2cyc
00af7f: f3

[	LD A , 2] Z80:8cyc, R800:2cyc
00af80: 3e 02

[	LD BC , ( ( 0X80 | 15 ) << 8 ) | IO_VDP_PORT1] Z80:11cyc, R800:3cyc
00af82: 01 99 8f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00af85: ed 79

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00af87: ed 41

[	IN A , [ C ]] Z80:14cyc, R800:10 or 9cyc
00af89: ed 78

[	EI] Z80:5cyc, R800:1cyc
00af8b: fb

[	AND A , 1] Z80:8cyc, R800:2cyc
00af8c: e6 01

[	JP NZ , LOOP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00af8e: c2 7f af

[	RET] Z80:11cyc, R800:5cyc
00af91: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SET_VRAM_ADDRESS]
	Scope path: SET_VRAM_ADDRESS:

[SET_VRAM_ADDRESS ::]
	global label address: 0x00af92

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00af92: 0e 99

[	DI] Z80:5cyc, R800:2cyc
00af94: f3

[	OUT [ C ] , L] Z80:14cyc, R800:10 or 9cyc
00af95: ed 69

[	OUT [ C ] , H] Z80:14cyc, R800:10 or 9cyc
00af97: ed 61

[	EI] Z80:5cyc, R800:1cyc
00af99: fb

[	DEC C] Z80:5cyc, R800:1cyc
00af9a: 0d

[	RET] Z80:11cyc, R800:5cyc
00af9b: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//vdp_control.asm"] end

[	INCLUDE ".//interrupt.asm"] begin
[	SCOPE INTERRUPT_PROCESS]
	Scope path: INTERRUPT_PROCESS:

[INTERRUPT_INITIALIZER ::]
	global label address: 0x00af9c

[	DI] Z80:5cyc, R800:2cyc
00af9c: f3

[	LD HL , H_KEYI] Z80:11cyc, R800:3cyc
00af9d: 21 9a fd

[	LD DE , H_KEYI_NEXT] Z80:11cyc, R800:3cyc
00afa0: 11 b7 b0

[	LD BC , 5] Z80:11cyc, R800:3cyc
00afa3: 01 05 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00afa6: ed b0

[	LD A , 0XC3] Z80:8cyc, R800:2cyc
00afa8: 3e c3

[	LD [ H_KEYI ] , A] Z80:14cyc, R800:6cyc
00afaa: 32 9a fd

[	LD HL , H_KEYI_INTERRUPT_HANDLER] Z80:11cyc, R800:3cyc
00afad: 21 69 b0

[	LD [ H_KEYI + 1 ] , HL] Z80:17cyc, R800:7cyc
00afb0: 22 9b fd

[	LD HL , H_KEYI_NEXT] Z80:11cyc, R800:3cyc
00afb3: 21 b7 b0

[	LD [ HSYNC_INTERRUPT_ADDRESS + 1 ] , HL] Z80:17cyc, R800:7cyc
00afb6: 22 7f b0

[	LD HL , H_TIMI] Z80:11cyc, R800:3cyc
00afb9: 21 9f fd

[	LD DE , H_TIMI_NEXT] Z80:11cyc, R800:3cyc
00afbc: 11 64 b0

[	LD BC , 5] Z80:11cyc, R800:3cyc
00afbf: 01 05 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00afc2: ed b0

[	LD A , 0XC3] Z80:8cyc, R800:2cyc
00afc4: 3e c3

[	LD [ H_TIMI ] , A] Z80:14cyc, R800:6cyc
00afc6: 32 9f fd

[	LD HL , H_TIMI_NEXT] Z80:11cyc, R800:3cyc
00afc9: 21 64 b0

[	LD [ H_TIMI + 1 ] , HL] Z80:17cyc, R800:7cyc
00afcc: 22 a0 fd

[	EI] Z80:5cyc, R800:1cyc
00afcf: fb

[	RET] Z80:11cyc, R800:5cyc
00afd0: c9

[TITLE_INTERRUPT_INITIALIZER ::]
	global label address: 0x00afd1

[	DI] Z80:5cyc, R800:2cyc
00afd1: f3

[	LD HL , H_KEYI_NEXT] Z80:11cyc, R800:3cyc
00afd2: 21 b7 b0

[	LD [ HSYNC_INTERRUPT_ADDRESS + 1 ] , HL] Z80:17cyc, R800:7cyc
00afd5: 22 7f b0

[	LD HL , H_TIMI_INTERRUPT_HANDLER_FOR_TITLE] Z80:11cyc, R800:3cyc
00afd8: 21 32 b0

[	LD [ H_TIMI + 1 ] , HL] Z80:17cyc, R800:7cyc
00afdb: 22 a0 fd

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00afde: 0e 99

[	LD A , [ REG0SAV ]] Z80:14cyc, R800:6cyc
00afe0: 3a df f3

[	AND A , 0B1110_1111] Z80:8cyc, R800:2cyc
00afe3: e6 ef

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00afe5: ed 79

[	LD A , 0 | 0X80] Z80:8cyc, R800:2cyc
00afe7: 3e 80

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00afe9: ed 79

[	XOR A , A] Z80:5cyc, R800:1cyc
00afeb: af

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00afec: ed 79

[	LD A , 23 | 0X80] Z80:8cyc, R800:2cyc
00afee: 3e 97

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00aff0: ed 79

[	LD A , 1] Z80:8cyc, R800:2cyc
00aff2: 3e 01

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00aff4: ed 79

[	LD A , 15 | 0X80] Z80:8cyc, R800:2cyc
00aff6: 3e 8f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00aff8: ed 79

[	IN A , [ C ]] Z80:14cyc, R800:10 or 9cyc
00affa: ed 78

[	LD B , 0] Z80:8cyc, R800:2cyc
00affc: 06 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00affe: ed 41

[	LD B , 15 | 0X80] Z80:8cyc, R800:2cyc
00b000: 06 8f

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b002: ed 41

[	EI] Z80:5cyc, R800:1cyc
00b004: fb

[	RET] Z80:11cyc, R800:5cyc
00b005: c9

[MAIN_INTERRUPT_INITIALIZER ::]
	global label address: 0x00b006

[	DI] Z80:5cyc, R800:2cyc
00b006: f3

[	LD HL , H_KEYI_NEXT] Z80:11cyc, R800:3cyc
00b007: 21 b7 b0

[	LD [ HSYNC_INTERRUPT_ADDRESS + 1 ] , HL] Z80:17cyc, R800:7cyc
00b00a: 22 7f b0

[	LD HL , H_TIMI_INTERRUPT_HANDLER] Z80:11cyc, R800:3cyc
00b00d: 21 3c b0

[	LD [ H_TIMI + 1 ] , HL] Z80:17cyc, R800:7cyc
00b010: 22 a0 fd

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b013: 0e 99

[	LD A , 64] Z80:8cyc, R800:2cyc
00b015: 3e 40

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b017: ed 79

[	LD A , 23 | 0X80] Z80:8cyc, R800:2cyc
00b019: 3e 97

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b01b: ed 79

[	LD A , 63] Z80:8cyc, R800:2cyc
00b01d: 3e 3f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b01f: ed 79

[	LD A , 19 | 0X80] Z80:8cyc, R800:2cyc
00b021: 3e 93

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b023: ed 79

[	LD A , [ REG0SAV ]] Z80:14cyc, R800:6cyc
00b025: 3a df f3

[	OR A , 0B0001_0000] Z80:8cyc, R800:2cyc
00b028: f6 10

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b02a: ed 79

[	LD A , 0 | 0X80] Z80:8cyc, R800:2cyc
00b02c: 3e 80

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b02e: ed 79

[	EI] Z80:5cyc, R800:1cyc
00b030: fb

[	RET] Z80:11cyc, R800:5cyc
00b031: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE H_TIMI_INTERRUPT_HANDLER_FOR_TITLE]
	Scope path: H_TIMI_INTERRUPT_HANDLER_FOR_TITLE:

[H_TIMI_INTERRUPT_HANDLER_FOR_TITLE ::]
	global label address: 0x00b032

[	CALL BGMDRIVER_INTERRUPT_HANDLER] Z80:18cyc, R800:5cyc
00b032: cd 9e b7

[	CALL SD_CHANGE_ATTRIBUTE0] Z80:18cyc, R800:5cyc
00b035: cd 3b b1

[	CALL TITLE_TICK] Z80:18cyc, R800:5cyc
00b038: cd 7c ae

[	RET] Z80:11cyc, R800:5cyc
00b03b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE H_TIMI_INTERRUPT_HANDLER]
	Scope path: H_TIMI_INTERRUPT_HANDLER:

[H_TIMI_INTERRUPT_HANDLER ::]
	global label address: 0x00b03c

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b03c: 0e 99

[	LD A , 0B0011_1111] Z80:8cyc, R800:2cyc
00b03e: 3e 3f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b040: ed 79

[	LD A , 2 | 0X80] Z80:8cyc, R800:2cyc
00b042: 3e 82

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b044: ed 79

[	LD A , 64] Z80:8cyc, R800:2cyc
00b046: 3e 40

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b048: ed 79

[	LD A , 23 | 0X80] Z80:8cyc, R800:2cyc
00b04a: 3e 97

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b04c: ed 79

[	LD A , 64 + 16 - HSYNC_INTR_ADJUST] Z80:8cyc, R800:2cyc
00b04e: 3e 4d

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b050: ed 79

[	LD A , 19 | 0X80] Z80:8cyc, R800:2cyc
00b052: 3e 93

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b054: ed 79

[	CALL SD_CHANGE_ATTRIBUTE0] Z80:18cyc, R800:5cyc
00b056: cd 3b b1

[	LD HL , HSYNC_INTERRUPT_1ST] Z80:11cyc, R800:3cyc
00b059: 21 8b b0

[	LD [ HSYNC_INTERRUPT_ADDRESS + 1 ] , HL] Z80:17cyc, R800:7cyc
00b05c: 22 7f b0

[	LD A , 1] Z80:8cyc, R800:2cyc
00b05f: 3e 01

[	LD [ VSYNC_FLAG ] , A] Z80:14cyc, R800:6cyc
00b061: 32 33 be

[VSYNC_FLAG_SKIP :]
	label address: 0x00b064

[H_TIMI_NEXT ::]
	global label address: 0x00b064

[	RET] Z80:11cyc, R800:5cyc
00b064: c9

[	RET] Z80:11cyc, R800:5cyc
00b065: c9

[	RET] Z80:11cyc, R800:5cyc
00b066: c9

[	RET] Z80:11cyc, R800:5cyc
00b067: c9

[	RET] Z80:11cyc, R800:5cyc
00b068: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE H_KEYI_INTERRUPT_HANDLER]
	Scope path: H_KEYI_INTERRUPT_HANDLER:

[H_KEYI_INTERRUPT_HANDLER ::]
	global label address: 0x00b069

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b069: 0e 99

[	LD A , 1] Z80:8cyc, R800:2cyc
00b06b: 3e 01

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b06d: ed 79

[	LD A , 15 | 0X80] Z80:8cyc, R800:2cyc
00b06f: 3e 8f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b071: ed 79

[	IN A , [ C ]] Z80:14cyc, R800:10 or 9cyc
00b073: ed 78

[	LD B , 0] Z80:8cyc, R800:2cyc
00b075: 06 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b077: ed 41

[	LD B , 15 | 0X80] Z80:8cyc, R800:2cyc
00b079: 06 8f

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b07b: ed 41

[	RRCA] Z80:5cyc, R800:1cyc
00b07d: 0f

[HSYNC_INTERRUPT_ADDRESS ::]
	global label address: 0x00b07e

[	JP C , HSYNC_INTERRUPT_1ST] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b07e: da 8b b0

[	JP H_KEYI_NEXT] Z80:11cyc, R800:5cyc
00b081: c3 b7 b0

[HSYNC_INTERRUPT_2ND ::]
	global label address: 0x00b084

[	CALL SD_CHANGE_ATTRIBUTE2] Z80:18cyc, R800:5cyc
00b084: cd 65 b1

[	CALL BGMDRIVER_INTERRUPT_HANDLER] Z80:18cyc, R800:5cyc
00b087: cd 9e b7

[	RET] Z80:11cyc, R800:5cyc
00b08a: c9

[HSYNC_INTERRUPT_1ST ::]
	global label address: 0x00b08b

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00b08b: 3a 32 be

[	OR A , A] Z80:5cyc, R800:1cyc
00b08e: b7

[	LD A , 0B0101_1111] Z80:8cyc, R800:2cyc
00b08f: 3e 5f

[	JP Z , SET_DISPLAY_PAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b091: ca 96 b0

[	LD A , 0B0001_1111] Z80:8cyc, R800:2cyc
00b094: 3e 1f

[SET_DISPLAY_PAGE :]
	label address: 0x00b096

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b096: ed 79

[	LD A , 2 | 0X80] Z80:8cyc, R800:2cyc
00b098: 3e 82

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b09a: ed 79

[	LD A , [ VSCROLL ]] Z80:14cyc, R800:6cyc
00b09c: 3a 30 be

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b09f: ed 79

[	LD B , 23 | 0X80] Z80:8cyc, R800:2cyc
00b0a1: 06 97

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b0a3: ed 41

[	ADD A , 104 - HSYNC_INTR_ADJUST] Z80:8cyc, R800:2cyc
00b0a5: c6 65

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b0a7: ed 79

[	LD A , 19 | 0X80] Z80:8cyc, R800:2cyc
00b0a9: 3e 93

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b0ab: ed 79

[	CALL SD_CHANGE_ATTRIBUTE1] Z80:18cyc, R800:5cyc
00b0ad: cd 4e b1

[	LD HL , HSYNC_INTERRUPT_2ND] Z80:11cyc, R800:3cyc
00b0b0: 21 84 b0

[	LD [ HSYNC_INTERRUPT_ADDRESS + 1 ] , HL] Z80:17cyc, R800:7cyc
00b0b3: 22 7f b0

[	RET] Z80:11cyc, R800:5cyc
00b0b6: c9

[H_KEYI_NEXT ::]
	global label address: 0x00b0b7

[	RET] Z80:11cyc, R800:5cyc
00b0b7: c9

[	RET] Z80:11cyc, R800:5cyc
00b0b8: c9

[	RET] Z80:11cyc, R800:5cyc
00b0b9: c9

[	RET] Z80:11cyc, R800:5cyc
00b0ba: c9

[	RET] Z80:11cyc, R800:5cyc
00b0bb: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//interrupt.asm"] end

[	SCOPE RANDOM]
	Scope path: RANDOM:

[RANDOM ::]
	global label address: 0x00b0bc

[	LD A , [ RANDOM_SEED1 ]] Z80:14cyc, R800:6cyc
00b0bc: 3a d1 b0

[	RLCA] Z80:5cyc, R800:1cyc
00b0bf: 07

[	LD B , A] Z80:5cyc, R800:2cyc
00b0c0: 47

[	LD A , [ RANDOM_SEED2 ]] Z80:14cyc, R800:6cyc
00b0c1: 3a d2 b0

[	RRCA] Z80:5cyc, R800:1cyc
00b0c4: 0f

[	RRCA] Z80:5cyc, R800:1cyc
00b0c5: 0f

[	XOR A , B] Z80:5cyc, R800:1cyc
00b0c6: a8

[	DEC A] Z80:5cyc, R800:1cyc
00b0c7: 3d

[	LD [ RANDOM_SEED1 ] , A] Z80:14cyc, R800:6cyc
00b0c8: 32 d1 b0

[	LD A , B] Z80:5cyc, R800:2cyc
00b0cb: 78

[	INC A] Z80:5cyc, R800:1cyc
00b0cc: 3c

[	LD [ RANDOM_SEED2 ] , A] Z80:14cyc, R800:6cyc
00b0cd: 32 d2 b0

[	RET] Z80:11cyc, R800:5cyc
00b0d0: c9

[RANDOM_SEED1 :]
	label address: 0x00b0d1

[	DB 0B1001_1101]
00b0d1: 9d

[RANDOM_SEED2 :]
	label address: 0x00b0d2

[	DB 0B1010_0011]
00b0d2: a3

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//sprite_doubler.asm"] begin
[	SCOPE SPRITE_DOUBLER]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_INITIALIZER]
	Scope path: SPRITE_DOUBLER:SD_INITIALIZER:

[SD_INITIALIZER ::]
	global label address: 0x00b0d3

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b0d3: 0e 99

[	DI] Z80:5cyc, R800:2cyc
00b0d5: f3

[	LD A , SPRITE_PATTERN_GENERATOR_TABLE >> 14] Z80:8cyc, R800:2cyc
00b0d6: 3e 07

[	LD [ REG14SAV ] , A] Z80:14cyc, R800:6cyc
00b0d8: 32 ed ff

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b0db: ed 79

[	LD A , 14 | 0X80] Z80:8cyc, R800:2cyc
00b0dd: 3e 8e

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b0df: ed 79

[	LD HL , ( SPRITE_PATTERN_GENERATOR_TABLE & 0X3FFF ) | 0X4000] Z80:11cyc, R800:3cyc
00b0e1: 21 00 78

[	OUT [ C ] , L] Z80:14cyc, R800:10 or 9cyc
00b0e4: ed 69

[	OUT [ C ] , H] Z80:14cyc, R800:10 or 9cyc
00b0e6: ed 61

[	EI] Z80:5cyc, R800:1cyc
00b0e8: fb

[	DEC C] Z80:5cyc, R800:1cyc
00b0e9: 0d

[	LD HL , PLAYER_SPRITE_PATTERN1] Z80:11cyc, R800:3cyc
00b0ea: 21 05 b3

[	LD B , 32 * ( 2 + 2 * 8 + 1 + 1 ) - 512] Z80:8cyc, R800:2cyc
00b0ed: 06 80

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00b0ef: ed b3

[	NOP] Z80:5cyc, R800:1cyc
00b0f1: 00

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00b0f2: ed b3

[	NOP] Z80:5cyc, R800:1cyc
00b0f4: 00

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00b0f5: ed b3

[	INC C] Z80:5cyc, R800:1cyc
00b0f7: 0c

[	LD HL , ( SPRITE_ATTRIBUTE_TABLE0 & 0X3FFF ) | 0X4000] Z80:11cyc, R800:3cyc
00b0f8: 21 00 6e

[	DI] Z80:5cyc, R800:2cyc
00b0fb: f3

[	OUT [ C ] , L] Z80:14cyc, R800:10 or 9cyc
00b0fc: ed 69

[	OUT [ C ] , H] Z80:14cyc, R800:10 or 9cyc
00b0fe: ed 61

[	EI] Z80:5cyc, R800:1cyc
00b100: fb

[	DEC C] Z80:5cyc, R800:1cyc
00b101: 0d

[	LD A , SPRITE_HIDE_LINE] Z80:8cyc, R800:2cyc
00b102: 3e d8

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b104: ed 79

[	INC C] Z80:5cyc, R800:1cyc
00b106: 0c

[	RET] Z80:11cyc, R800:5cyc
00b107: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_BEGIN_FRAME]
	Scope path: SPRITE_DOUBLER:SD_BEGIN_FRAME:

[SD_BEGIN_FRAME ::]
	global label address: 0x00b108

[	LD HL , ( SPRITE_ATTRIBUTE_TABLE1 - 0X0200 ) & 0X3FFF | 0X4000] Z80:11cyc, R800:3cyc
00b108: 21 00 70

[	LD [ SPRITE_COLOR_TABLE1_PTR ] , HL] Z80:17cyc, R800:7cyc
00b10b: 22 fd b2

[	LD HL , ( SPRITE_ATTRIBUTE_TABLE2 - 0X0200 ) & 0X3FFF | 0X4000] Z80:11cyc, R800:3cyc
00b10e: 21 00 74

[	LD [ SPRITE_COLOR_TABLE2_PTR ] , HL] Z80:17cyc, R800:7cyc
00b111: 22 ff b2

[	LD HL , SPRITE_ATTRIBUTE_TABLE1 & 0X3FFF | 0X4000] Z80:11cyc, R800:3cyc
00b114: 21 00 72

[	LD [ SPRITE_ATTRIBUTE_TABLE1_PTR ] , HL] Z80:17cyc, R800:7cyc
00b117: 22 01 b3

[	LD HL , SPRITE_ATTRIBUTE_TABLE2 & 0X3FFF | 0X4000] Z80:11cyc, R800:3cyc
00b11a: 21 00 76

[	LD [ SPRITE_ATTRIBUTE_TABLE2_PTR ] , HL] Z80:17cyc, R800:7cyc
00b11d: 22 03 b3

[	XOR A , A] Z80:5cyc, R800:1cyc
00b120: af

[	LD [ SPRITE_COUNT1 ] , A] Z80:14cyc, R800:6cyc
00b121: 32 fb b2

[	LD [ SPRITE_COUNT2 ] , A] Z80:14cyc, R800:6cyc
00b124: 32 fc b2

[	DI] Z80:5cyc, R800:2cyc
00b127: f3

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00b128: 3a 32 be

[	RLCA] Z80:5cyc, R800:1cyc
00b12b: 07

[	OR A , 0B0000_0011] Z80:8cyc, R800:2cyc
00b12c: f6 03

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b12e: 0e 99

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b130: ed 79

[	LD [ REG14SAV ] , A] Z80:14cyc, R800:6cyc
00b132: 32 ed ff

[	LD A , 14 | 0X80] Z80:8cyc, R800:2cyc
00b135: 3e 8e

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b137: ed 79

[	EI] Z80:5cyc, R800:1cyc
00b139: fb

[	RET] Z80:11cyc, R800:5cyc
00b13a: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_CHANGE_ATTRIBUTE0]
	Scope path: SPRITE_DOUBLER:SD_CHANGE_ATTRIBUTE0:

[SD_CHANGE_ATTRIBUTE0 ::]
	global label address: 0x00b13b

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b13b: 0e 99

[	LD A , ( ( ( SPRITE_ATTRIBUTE_TABLE0 >> 9 ) << 2 ) | 0B0000_0011 ) & 255] Z80:8cyc, R800:2cyc
00b13d: 3e df

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b13f: ed 79

[	LD A , 5 | 0X80] Z80:8cyc, R800:2cyc
00b141: 3e 85

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b143: ed 79

[	LD A , SPRITE_ATTRIBUTE_TABLE0 >> 15] Z80:8cyc, R800:2cyc
00b145: 3e 03

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b147: ed 79

[	LD A , 11 | 0X80] Z80:8cyc, R800:2cyc
00b149: 3e 8b

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b14b: ed 79

[	RET] Z80:11cyc, R800:5cyc
00b14d: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_CHANGE_ATTRIBUTE1]
	Scope path: SPRITE_DOUBLER:SD_CHANGE_ATTRIBUTE1:

[SD_CHANGE_ATTRIBUTE1 ::]
	global label address: 0x00b14e

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b14e: 0e 99

[	LD A , ( ( ( SPRITE_ATTRIBUTE_TABLE1 >> 9 ) << 2 ) | 0B0000_0011 ) & 255] Z80:8cyc, R800:2cyc
00b150: 3e e7

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b152: ed 79

[	LD A , 5 | 0X80] Z80:8cyc, R800:2cyc
00b154: 3e 85

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b156: ed 79

[	LD A , [ DRAW_PAGE ]] Z80:14cyc, R800:6cyc
00b158: 3a 32 be

[	XOR A , 2] Z80:8cyc, R800:2cyc
00b15b: ee 02

[	INC A] Z80:5cyc, R800:1cyc
00b15d: 3c

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b15e: ed 79

[	LD A , 11 | 0X80] Z80:8cyc, R800:2cyc
00b160: 3e 8b

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b162: ed 79

[	RET] Z80:11cyc, R800:5cyc
00b164: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_CHANGE_ATTRIBUTE2]
	Scope path: SPRITE_DOUBLER:SD_CHANGE_ATTRIBUTE2:

[SD_CHANGE_ATTRIBUTE2 ::]
	global label address: 0x00b165

[	LD C , IO_VDP_PORT1] Z80:8cyc, R800:2cyc
00b165: 0e 99

[	LD A , ( ( ( SPRITE_ATTRIBUTE_TABLE2 >> 9 ) << 2 ) | 0B0000_0011 ) & 255] Z80:8cyc, R800:2cyc
00b167: 3e ef

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b169: ed 79

[	LD A , 5 | 0X80] Z80:8cyc, R800:2cyc
00b16b: 3e 85

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b16d: ed 79

[	RET] Z80:11cyc, R800:5cyc
00b16f: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_PUT_SPRITE_PAIR]
	Scope path: SPRITE_DOUBLER:SD_PUT_SPRITE_PAIR:

[SD_PUT_SPRITE_PAIR ::]
	global label address: 0x00b170

[	LD A , E] Z80:5cyc, R800:2cyc
00b170: 7b

[	CP A , 104] Z80:8cyc, R800:2cyc
00b171: fe 68

[	JP NC , PUT_LOWER] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b173: d2 dc b1

[PUT_UPPER :]
	label address: 0x00b176

[	LD A , [ SPRITE_COUNT1 ]] Z80:14cyc, R800:6cyc
00b176: 3a fb b2

[	CP A , 32] Z80:8cyc, R800:2cyc
00b179: fe 20

[	JP NC , SKIP_PUT_UPPER] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b17b: d2 d8 b1

[	INC A] Z80:5cyc, R800:1cyc
00b17e: 3c

[	INC A] Z80:5cyc, R800:1cyc
00b17f: 3c

[	LD [ SPRITE_COUNT1 ] , A] Z80:14cyc, R800:6cyc
00b180: 32 fb b2

[	PUSH BC] Z80:12cyc, R800:6cyc
00b183: c5

[	PUSH HL] Z80:12cyc, R800:6cyc
00b184: e5

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE1_PTR ]] Z80:17cyc, R800:7cyc
00b185: 2a 01 b3

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b188: cd 92 af

[	POP HL] Z80:11cyc, R800:5cyc
00b18b: e1

[	LD A , [ VSCROLL_SP ]] Z80:14cyc, R800:6cyc
00b18c: 3a 31 be

[	ADD A , E] Z80:5cyc, R800:1cyc
00b18f: 83

[	DEC A] Z80:5cyc, R800:1cyc
00b190: 3d

[	CP A , SPRITE_HIDE_LINE] Z80:8cyc, R800:2cyc
00b191: fe d8

[	JP NZ , PUT_UPPER_S1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b193: c2 97 b1

[	INC A] Z80:5cyc, R800:1cyc
00b196: 3c

[PUT_UPPER_S1 :]
	label address: 0x00b197

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b197: ed 79

[	NOP] Z80:5cyc, R800:1cyc
00b199: 00

[	NOP] Z80:5cyc, R800:1cyc
00b19a: 00

[	NOP] Z80:5cyc, R800:1cyc
00b19b: 00

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b19c: ed 51

[	NOP] Z80:5cyc, R800:1cyc
00b19e: 00

[	NOP] Z80:5cyc, R800:1cyc
00b19f: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1a0: 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b1a1: ed 41

[	NOP] Z80:5cyc, R800:1cyc
00b1a3: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1a4: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1a5: 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b1a6: ed 41

[	NOP] Z80:5cyc, R800:1cyc
00b1a8: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1a9: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1aa: 00

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b1ab: ed 79

[	NOP] Z80:5cyc, R800:1cyc
00b1ad: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1ae: 00

[	INC B] Z80:5cyc, R800:1cyc
00b1af: 04

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b1b0: ed 51

[	INC B] Z80:5cyc, R800:1cyc
00b1b2: 04

[	INC B] Z80:5cyc, R800:1cyc
00b1b3: 04

[	INC B] Z80:5cyc, R800:1cyc
00b1b4: 04

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b1b5: ed 41

[	PUSH HL] Z80:12cyc, R800:6cyc
00b1b7: e5

[	LD HL , [ SPRITE_COLOR_TABLE1_PTR ]] Z80:17cyc, R800:7cyc
00b1b8: 2a fd b2

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b1bb: cd 92 af

[	LD BC , 16 * 2] Z80:11cyc, R800:3cyc
00b1be: 01 20 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b1c1: 09

[	LD [ SPRITE_COLOR_TABLE1_PTR ] , HL] Z80:17cyc, R800:7cyc
00b1c2: 22 fd b2

[	POP HL] Z80:11cyc, R800:5cyc
00b1c5: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
00b1c6: e5

[	LD BC , ( ( 16 * 2 ) << 8 ) | IO_VDP_PORT0] Z80:11cyc, R800:3cyc
00b1c7: 01 98 20

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00b1ca: ed b3

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE1_PTR ]] Z80:17cyc, R800:7cyc
00b1cc: 2a 01 b3

[	LD BC , 4 * 2] Z80:11cyc, R800:3cyc
00b1cf: 01 08 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b1d2: 09

[	LD [ SPRITE_ATTRIBUTE_TABLE1_PTR ] , HL] Z80:17cyc, R800:7cyc
00b1d3: 22 01 b3

[	POP HL] Z80:11cyc, R800:5cyc
00b1d6: e1

[	POP BC] Z80:11cyc, R800:5cyc
00b1d7: c1

[SKIP_PUT_UPPER :]
	label address: 0x00b1d8

[	LD A , E] Z80:5cyc, R800:2cyc
00b1d8: 7b

[	CP A , 104 - 16] Z80:8cyc, R800:2cyc
00b1d9: fe 58

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00b1db: d8

[PUT_LOWER :]
	label address: 0x00b1dc

[	LD A , [ SPRITE_COUNT2 ]] Z80:14cyc, R800:6cyc
00b1dc: 3a fc b2

[	CP A , 32] Z80:8cyc, R800:2cyc
00b1df: fe 20

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00b1e1: d0

[	INC A] Z80:5cyc, R800:1cyc
00b1e2: 3c

[	INC A] Z80:5cyc, R800:1cyc
00b1e3: 3c

[	LD [ SPRITE_COUNT2 ] , A] Z80:14cyc, R800:6cyc
00b1e4: 32 fc b2

[	PUSH HL] Z80:12cyc, R800:6cyc
00b1e7: e5

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE2_PTR ]] Z80:17cyc, R800:7cyc
00b1e8: 2a 03 b3

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b1eb: cd 92 af

[	POP HL] Z80:11cyc, R800:5cyc
00b1ee: e1

[	LD A , [ VSCROLL_SP ]] Z80:14cyc, R800:6cyc
00b1ef: 3a 31 be

[	ADD A , E] Z80:5cyc, R800:1cyc
00b1f2: 83

[	DEC A] Z80:5cyc, R800:1cyc
00b1f3: 3d

[	CP A , SPRITE_HIDE_LINE] Z80:8cyc, R800:2cyc
00b1f4: fe d8

[	JP NZ , PUT_LOWER_S1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b1f6: c2 fa b1

[	INC A] Z80:5cyc, R800:1cyc
00b1f9: 3c

[PUT_LOWER_S1 :]
	label address: 0x00b1fa

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b1fa: ed 79

[	NOP] Z80:5cyc, R800:1cyc
00b1fc: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1fd: 00

[	NOP] Z80:5cyc, R800:1cyc
00b1fe: 00

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b1ff: ed 51

[	NOP] Z80:5cyc, R800:1cyc
00b201: 00

[	NOP] Z80:5cyc, R800:1cyc
00b202: 00

[	NOP] Z80:5cyc, R800:1cyc
00b203: 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b204: ed 41

[	NOP] Z80:5cyc, R800:1cyc
00b206: 00

[	NOP] Z80:5cyc, R800:1cyc
00b207: 00

[	NOP] Z80:5cyc, R800:1cyc
00b208: 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b209: ed 41

[	NOP] Z80:5cyc, R800:1cyc
00b20b: 00

[	NOP] Z80:5cyc, R800:1cyc
00b20c: 00

[	NOP] Z80:5cyc, R800:1cyc
00b20d: 00

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b20e: ed 79

[	NOP] Z80:5cyc, R800:1cyc
00b210: 00

[	NOP] Z80:5cyc, R800:1cyc
00b211: 00

[	INC B] Z80:5cyc, R800:1cyc
00b212: 04

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b213: ed 51

[	INC B] Z80:5cyc, R800:1cyc
00b215: 04

[	INC B] Z80:5cyc, R800:1cyc
00b216: 04

[	INC B] Z80:5cyc, R800:1cyc
00b217: 04

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b218: ed 41

[	PUSH HL] Z80:12cyc, R800:6cyc
00b21a: e5

[	LD HL , [ SPRITE_COLOR_TABLE2_PTR ]] Z80:17cyc, R800:7cyc
00b21b: 2a ff b2

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b21e: cd 92 af

[	LD BC , 16 * 2] Z80:11cyc, R800:3cyc
00b221: 01 20 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b224: 09

[	LD [ SPRITE_COLOR_TABLE2_PTR ] , HL] Z80:17cyc, R800:7cyc
00b225: 22 ff b2

[	POP HL] Z80:11cyc, R800:5cyc
00b228: e1

[	LD BC , ( ( 16 * 2 ) << 8 ) | IO_VDP_PORT0] Z80:11cyc, R800:3cyc
00b229: 01 98 20

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00b22c: ed b3

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE2_PTR ]] Z80:17cyc, R800:7cyc
00b22e: 2a 03 b3

[	LD BC , 4 * 2] Z80:11cyc, R800:3cyc
00b231: 01 08 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b234: 09

[	LD [ SPRITE_ATTRIBUTE_TABLE2_PTR ] , HL] Z80:17cyc, R800:7cyc
00b235: 22 03 b3

[	RET] Z80:11cyc, R800:5cyc
00b238: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_PUT_SPRITE_SINGLE]
	Scope path: SPRITE_DOUBLER:SD_PUT_SPRITE_SINGLE:

[SD_PUT_SPRITE_SINGLE ::]
	global label address: 0x00b239

[	LD A , E] Z80:5cyc, R800:2cyc
00b239: 7b

[	CP A , 104] Z80:8cyc, R800:2cyc
00b23a: fe 68

[	JP NC , PUT_LOWER] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b23c: d2 90 b2

[PUT_UPPER :]
	label address: 0x00b23f

[	LD A , [ SPRITE_COUNT1 ]] Z80:14cyc, R800:6cyc
00b23f: 3a fb b2

[	CP A , 32] Z80:8cyc, R800:2cyc
00b242: fe 20

[	JP NC , SKIP_PUT_UPPER] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b244: d2 8c b2

[	INC A] Z80:5cyc, R800:1cyc
00b247: 3c

[	LD [ SPRITE_COUNT1 ] , A] Z80:14cyc, R800:6cyc
00b248: 32 fb b2

[	PUSH BC] Z80:12cyc, R800:6cyc
00b24b: c5

[	PUSH HL] Z80:12cyc, R800:6cyc
00b24c: e5

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE1_PTR ]] Z80:17cyc, R800:7cyc
00b24d: 2a 01 b3

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b250: cd 92 af

[	POP HL] Z80:11cyc, R800:5cyc
00b253: e1

[	LD A , [ VSCROLL_SP ]] Z80:14cyc, R800:6cyc
00b254: 3a 31 be

[	ADD A , E] Z80:5cyc, R800:1cyc
00b257: 83

[	DEC A] Z80:5cyc, R800:1cyc
00b258: 3d

[	CP A , SPRITE_HIDE_LINE] Z80:8cyc, R800:2cyc
00b259: fe d8

[	JP NZ , PUT_UPPER_S1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b25b: c2 5f b2

[	INC A] Z80:5cyc, R800:1cyc
00b25e: 3c

[PUT_UPPER_S1 :]
	label address: 0x00b25f

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b25f: ed 79

[	NOP] Z80:5cyc, R800:1cyc
00b261: 00

[	NOP] Z80:5cyc, R800:1cyc
00b262: 00

[	NOP] Z80:5cyc, R800:1cyc
00b263: 00

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b264: ed 51

[	NOP] Z80:5cyc, R800:1cyc
00b266: 00

[	NOP] Z80:5cyc, R800:1cyc
00b267: 00

[	NOP] Z80:5cyc, R800:1cyc
00b268: 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b269: ed 41

[	PUSH HL] Z80:12cyc, R800:6cyc
00b26b: e5

[	LD HL , [ SPRITE_COLOR_TABLE1_PTR ]] Z80:17cyc, R800:7cyc
00b26c: 2a fd b2

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b26f: cd 92 af

[	LD BC , 16] Z80:11cyc, R800:3cyc
00b272: 01 10 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b275: 09

[	LD [ SPRITE_COLOR_TABLE1_PTR ] , HL] Z80:17cyc, R800:7cyc
00b276: 22 fd b2

[	POP HL] Z80:11cyc, R800:5cyc
00b279: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
00b27a: e5

[	LD BC , ( 16 << 8 ) | IO_VDP_PORT0] Z80:11cyc, R800:3cyc
00b27b: 01 98 10

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00b27e: ed b3

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE1_PTR ]] Z80:17cyc, R800:7cyc
00b280: 2a 01 b3

[	LD BC , 4] Z80:11cyc, R800:3cyc
00b283: 01 04 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b286: 09

[	LD [ SPRITE_ATTRIBUTE_TABLE1_PTR ] , HL] Z80:17cyc, R800:7cyc
00b287: 22 01 b3

[	POP HL] Z80:11cyc, R800:5cyc
00b28a: e1

[	POP BC] Z80:11cyc, R800:5cyc
00b28b: c1

[SKIP_PUT_UPPER :]
	label address: 0x00b28c

[	LD A , E] Z80:5cyc, R800:2cyc
00b28c: 7b

[	CP A , 104 - 16] Z80:8cyc, R800:2cyc
00b28d: fe 58

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00b28f: d8

[PUT_LOWER :]
	label address: 0x00b290

[	LD A , [ SPRITE_COUNT2 ]] Z80:14cyc, R800:6cyc
00b290: 3a fc b2

[	CP A , 32] Z80:8cyc, R800:2cyc
00b293: fe 20

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00b295: d0

[	INC A] Z80:5cyc, R800:1cyc
00b296: 3c

[	LD [ SPRITE_COUNT2 ] , A] Z80:14cyc, R800:6cyc
00b297: 32 fc b2

[	PUSH HL] Z80:12cyc, R800:6cyc
00b29a: e5

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE2_PTR ]] Z80:17cyc, R800:7cyc
00b29b: 2a 03 b3

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b29e: cd 92 af

[	POP HL] Z80:11cyc, R800:5cyc
00b2a1: e1

[	LD A , [ VSCROLL_SP ]] Z80:14cyc, R800:6cyc
00b2a2: 3a 31 be

[	ADD A , E] Z80:5cyc, R800:1cyc
00b2a5: 83

[	DEC A] Z80:5cyc, R800:1cyc
00b2a6: 3d

[	CP A , SPRITE_HIDE_LINE] Z80:8cyc, R800:2cyc
00b2a7: fe d8

[	JP NZ , PUT_LOWER_S1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b2a9: c2 ad b2

[	INC A] Z80:5cyc, R800:1cyc
00b2ac: 3c

[PUT_LOWER_S1 :]
	label address: 0x00b2ad

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b2ad: ed 79

[	NOP] Z80:5cyc, R800:1cyc
00b2af: 00

[	NOP] Z80:5cyc, R800:1cyc
00b2b0: 00

[	NOP] Z80:5cyc, R800:1cyc
00b2b1: 00

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b2b2: ed 51

[	NOP] Z80:5cyc, R800:1cyc
00b2b4: 00

[	NOP] Z80:5cyc, R800:1cyc
00b2b5: 00

[	NOP] Z80:5cyc, R800:1cyc
00b2b6: 00

[	OUT [ C ] , B] Z80:14cyc, R800:10 or 9cyc
00b2b7: ed 41

[	PUSH HL] Z80:12cyc, R800:6cyc
00b2b9: e5

[	LD HL , [ SPRITE_COLOR_TABLE2_PTR ]] Z80:17cyc, R800:7cyc
00b2ba: 2a ff b2

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b2bd: cd 92 af

[	LD BC , 16] Z80:11cyc, R800:3cyc
00b2c0: 01 10 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b2c3: 09

[	LD [ SPRITE_COLOR_TABLE2_PTR ] , HL] Z80:17cyc, R800:7cyc
00b2c4: 22 ff b2

[	POP HL] Z80:11cyc, R800:5cyc
00b2c7: e1

[	LD BC , ( 16 << 8 ) | IO_VDP_PORT0] Z80:11cyc, R800:3cyc
00b2c8: 01 98 10

[	OTIR] Z80:23 or 18cyc, R800:? or 12 or 11cyc
00b2cb: ed b3

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE2_PTR ]] Z80:17cyc, R800:7cyc
00b2cd: 2a 03 b3

[	LD BC , 4] Z80:11cyc, R800:3cyc
00b2d0: 01 04 00

[	ADD HL , BC] Z80:12cyc, R800:1cyc
00b2d3: 09

[	LD [ SPRITE_ATTRIBUTE_TABLE2_PTR ] , HL] Z80:17cyc, R800:7cyc
00b2d4: 22 03 b3

[	RET] Z80:11cyc, R800:5cyc
00b2d7: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[	SCOPE SD_FINALIZE]
	Scope path: SPRITE_DOUBLER:SD_FINALIZE:

[SD_FINALIZE ::]
	global label address: 0x00b2d8

[	LD A , [ SPRITE_COUNT1 ]] Z80:14cyc, R800:6cyc
00b2d8: 3a fb b2

[	CP A , 32] Z80:8cyc, R800:2cyc
00b2db: fe 20

[	JP NC , SKIP_PUT_UPPER] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b2dd: d2 ea b2

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE1_PTR ]] Z80:17cyc, R800:7cyc
00b2e0: 2a 01 b3

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b2e3: cd 92 af

[	LD A , SPRITE_HIDE_LINE] Z80:8cyc, R800:2cyc
00b2e6: 3e d8

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b2e8: ed 79

[SKIP_PUT_UPPER :]
	label address: 0x00b2ea

[	LD A , [ SPRITE_COUNT2 ]] Z80:14cyc, R800:6cyc
00b2ea: 3a fc b2

[	CP A , 32] Z80:8cyc, R800:2cyc
00b2ed: fe 20

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00b2ef: d0

[	LD HL , [ SPRITE_ATTRIBUTE_TABLE2_PTR ]] Z80:17cyc, R800:7cyc
00b2f0: 2a 03 b3

[	CALL SET_VRAM_ADDRESS] Z80:18cyc, R800:5cyc
00b2f3: cd 92 af

[	LD A , SPRITE_HIDE_LINE] Z80:8cyc, R800:2cyc
00b2f6: 3e d8

[	OUT [ C ] , A] Z80:14cyc, R800:10 or 9cyc
00b2f8: ed 79

[	RET] Z80:11cyc, R800:5cyc
00b2fa: c9

[	ENDSCOPE]
	Scope path: SPRITE_DOUBLER:

[SPRITE_COUNT1 :]
	label address: 0x00b2fb

[	DB 0]
00b2fb: 00

[SPRITE_COUNT2 :]
	label address: 0x00b2fc

[	DB 0]
00b2fc: 00

[SPRITE_COLOR_TABLE1_PTR :]
	label address: 0x00b2fd

[	DW 0]
00b2fd: 00 00

[SPRITE_COLOR_TABLE2_PTR :]
	label address: 0x00b2ff

[	DW 0]
00b2ff: 00 00

[SPRITE_ATTRIBUTE_TABLE1_PTR :]
	label address: 0x00b301

[	DW 0]
00b301: 00 00

[SPRITE_ATTRIBUTE_TABLE2_PTR :]
	label address: 0x00b303

[	DW 0]
00b303: 00 00

[	INCLUDE ".//sprite_data.asm"] begin
[PLAYER_SPRITE_PATTERN1 ::]
	global label address: 0x00b305

[	DB 0X01 , 0X03 , 0X03 , 0X03 , 0X0F , 0X03 , 0X0E , 0X1F]
00b305: 01 03 03 03 0f 03 0e 1f

[	DB 0X2F , 0X5F , 0XBF , 0XBE , 0XBF , 0XBF , 0XBB , 0X23]
00b30d: 2f 5f bf be bf bf bb 23

[	DB 0X80 , 0XC0 , 0XC0 , 0XC0 , 0XF0 , 0XC0 , 0X70 , 0XF8]
00b315: 80 c0 c0 c0 f0 c0 70 f8

[	DB 0XF4 , 0XFA , 0XFD , 0X7D , 0XFD , 0XFD , 0XDD , 0XC4]
00b31d: f4 fa fd 7d fd fd dd c4

[PLAYER_SPRITE_PATTERN2 ::]
	global label address: 0x00b325

[	DB 0X01 , 0X03 , 0X02 , 0X02 , 0X0E , 0X0E , 0X0F , 0X1F]
00b325: 01 03 02 02 0e 0e 0f 1f

[	DB 0X3F , 0X7F , 0XFB , 0XFB , 0XEB , 0XEB , 0XE8 , 0X23]
00b32d: 3f 7f fb fb eb eb e8 23

[	DB 0X80 , 0XC0 , 0X40 , 0X40 , 0X50 , 0X70 , 0XD0 , 0XD0]
00b335: 80 c0 40 40 50 70 d0 d0

[	DB 0XDC , 0XD6 , 0XD7 , 0XD7 , 0XD7 , 0XD7 , 0X17 , 0XC4]
00b33d: dc d6 d7 d7 d7 d7 17 c4

[ANDO_PART1_SPRITE_PATTERN1 ::]
	global label address: 0x00b345

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b345: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b34d: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X00 , 0X01 , 0X03 , 0X07 , 0X0F , 0X1F , 0X3F]
00b355: 00 00 01 03 07 0f 1f 3f

[	DB 0X60 , 0X30 , 0X18 , 0X1C , 0X0C , 0X06 , 0X07 , 0X03]
00b35d: 60 30 18 1c 0c 06 07 03

[ANDO_PART1_SPRITE_PATTERN2 ::]
	global label address: 0x00b365

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b365: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X01 , 0X03 , 0X07 , 0X0F , 0X1F , 0X3F , 0X7F]
00b36d: 00 01 03 07 0f 1f 3f 7f

[	DB 0X00 , 0X01 , 0X02 , 0X04 , 0X08 , 0X10 , 0X20 , 0X40]
00b375: 00 01 02 04 08 10 20 40

[	DB 0XDF , 0XEF , 0XF7 , 0XEB , 0XF7 , 0XFD , 0XFA , 0XFD]
00b37d: df ef f7 eb f7 fd fa fd

[ANDO_PART2_SPRITE_PATTERN1 ::]
	global label address: 0x00b385

[	DB 0X00 , 0X80 , 0X40 , 0X20 , 0X10 , 0X08 , 0X04 , 0X02]
00b385: 00 80 40 20 10 08 04 02

[	DB 0X04 , 0X08 , 0X14 , 0X28 , 0X38 , 0X50 , 0XB0 , 0X70]
00b38d: 04 08 14 28 38 50 b0 70

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b395: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b39d: 00 00 00 00 00 00 00 00

[ANDO_PART2_SPRITE_PATTERN2 ::]
	global label address: 0x00b3a5

[	DB 0X00 , 0X00 , 0X80 , 0XC0 , 0XE0 , 0XF0 , 0XF8 , 0XFE]
00b3a5: 00 00 80 c0 e0 f0 f8 fe

[	DB 0XFF , 0XFF , 0XFB , 0XF7 , 0XE7 , 0XEF , 0XCF , 0X8F]
00b3ad: ff ff fb f7 e7 ef cf 8f

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b3b5: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X80 , 0XC0 , 0XE0 , 0XF0 , 0XF8 , 0XFC , 0XFE]
00b3bd: 00 80 c0 e0 f0 f8 fc fe

[ANDO_PART3_SPRITE_PATTERN1 ::]
	global label address: 0x00b3c5

[	DB 0X00 , 0X00 , 0X02 , 0X04 , 0X08 , 0X10 , 0X20 , 0X40]
00b3c5: 00 00 02 04 08 10 20 40

[	DB 0X80 , 0XE0 , 0XF8 , 0XFE , 0XFF , 0XFF , 0XFF , 0XFF]
00b3cd: 80 e0 f8 fe ff ff ff ff

[	DB 0XFF , 0X7F , 0XC0 , 0X70 , 0X38 , 0X1E , 0X07 , 0X03]
00b3d5: ff 7f c0 70 38 1e 07 03

[	DB 0X05 , 0X09 , 0X12 , 0X24 , 0XC9 , 0XF2 , 0XFF , 0XFF]
00b3dd: 05 09 12 24 c9 f2 ff ff

[ANDO_PART3_SPRITE_PATTERN2 ::]
	global label address: 0x00b3e5

[	DB 0X00 , 0X01 , 0X03 , 0X07 , 0X0F , 0X1F , 0X3F , 0X7F]
00b3e5: 00 01 03 07 0f 1f 3f 7f

[	DB 0XFF , 0XFF , 0XFF , 0XEF , 0XEF , 0XEF , 0XEF , 0XEF]
00b3ed: ff ff ff ef ef ef ef ef

[	DB 0X00 , 0X80 , 0X7F , 0XAF , 0XD7 , 0XED , 0XFA , 0XFD]
00b3f5: 00 80 7f af d7 ed fa fd

[	DB 0XFA , 0XF6 , 0XED , 0XDB , 0XB6 , 0XED , 0XF8 , 0XFE]
00b3fd: fa f6 ed db b6 ed f8 fe

[ANDO_PART4_SPRITE_PATTERN1 ::]
	global label address: 0x00b405

[	DB 0X00 , 0X01 , 0X02 , 0X05 , 0X8A , 0XF4 , 0XD8 , 0X30]
00b405: 00 01 02 05 8a f4 d8 30

[	DB 0X60 , 0XD0 , 0XC8 , 0X24 , 0X93 , 0XCF , 0X7F , 0XFF]
00b40d: 60 d0 c8 24 93 cf 7f ff

[	DB 0X00 , 0X00 , 0XC0 , 0X20 , 0X10 , 0X08 , 0X04 , 0X02]
00b415: 00 00 c0 20 10 08 04 02

[	DB 0X01 , 0X07 , 0X1F , 0X7F , 0XFF , 0XFF , 0XFF , 0XFF]
00b41d: 01 07 1f 7f ff ff ff ff

[ANDO_PART4_SPRITE_PATTERN2 ::]
	global label address: 0x00b425

[	DB 0XFF , 0XFF , 0XFF , 0XFE , 0X7D , 0X3B , 0X67 , 0XCF]
00b425: ff ff ff fe 7d 3b 67 cf

[	DB 0X9F , 0X2F , 0X37 , 0XDB , 0X6D , 0X36 , 0X98 , 0X60]
00b42d: 9f 2f 37 db 6d 36 98 60

[	DB 0X00 , 0X80 , 0X00 , 0XC0 , 0XE0 , 0XF0 , 0XF8 , 0XFC]
00b435: 00 80 00 c0 e0 f0 f8 fc

[	DB 0XFF , 0XFE , 0XF8 , 0XE0 , 0X80 , 0X00 , 0X00 , 0X00]
00b43d: ff fe f8 e0 80 00 00 00

[ANDO_PART5_SPRITE_PATTERN1 ::]
	global label address: 0x00b445

[	DB 0XFF , 0XFF , 0XFF , 0XFF , 0XFF , 0XFF , 0XFC , 0XE0]
00b445: ff ff ff ff ff ff fc e0

[	DB 0X40 , 0X20 , 0X10 , 0X08 , 0X04 , 0X02 , 0X01 , 0X00]
00b44d: 40 20 10 08 04 02 01 00

[	DB 0XFF , 0XFF , 0XFF , 0XFF , 0XF4 , 0X92 , 0X09 , 0X05]
00b455: ff ff ff ff f4 92 09 05

[	DB 0X02 , 0X05 , 0X1B , 0X2F , 0X58 , 0XA0 , 0X40 , 0X00]
00b45d: 02 05 1b 2f 58 a0 40 00

[ANDO_PART5_SPRITE_PATTERN2 ::]
	global label address: 0x00b465

[	DB 0XEF , 0XEF , 0XEF , 0XEF , 0XEE , 0XF8 , 0XE3 , 0X9F]
00b465: ef ef ef ef ee f8 e3 9f

[	DB 0X3F , 0X1F , 0X0F , 0X07 , 0X03 , 0X01 , 0X01 , 0X00]
00b46d: 3f 1f 0f 07 03 01 01 00

[	DB 0XFE , 0XF8 , 0XE0 , 0X80 , 0X0B , 0X6D , 0XF6 , 0XFB]
00b475: fe f8 e0 80 0b 6d f6 fb

[	DB 0XFF , 0XFE , 0XFC , 0XF0 , 0XE7 , 0XDF , 0XBF , 0XFF]
00b47d: ff fe fc f0 e7 df bf ff

[ANDO_PART6_SPRITE_PATTERN1 ::]
	global label address: 0x00b485

[	DB 0X80 , 0XE0 , 0X38 , 0X97 , 0X25 , 0X48 , 0X90 , 0XA0]
00b485: 80 e0 38 97 25 48 90 a0

[	DB 0XC0 , 0XE0 , 0XF8 , 0XEC , 0XC6 , 0X83 , 0X01 , 0X00]
00b48d: c0 e0 f8 ec c6 83 01 00

[	DB 0X08 , 0X08 , 0X08 , 0XFF , 0XFF , 0X3F , 0X0F , 0X03]
00b495: 08 08 08 ff ff 3f 0f 03

[	DB 0X02 , 0X04 , 0X08 , 0X10 , 0X20 , 0X40 , 0X80 , 0X00]
00b49d: 02 04 08 10 20 40 80 00

[ANDO_PART6_SPRITE_PATTERN2 ::]
	global label address: 0x00b4a5

[	DB 0X7F , 0X1F , 0XC7 , 0X68 , 0XDA , 0XB7 , 0X6F , 0X5F]
00b4a5: 7f 1f c7 68 da b7 6f 5f

[	DB 0X3F , 0X1F , 0X07 , 0X13 , 0X39 , 0X7C , 0XFE , 0XFF]
00b4ad: 3f 1f 07 13 39 7c fe ff

[	DB 0XF7 , 0XF7 , 0XF7 , 0X00 , 0X00 , 0XC0 , 0XF0 , 0XFC]
00b4b5: f7 f7 f7 00 00 c0 f0 fc

[	DB 0XFC , 0XF8 , 0XF0 , 0XE0 , 0XC0 , 0X80 , 0X00 , 0X00]
00b4bd: fc f8 f0 e0 c0 80 00 00

[ANDO_PART7_SPRITE_PATTERN1 ::]
	global label address: 0x00b4c5

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b4c5: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b4cd: 00 00 00 00 00 00 00 00

[	DB 0X0E , 0X06 , 0X05 , 0X07 , 0X0A , 0X14 , 0X28 , 0X50]
00b4d5: 0e 06 05 07 0a 14 28 50

[	DB 0X20 , 0X20 , 0X10 , 0X08 , 0X04 , 0X02 , 0X01 , 0X00]
00b4dd: 20 20 10 08 04 02 01 00

[ANDO_PART7_SPRITE_PATTERN2 ::]
	global label address: 0x00b4e5

[	DB 0X7F , 0X3F , 0X1F , 0X0F , 0X07 , 0X03 , 0X01 , 0X00]
00b4e5: 7f 3f 1f 0f 07 03 01 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b4ed: 00 00 00 00 00 00 00 00

[	DB 0XF1 , 0XFB , 0XFE , 0XFC , 0XFD , 0XFB , 0XF7 , 0XEF]
00b4f5: f1 fb fe fc fd fb f7 ef

[	DB 0X5F , 0X1F , 0X0F , 0X07 , 0X03 , 0X01 , 0X00 , 0X00]
00b4fd: 5f 1f 0f 07 03 01 00 00

[ANDO_PART8_SPRITE_PATTERN1 ::]
	global label address: 0x00b505

[	DB 0XFC , 0XF8 , 0X70 , 0X20 , 0X30 , 0X18 , 0X0C , 0X06]
00b505: fc f8 70 20 30 18 0c 06

[	DB 0X02 , 0X04 , 0X08 , 0X10 , 0X20 , 0X40 , 0X80 , 0X00]
00b50d: 02 04 08 10 20 40 80 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b515: 00 00 00 00 00 00 00 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b51d: 00 00 00 00 00 00 00 00

[ANDO_PART8_SPRITE_PATTERN2 ::]
	global label address: 0x00b525

[	DB 0X03 , 0X07 , 0X8F , 0XDF , 0XCF , 0XE7 , 0XF3 , 0XF9]
00b525: 03 07 8f df cf e7 f3 f9

[	DB 0XFC , 0XF8 , 0XF0 , 0XE0 , 0XC0 , 0X80 , 0X00 , 0X00]
00b52d: fc f8 f0 e0 c0 80 00 00

[	DB 0XFE , 0XFC , 0XF8 , 0XF0 , 0XE0 , 0XC0 , 0X80 , 0X00]
00b535: fe fc f8 f0 e0 c0 80 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00]
00b53d: 00 00 00 00 00 00 00 00

[ANDO_SHOT_SPRITE_PATTERN ::]
	global label address: 0x00b545

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X01 , 0X02 , 0X05 , 0X0B]
00b545: 00 00 00 00 01 02 05 0b

[	DB 0X0B , 0X05 , 0X02 , 0X01 , 0X00 , 0X00 , 0X00 , 0X00]
00b54d: 0b 05 02 01 00 00 00 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X80 , 0X40 , 0XA0 , 0XD0]
00b555: 00 00 00 00 80 40 a0 d0

[	DB 0XD0 , 0XA0 , 0X40 , 0X80 , 0X00 , 0X00 , 0X00 , 0X00]
00b55d: d0 a0 40 80 00 00 00 00

[FLAG_SPRITE_PATTERN ::]
	global label address: 0x00b565

[	DB 0X7C , 0XC6 , 0XC0 , 0X7C , 0X06 , 0XC6 , 0X7C , 0X00]
00b565: 7c c6 c0 7c 06 c6 7c 00

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X01 , 0X01]
00b56d: 00 00 00 00 00 00 01 01

[	DB 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X00 , 0X80]
00b575: 00 00 00 00 00 00 00 80

[	DB 0XE0 , 0XF8 , 0XFE , 0XF8 , 0XE0 , 0X80 , 0XC0 , 0XC0]
00b57d: e0 f8 fe f8 e0 80 c0 c0

[PLAYER_SPRITE_COLOR1 ::]
	global label address: 0x00b585

[	DB 0X03 , 0X03 , 0X03 , 0X03 , 0X03 , 0X03 , 0X03 , 0X03]
00b585: 03 03 03 03 03 03 03 03

[	DB 0X03 , 0X03 , 0X03 , 0X03 , 0X03 , 0X03 , 0X03 , 0X03]
00b58d: 03 03 03 03 03 03 03 03

[PLAYER_SPRITE_COLOR2 ::]
	global label address: 0x00b595

[	DB 0X46 , 0X46 , 0X46 , 0X46 , 0X46 , 0X46 , 0X44 , 0X46]
00b595: 46 46 46 46 46 46 44 46

[	DB 0X46 , 0X46 , 0X46 , 0X46 , 0X46 , 0X46 , 0X46 , 0X46]
00b59d: 46 46 46 46 46 46 46 46

[ANDO_PART1_SPRITE_COLOR1 ::]
	global label address: 0x00b5a5

[	DB 0X0D , 0X0D , 0X0D , 0X0D , 0X0D , 0X0D , 0X0D , 0X0D]
00b5a5: 0d 0d 0d 0d 0d 0d 0d 0d

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b5ad: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART1_SPRITE_COLOR2 ::]
	global label address: 0x00b5b5

[	DB 0X4E , 0X4E , 0X4E , 0X4E , 0X4E , 0X4E , 0X4E , 0X4E]
00b5b5: 4e 4e 4e 4e 4e 4e 4e 4e

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b5bd: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_PART2_SPRITE_COLOR1 ::]
	global label address: 0x00b5c5

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b5c5: 0b 0b 0b 0b 0b 0b 0b 0b

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b5cd: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART2_SPRITE_COLOR2 ::]
	global label address: 0x00b5d5

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b5d5: 4d 4d 4d 4d 4d 4d 4d 4d

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b5dd: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_PART3_SPRITE_COLOR1 ::]
	global label address: 0x00b5e5

[	DB 0X0D , 0X0D , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b5e5: 0d 0d 0b 0b 0b 0b 0b 0b

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b5ed: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART3_SPRITE_COLOR2 ::]
	global label address: 0x00b5f5

[	DB 0X4E , 0X4E , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b5f5: 4e 4e 4d 4d 4d 4d 4d 4d

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b5fd: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_PART4_SPRITE_COLOR1 ::]
	global label address: 0x00b605

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b605: 0b 0b 0b 0b 0b 0b 0b 0b

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b60d: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART4_SPRITE_COLOR2 ::]
	global label address: 0x00b615

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b615: 4d 4d 4d 4d 4d 4d 4d 4d

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b61d: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_PART5_SPRITE_COLOR1 ::]
	global label address: 0x00b625

[	DB 0X0C , 0X0C , 0X0C , 0X0C , 0X0B , 0X0B , 0X0B , 0X0B]
00b625: 0c 0c 0c 0c 0b 0b 0b 0b

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b62d: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART5_SPRITE_COLOR2 ::]
	global label address: 0x00b635

[	DB 0X4B , 0X4B , 0X4B , 0X4B , 0X4D , 0X4D , 0X4D , 0X4D]
00b635: 4b 4b 4b 4b 4d 4d 4d 4d

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b63d: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_PART6_SPRITE_COLOR1 ::]
	global label address: 0x00b645

[	DB 0X0C , 0X0C , 0X0C , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b645: 0c 0c 0c 0b 0b 0b 0b 0b

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b64d: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART6_SPRITE_COLOR2 ::]
	global label address: 0x00b655

[	DB 0X4B , 0X4B , 0X4B , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b655: 4b 4b 4b 4d 4d 4d 4d 4d

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b65d: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_PART7_SPRITE_COLOR1 ::]
	global label address: 0x00b665

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b665: 0b 0b 0b 0b 0b 0b 0b 0b

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b66d: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART7_SPRITE_COLOR2 ::]
	global label address: 0x00b675

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b675: 4d 4d 4d 4d 4d 4d 4d 4d

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b67d: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_PART8_SPRITE_COLOR1 ::]
	global label address: 0x00b685

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b685: 0b 0b 0b 0b 0b 0b 0b 0b

[	DB 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B , 0X0B]
00b68d: 0b 0b 0b 0b 0b 0b 0b 0b

[ANDO_PART8_SPRITE_COLOR2 ::]
	global label address: 0x00b695

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b695: 4d 4d 4d 4d 4d 4d 4d 4d

[	DB 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D , 0X4D]
00b69d: 4d 4d 4d 4d 4d 4d 4d 4d

[ANDO_SHOT_SPRITE_COLOR1 ::]
	global label address: 0x00b6a5

[	DB 0X0A , 0X0A , 0X0A , 0X0A , 0X0A , 0X0A , 0X0A , 0X0A]
00b6a5: 0a 0a 0a 0a 0a 0a 0a 0a

[	DB 0X0A , 0X0A , 0X0A , 0X0A , 0X0A , 0X0A , 0X0A , 0X0A]
00b6ad: 0a 0a 0a 0a 0a 0a 0a 0a

[FLAG_SPRITE_COLOR1 ::]
	global label address: 0x00b6b5

[	DB 0X04 , 0X04 , 0X04 , 0X04 , 0X04 , 0X04 , 0X04 , 0X01]
00b6b5: 04 04 04 04 04 04 04 01

[	DB 0X01 , 0X01 , 0X01 , 0X01 , 0X01 , 0X01 , 0X01 , 0X01]
00b6bd: 01 01 01 01 01 01 01 01

[	INCLUDE ".//sprite_data.asm"] end

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//sprite_doubler.asm"] end

[	INCLUDE ".//bgmdriver.asm"] begin
[	INCLUDE ".//bgmdriver_d.asm"] begin
[	INCLUDE ".//bgmdriver_d.asm"] end

[BGMDRIVER_INITIALIZE ::]
	global label address: 0x00b6c5

[	LD HL , PLAY_INFO_CH0] Z80:11cyc, R800:3cyc
00b6c5: 21 db bc

[	LD DE , PLAY_INFO_CH0 + 1] Z80:11cyc, R800:3cyc
00b6c8: 11 dc bc

[	LD BC , INFO_SIZE * 3 - 1] Z80:11cyc, R800:3cyc
00b6cb: 01 38 00

[	XOR A , A] Z80:5cyc, R800:1cyc
00b6ce: af

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00b6cf: 77

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00b6d0: ed b0

[	RET] Z80:11cyc, R800:5cyc
00b6d2: c9

[BGMDRIVER_PLAY ::]
	global label address: 0x00b6d3

[	PUSH HL] Z80:12cyc, R800:6cyc
00b6d3: e5

[	CALL BGMDRIVER_STOP] Z80:18cyc, R800:5cyc
00b6d4: cd 10 b7

[	POP HL] Z80:11cyc, R800:5cyc
00b6d7: e1

[	DI] Z80:5cyc, R800:2cyc
00b6d8: f3

[	LD [ PLAY_BGM_DATA_ADR ] , HL] Z80:17cyc, R800:7cyc
00b6d9: 22 cc bc

[	LD IX , [ PLAY_BGM_DATA_ADR ]] Z80:22cyc, R800:8cyc
00b6dc: dd 2a cc bc

[	LD E , [ IX + 0 ]] Z80:21cyc, R800:7cyc
00b6e0: dd 5e 00

[	LD D , [ IX + 1 ]] Z80:21cyc, R800:7cyc
00b6e3: dd 56 01

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b6e6: 19

[	LD [ PLAY_INFO_CH0 + INFO_PLAY_ADR_L ] , HL] Z80:17cyc, R800:7cyc
00b6e7: 22 db bc

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b6ea: 2a cc bc

[	LD E , [ IX + 2 ]] Z80:21cyc, R800:7cyc
00b6ed: dd 5e 02

[	LD D , [ IX + 3 ]] Z80:21cyc, R800:7cyc
00b6f0: dd 56 03

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b6f3: 19

[	LD [ PLAY_INFO_CH1 + INFO_PLAY_ADR_L ] , HL] Z80:17cyc, R800:7cyc
00b6f4: 22 ee bc

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b6f7: 2a cc bc

[	LD E , [ IX + 4 ]] Z80:21cyc, R800:7cyc
00b6fa: dd 5e 04

[	LD D , [ IX + 5 ]] Z80:21cyc, R800:7cyc
00b6fd: dd 56 05

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b700: 19

[	LD [ PLAY_INFO_CH2 + INFO_PLAY_ADR_L ] , HL] Z80:17cyc, R800:7cyc
00b701: 22 01 bd

[	XOR A , A] Z80:5cyc, R800:1cyc
00b704: af

[	LD [ PLAY_MASTER_VOLUME_SPEED ] , A] Z80:14cyc, R800:6cyc
00b705: 32 cf bc

[	LD [ PLAY_MASTER_VOLUME_WAIT ] , A] Z80:14cyc, R800:6cyc
00b708: 32 ce bc

[	LD [ PLAY_MASTER_VOLUME ] , A] Z80:14cyc, R800:6cyc
00b70b: 32 d0 bc

[	EI] Z80:5cyc, R800:1cyc
00b70e: fb

[	RET] Z80:11cyc, R800:5cyc
00b70f: c9

[BGMDRIVER_STOP ::]
	global label address: 0x00b710

[	DI] Z80:5cyc, R800:2cyc
00b710: f3

[	LD HL , PLAY_INFO_CH0] Z80:11cyc, R800:3cyc
00b711: 21 db bc

[	CALL BGMDRIVER_INIT_PLAY_INFO] Z80:18cyc, R800:5cyc
00b714: cd 93 b7

[	LD HL , PLAY_INFO_CH1] Z80:11cyc, R800:3cyc
00b717: 21 ee bc

[	CALL BGMDRIVER_INIT_PLAY_INFO] Z80:18cyc, R800:5cyc
00b71a: cd 93 b7

[	LD HL , PLAY_INFO_CH2] Z80:11cyc, R800:3cyc
00b71d: 21 01 bd

[	CALL BGMDRIVER_INIT_PLAY_INFO] Z80:18cyc, R800:5cyc
00b720: cd 93 b7

[	EI] Z80:5cyc, R800:1cyc
00b723: fb

[	RET] Z80:11cyc, R800:5cyc
00b724: c9

[BGMDRIVER_CHECK_PLAYING ::]
	global label address: 0x00b725

[	DI] Z80:5cyc, R800:2cyc
00b725: f3

[	LD IX , PLAY_INFO_CH0] Z80:16cyc, R800:4cyc
00b726: dd 21 db bc

[	LD A , [ IX + INFO_PLAY_ADR_L ]] Z80:21cyc, R800:7cyc
00b72a: dd 7e 00

[	OR A , [ IX + INFO_PLAY_ADR_H ]] Z80:21cyc, R800:7cyc
00b72d: dd b6 01

[	LD IX , PLAY_INFO_CH1] Z80:16cyc, R800:4cyc
00b730: dd 21 ee bc

[	OR A , [ IX + INFO_PLAY_ADR_L ]] Z80:21cyc, R800:7cyc
00b734: dd b6 00

[	OR A , [ IX + INFO_PLAY_ADR_H ]] Z80:21cyc, R800:7cyc
00b737: dd b6 01

[	LD IX , PLAY_INFO_CH2] Z80:16cyc, R800:4cyc
00b73a: dd 21 01 bd

[	OR A , [ IX + INFO_PLAY_ADR_L ]] Z80:21cyc, R800:7cyc
00b73e: dd b6 00

[	OR A , [ IX + INFO_PLAY_ADR_H ]] Z80:21cyc, R800:7cyc
00b741: dd b6 01

[	EI] Z80:5cyc, R800:1cyc
00b744: fb

[	RET] Z80:11cyc, R800:5cyc
00b745: c9

[BGMDRIVER_FADEOUT ::]
	global label address: 0x00b746

[	DI] Z80:5cyc, R800:2cyc
00b746: f3

[	LD [ PLAY_MASTER_VOLUME_SPEED ] , A] Z80:14cyc, R800:6cyc
00b747: 32 cf bc

[	XOR A , A] Z80:5cyc, R800:1cyc
00b74a: af

[	LD [ PLAY_MASTER_VOLUME_WAIT ] , A] Z80:14cyc, R800:6cyc
00b74b: 32 ce bc

[	LD [ PLAY_MASTER_VOLUME ] , A] Z80:14cyc, R800:6cyc
00b74e: 32 d0 bc

[	EI] Z80:5cyc, R800:1cyc
00b751: fb

[	RET] Z80:11cyc, R800:5cyc
00b752: c9

[BGMDRIVER_MUTE_PSG ::]
	global label address: 0x00b753

[	DI] Z80:5cyc, R800:2cyc
00b753: f3

[	XOR A , A] Z80:5cyc, R800:1cyc
00b754: af

[	LD D , A] Z80:5cyc, R800:2cyc
00b755: 57

[	LD C , PSG_REG_ADR] Z80:8cyc, R800:2cyc
00b756: 0e a0

[	LD B , 16] Z80:8cyc, R800:2cyc
00b758: 06 10

[BGMDRIVER_MUTE_PSG_LOOP :]
	label address: 0x00b75a

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b75a: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00b75c: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00b75d: d3 a1

[	DJNZ BGMDRIVER_MUTE_PSG_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00b75f: 10 f9

[	LD D , 7] Z80:8cyc, R800:2cyc
00b761: 16 07

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00b763: ed 51

[	LD A , 0X80 + 0X3F] Z80:8cyc, R800:2cyc
00b765: 3e bf

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00b767: d3 a1

[	EI] Z80:5cyc, R800:1cyc
00b769: fb

[	RET] Z80:11cyc, R800:5cyc
00b76a: c9

[BGMDRIVER_PLAY_SOUND_EFFECT ::]
	global label address: 0x00b76b

[	PUSH HL] Z80:12cyc, R800:6cyc
00b76b: e5

[	DI] Z80:5cyc, R800:2cyc
00b76c: f3

[	LD A , [ PLAY_SOUND_EFFECT_PRIORITY ]] Z80:14cyc, R800:6cyc
00b76d: 3a ca bc

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00b770: be

[	JP C , BGMDRIVER_PLAY_SOUND_EFFECT_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b771: da 90 b7

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00b774: 7e

[	LD [ PLAY_SOUND_EFFECT_PRIORITY ] , A] Z80:14cyc, R800:6cyc
00b775: 32 ca bc

[	INC HL] Z80:7cyc, R800:1cyc
00b778: 23

[	LD [ PLAY_SOUND_EFFECT_ADR ] , HL] Z80:17cyc, R800:7cyc
00b779: 22 c8 bc

[	XOR A , A] Z80:5cyc, R800:1cyc
00b77c: af

[	LD [ PLAY_SOUND_EFFECT_WAIT_COUNT ] , A] Z80:14cyc, R800:6cyc
00b77d: 32 c3 bc

[	LD [ PLAY_SOUND_EFFECT_FREQ + 0 ] , A] Z80:14cyc, R800:6cyc
00b780: 32 c4 bc

[	LD [ PLAY_SOUND_EFFECT_FREQ + 1 ] , A] Z80:14cyc, R800:6cyc
00b783: 32 c5 bc

[	LD [ PLAY_SOUND_EFFECT_NOISE_FREQ ] , A] Z80:14cyc, R800:6cyc
00b786: 32 c6 bc

[	LD [ PLAY_SOUND_EFFECT_VOLUME ] , A] Z80:14cyc, R800:6cyc
00b789: 32 c7 bc

[	INC A] Z80:5cyc, R800:1cyc
00b78c: 3c

[	LD [ PLAY_SOUND_EFFECT_ACTIVE ] , A] Z80:14cyc, R800:6cyc
00b78d: 32 c2 bc

[BGMDRIVER_PLAY_SOUND_EFFECT_SKIP :]
	label address: 0x00b790

[	POP HL] Z80:11cyc, R800:5cyc
00b790: e1

[	EI] Z80:5cyc, R800:1cyc
00b791: fb

[	RET] Z80:11cyc, R800:5cyc
00b792: c9

[BGMDRIVER_INIT_PLAY_INFO :]
	label address: 0x00b793

[	LD E , L] Z80:5cyc, R800:2cyc
00b793: 5d

[	LD D , H] Z80:5cyc, R800:2cyc
00b794: 54

[	INC DE] Z80:7cyc, R800:1cyc
00b795: 13

[	LD BC , INFO_SIZE - 1] Z80:11cyc, R800:3cyc
00b796: 01 12 00

[	XOR A , A] Z80:5cyc, R800:1cyc
00b799: af

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00b79a: 77

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00b79b: ed b0

[	RET] Z80:11cyc, R800:5cyc
00b79d: c9

[BGMDRIVER_INTERRUPT_HANDLER ::]
	global label address: 0x00b79e

[	LD IX , PLAY_INFO_CH0] Z80:16cyc, R800:4cyc
00b79e: dd 21 db bc

[	CALL BGMDRIVER_PLAY_CH] Z80:18cyc, R800:5cyc
00b7a2: cd b3 b7

[	LD IX , PLAY_INFO_CH1] Z80:16cyc, R800:4cyc
00b7a5: dd 21 ee bc

[	CALL BGMDRIVER_PLAY_CH] Z80:18cyc, R800:5cyc
00b7a9: cd b3 b7

[	CALL BGMDRIVER_SOUND_EFFECT] Z80:18cyc, R800:5cyc
00b7ac: cd 99 ba

[	CALL BGMDRIVER_MIXER] Z80:18cyc, R800:5cyc
00b7af: cd f4 ba

[	RET] Z80:11cyc, R800:5cyc
00b7b2: c9

[BGMDRIVER_PLAY_CH :]
	label address: 0x00b7b3

[	LD A , [ IX + INFO_PLAY_ADR_L ]] Z80:21cyc, R800:7cyc
00b7b3: dd 7e 00

[	OR A , [ IX + INFO_PLAY_ADR_H ]] Z80:21cyc, R800:7cyc
00b7b6: dd b6 01

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00b7b9: c8

[	LD L , [ IX + INFO_WAIT_COUNT_L ]] Z80:21cyc, R800:7cyc
00b7ba: dd 6e 02

[	LD H , [ IX + INFO_WAIT_COUNT_H ]] Z80:21cyc, R800:7cyc
00b7bd: dd 66 03

[	LD A , L] Z80:5cyc, R800:2cyc
00b7c0: 7d

[	OR A , H] Z80:5cyc, R800:1cyc
00b7c1: b4

[	JR Z , BGMDRIVER_CHECK_NEXT_DATA] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00b7c2: 28 0a

[	DEC HL] Z80:7cyc, R800:1cyc
00b7c4: 2b

[	LD [ IX + INFO_WAIT_COUNT_L ] , L] Z80:8cyc, R800:4cyc
00b7c5: dd 75 02

[	LD [ IX + INFO_WAIT_COUNT_H ] , H] Z80:8cyc, R800:4cyc
00b7c8: dd 74 03

[	JP BGMDRIVER_UPDATE_VIBRATO] Z80:11cyc, R800:5cyc
00b7cb: c3 b3 b9

[BGMDRIVER_CHECK_NEXT_DATA :]
	label address: 0x00b7ce

[	LD L , [ IX + INFO_PLAY_ADR_L ]] Z80:21cyc, R800:7cyc
00b7ce: dd 6e 00

[	LD H , [ IX + INFO_PLAY_ADR_H ]] Z80:21cyc, R800:7cyc
00b7d1: dd 66 01

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00b7d4: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00b7d5: 23

[	CP A , 96] Z80:8cyc, R800:2cyc
00b7d6: fe 60

[	JP C , BGMDRIVER_KEYON] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7d8: da 0c b8

[	CP A , 101] Z80:8cyc, R800:2cyc
00b7db: fe 65

[	JP C , BGMDRIVER_DRUM_KEYON] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7dd: da 54 b8

[	JP Z , BGMDRIVER_KEYOFF] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7e0: ca 81 b8

[	CP A , 103] Z80:8cyc, R800:2cyc
00b7e3: fe 67

[	JP C , BGMDRIVER_REST] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7e5: da 9f b8

[	JP Z , BGMDRIVER_VOLUME] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7e8: ca b9 b8

[	CP A , 105] Z80:8cyc, R800:2cyc
00b7eb: fe 69

[	JP C , BGMDRIVER_SOUND_FONT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7ed: da c7 b8

[	JP Z , BGMDRIVER_JUMP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7f0: ca 90 b9

[	CP A , 107] Z80:8cyc, R800:2cyc
00b7f3: fe 6b

[	JP C , BGMDRIVER_PLAY_END] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7f5: da a0 b9

[	JP Z , BGMDRIVER_DRUM1_FONT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7f8: ca eb b8

[	CP A , 109] Z80:8cyc, R800:2cyc
00b7fb: fe 6d

[	JP C , BGMDRIVER_DRUM2_FONT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b7fd: da 0c b9

[	JP Z , BGMDRIVER_DRUM3_FONT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b800: ca 2d b9

[	CP A , 111] Z80:8cyc, R800:2cyc
00b803: fe 6f

[	JP C , BGMDRIVER_DRUM4_FONT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b805: da 4e b9

[	JP Z , BGMDRIVER_DRUM5_FONT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b808: ca 6f b9

[	RET] Z80:11cyc, R800:5cyc
00b80b: c9

[BGMDRIVER_KEYON :]
	label address: 0x00b80c

[	LD C , A] Z80:5cyc, R800:2cyc
00b80c: 4f

[	CALL BGMDRIVER_GET_WAIT_TIME] Z80:18cyc, R800:5cyc
00b80d: cd 83 ba

[	LD [ IX + INFO_WAIT_COUNT_L ] , E] Z80:8cyc, R800:4cyc
00b810: dd 73 02

[	LD [ IX + INFO_WAIT_COUNT_H ] , D] Z80:8cyc, R800:4cyc
00b813: dd 72 03

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b816: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b819: dd 74 01

[	LD A , C] Z80:5cyc, R800:2cyc
00b81c: 79

[	RLCA] Z80:5cyc, R800:1cyc
00b81d: 07

[	LD L , A] Z80:5cyc, R800:2cyc
00b81e: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
00b81f: 26 00

[	LD DE , FREQ_DATA] Z80:11cyc, R800:3cyc
00b821: 11 02 bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b824: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b825: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b826: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b827: 56

[	LD L , [ IX + INFO_SEL_SFONT_L ]] Z80:21cyc, R800:7cyc
00b828: dd 6e 11

[	LD H , [ IX + INFO_SEL_SFONT_H ]] Z80:21cyc, R800:7cyc
00b82b: dd 66 12

[BGMDRIVER_SET_FREQ :]
	label address: 0x00b82e

[	LD [ IX + INFO_TONE_FREQ_L ] , E] Z80:8cyc, R800:4cyc
00b82e: dd 73 06

[	LD [ IX + INFO_TONE_FREQ_H ] , D] Z80:8cyc, R800:4cyc
00b831: dd 72 07

[	XOR A , A] Z80:5cyc, R800:1cyc
00b834: af

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b835: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b838: dd 77 0c

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b83b: dd 77 0d

[	LD [ IX + INFO_SOUND_FONT_L ] , L] Z80:8cyc, R800:4cyc
00b83e: dd 75 0e

[	LD [ IX + INFO_SOUND_FONT_H ] , H] Z80:8cyc, R800:4cyc
00b841: dd 74 0f

[	LD DE , SFONT_VIB_WAIT] Z80:11cyc, R800:3cyc
00b844: 11 25 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b847: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00b848: 7e

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b849: dd 77 0a

[	INC HL] Z80:7cyc, R800:1cyc
00b84c: 23

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00b84d: 7e

[	LD [ IX + INFO_NOISE_FREQ ] , A] Z80:8cyc, R800:4cyc
00b84e: dd 77 10

[	JP BGMDRIVER_UPDATE_VIBRATO] Z80:11cyc, R800:5cyc
00b851: c3 b3 b9

[BGMDRIVER_DRUM_KEYON :]
	label address: 0x00b854

[	LD C , A] Z80:5cyc, R800:2cyc
00b854: 4f

[	CALL BGMDRIVER_GET_WAIT_TIME] Z80:18cyc, R800:5cyc
00b855: cd 83 ba

[	LD [ IX + INFO_WAIT_COUNT_L ] , E] Z80:8cyc, R800:4cyc
00b858: dd 73 02

[	LD [ IX + INFO_WAIT_COUNT_H ] , D] Z80:8cyc, R800:4cyc
00b85b: dd 72 03

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b85e: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b861: dd 74 01

[	LD A , C] Z80:5cyc, R800:2cyc
00b864: 79

[	SUB A , 96] Z80:8cyc, R800:2cyc
00b865: d6 60

[	RLCA] Z80:5cyc, R800:1cyc
00b867: 07

[	LD HL , PLAY_DRUM_FONT1] Z80:11cyc, R800:3cyc
00b868: 21 d1 bc

[	ADD A , L] Z80:5cyc, R800:1cyc
00b86b: 85

[	LD L , A] Z80:5cyc, R800:2cyc
00b86c: 6f

[	LD A , 0] Z80:8cyc, R800:2cyc
00b86d: 3e 00

[	ADC A , H] Z80:5cyc, R800:1cyc
00b86f: 8c

[	LD H , A] Z80:5cyc, R800:2cyc
00b870: 67

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b871: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b872: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b873: 56

[	EX DE , HL] Z80:5cyc, R800:1cyc
00b874: eb

[	PUSH HL] Z80:12cyc, R800:6cyc
00b875: e5

[	LD DE , SFONT_FREQ_L] Z80:11cyc, R800:3cyc
00b876: 11 27 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b879: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b87a: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b87b: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b87c: 56

[	POP HL] Z80:11cyc, R800:5cyc
00b87d: e1

[	JP BGMDRIVER_SET_FREQ] Z80:11cyc, R800:5cyc
00b87e: c3 2e b8

[BGMDRIVER_KEYOFF :]
	label address: 0x00b881

[	CALL BGMDRIVER_GET_WAIT_TIME] Z80:18cyc, R800:5cyc
00b881: cd 83 ba

[	LD [ IX + INFO_WAIT_COUNT_L ] , E] Z80:8cyc, R800:4cyc
00b884: dd 73 02

[	LD [ IX + INFO_WAIT_COUNT_H ] , D] Z80:8cyc, R800:4cyc
00b887: dd 72 03

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b88a: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b88d: dd 74 01

[	LD A , [ IX + INFO_ENV_STATE ]] Z80:21cyc, R800:7cyc
00b890: dd 7e 0b

[	CP A , 3] Z80:8cyc, R800:2cyc
00b893: fe 03

[	JP NC , BGMDRIVER_UPDATE_VIBRATO] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b895: d2 b3 b9

[	LD [ IX + INFO_ENV_STATE ] , 3] Z80:21cyc, R800:7cyc
00b898: dd 36 0b 03

[	JP BGMDRIVER_UPDATE_VIBRATO] Z80:11cyc, R800:5cyc
00b89c: c3 b3 b9

[BGMDRIVER_REST :]
	label address: 0x00b89f

[	CALL BGMDRIVER_GET_WAIT_TIME] Z80:18cyc, R800:5cyc
00b89f: cd 83 ba

[	LD [ IX + INFO_WAIT_COUNT_L ] , E] Z80:8cyc, R800:4cyc
00b8a2: dd 73 02

[	LD [ IX + INFO_WAIT_COUNT_H ] , D] Z80:8cyc, R800:4cyc
00b8a5: dd 72 03

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b8a8: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b8ab: dd 74 01

[	LD [ IX + INFO_ENV_STATE ] , 4] Z80:21cyc, R800:7cyc
00b8ae: dd 36 0b 04

[	LD [ IX + INFO_ENV_VOL ] , 0] Z80:21cyc, R800:7cyc
00b8b2: dd 36 0c 00

[	JP BGMDRIVER_UPDATE_VIBRATO] Z80:11cyc, R800:5cyc
00b8b6: c3 b3 b9

[BGMDRIVER_VOLUME :]
	label address: 0x00b8b9

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00b8b9: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00b8ba: 23

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b8bb: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b8be: dd 74 01

[	LD [ IX + INFO_TONE_VOL ] , A] Z80:8cyc, R800:4cyc
00b8c1: dd 77 09

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b8c4: c3 ce b7

[BGMDRIVER_SOUND_FONT :]
	label address: 0x00b8c7

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b8c7: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b8c8: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b8c9: 56

[	INC HL] Z80:7cyc, R800:1cyc
00b8ca: 23

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b8cb: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b8ce: dd 74 01

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b8d1: 2a cc bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b8d4: 19

[	LD [ IX + INFO_SEL_SFONT_L ] , L] Z80:8cyc, R800:4cyc
00b8d5: dd 75 11

[	LD [ IX + INFO_SEL_SFONT_H ] , H] Z80:8cyc, R800:4cyc
00b8d8: dd 74 12

[	XOR A , A] Z80:5cyc, R800:1cyc
00b8db: af

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b8dc: dd 77 0a

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b8df: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b8e2: dd 77 0c

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b8e5: dd 77 0d

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b8e8: c3 ce b7

[BGMDRIVER_DRUM1_FONT :]
	label address: 0x00b8eb

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b8eb: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b8ec: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b8ed: 56

[	INC HL] Z80:7cyc, R800:1cyc
00b8ee: 23

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b8ef: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b8f2: dd 74 01

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b8f5: 2a cc bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b8f8: 19

[	LD [ PLAY_DRUM_FONT1 ] , HL] Z80:17cyc, R800:7cyc
00b8f9: 22 d1 bc

[	XOR A , A] Z80:5cyc, R800:1cyc
00b8fc: af

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b8fd: dd 77 0a

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b900: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b903: dd 77 0c

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b906: dd 77 0d

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b909: c3 ce b7

[BGMDRIVER_DRUM2_FONT :]
	label address: 0x00b90c

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b90c: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b90d: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b90e: 56

[	INC HL] Z80:7cyc, R800:1cyc
00b90f: 23

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b910: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b913: dd 74 01

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b916: 2a cc bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b919: 19

[	LD [ PLAY_DRUM_FONT2 ] , HL] Z80:17cyc, R800:7cyc
00b91a: 22 d3 bc

[	XOR A , A] Z80:5cyc, R800:1cyc
00b91d: af

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b91e: dd 77 0a

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b921: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b924: dd 77 0c

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b927: dd 77 0d

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b92a: c3 ce b7

[BGMDRIVER_DRUM3_FONT :]
	label address: 0x00b92d

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b92d: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b92e: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b92f: 56

[	INC HL] Z80:7cyc, R800:1cyc
00b930: 23

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b931: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b934: dd 74 01

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b937: 2a cc bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b93a: 19

[	LD [ PLAY_DRUM_FONT3 ] , HL] Z80:17cyc, R800:7cyc
00b93b: 22 d5 bc

[	XOR A , A] Z80:5cyc, R800:1cyc
00b93e: af

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b93f: dd 77 0a

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b942: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b945: dd 77 0c

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b948: dd 77 0d

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b94b: c3 ce b7

[BGMDRIVER_DRUM4_FONT :]
	label address: 0x00b94e

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b94e: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b94f: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b950: 56

[	INC HL] Z80:7cyc, R800:1cyc
00b951: 23

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b952: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b955: dd 74 01

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b958: 2a cc bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b95b: 19

[	LD [ PLAY_DRUM_FONT4 ] , HL] Z80:17cyc, R800:7cyc
00b95c: 22 d7 bc

[	XOR A , A] Z80:5cyc, R800:1cyc
00b95f: af

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b960: dd 77 0a

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b963: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b966: dd 77 0c

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b969: dd 77 0d

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b96c: c3 ce b7

[BGMDRIVER_DRUM5_FONT :]
	label address: 0x00b96f

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b96f: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b970: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b971: 56

[	INC HL] Z80:7cyc, R800:1cyc
00b972: 23

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b973: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b976: dd 74 01

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b979: 2a cc bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b97c: 19

[	LD [ PLAY_DRUM_FONT5 ] , HL] Z80:17cyc, R800:7cyc
00b97d: 22 d9 bc

[	XOR A , A] Z80:5cyc, R800:1cyc
00b980: af

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b981: dd 77 0a

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b984: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b987: dd 77 0c

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b98a: dd 77 0d

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b98d: c3 ce b7

[BGMDRIVER_JUMP :]
	label address: 0x00b990

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00b990: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00b991: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00b992: 56

[	LD HL , [ PLAY_BGM_DATA_ADR ]] Z80:17cyc, R800:7cyc
00b993: 2a cc bc

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b996: 19

[	LD [ IX + INFO_PLAY_ADR_L ] , L] Z80:8cyc, R800:4cyc
00b997: dd 75 00

[	LD [ IX + INFO_PLAY_ADR_H ] , H] Z80:8cyc, R800:4cyc
00b99a: dd 74 01

[	JP BGMDRIVER_CHECK_NEXT_DATA] Z80:11cyc, R800:5cyc
00b99d: c3 ce b7

[BGMDRIVER_PLAY_END :]
	label address: 0x00b9a0

[	XOR A , A] Z80:5cyc, R800:1cyc
00b9a0: af

[	LD [ IX + INFO_PLAY_ADR_L ] , A] Z80:8cyc, R800:4cyc
00b9a1: dd 77 00

[	LD [ IX + INFO_PLAY_ADR_H ] , A] Z80:8cyc, R800:4cyc
00b9a4: dd 77 01

[	LD [ IX + INFO_TONE_VOL ] , A] Z80:8cyc, R800:4cyc
00b9a7: dd 77 09

[	LD [ IX + INFO_ENV_STATE ] , A] Z80:8cyc, R800:4cyc
00b9aa: dd 77 0b

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00b9ad: dd 77 0c

[	JP BGMDRIVER_ENVELOPE_END] Z80:11cyc, R800:5cyc
00b9b0: c3 6a ba

[BGMDRIVER_UPDATE_VIBRATO :]
	label address: 0x00b9b3

[	LD A , [ IX + INFO_VIB_WAIT ]] Z80:21cyc, R800:7cyc
00b9b3: dd 7e 0a

[	OR A , A] Z80:5cyc, R800:1cyc
00b9b6: b7

[	JR Z , BGMDRIVER_VIBRATO_ACTIVE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00b9b7: 28 0d

[	DEC A] Z80:5cyc, R800:1cyc
00b9b9: 3d

[	LD [ IX + INFO_VIB_WAIT ] , A] Z80:8cyc, R800:4cyc
00b9ba: dd 77 0a

[	LD L , [ IX + INFO_TONE_FREQ_L ]] Z80:21cyc, R800:7cyc
00b9bd: dd 6e 06

[	LD H , [ IX + INFO_TONE_FREQ_H ]] Z80:21cyc, R800:7cyc
00b9c0: dd 66 07

[	JP BGMDRIVER_UPDATE_FREQ] Z80:11cyc, R800:5cyc
00b9c3: c3 e8 b9

[BGMDRIVER_VIBRATO_ACTIVE :]
	label address: 0x00b9c6

[	LD A , [ IX + INFO_VIB_INDEX ]] Z80:21cyc, R800:7cyc
00b9c6: dd 7e 0d

[	LD E , A] Z80:5cyc, R800:2cyc
00b9c9: 5f

[	INC A] Z80:5cyc, R800:1cyc
00b9ca: 3c

[	AND A , 31] Z80:8cyc, R800:2cyc
00b9cb: e6 1f

[	LD [ IX + INFO_VIB_INDEX ] , A] Z80:8cyc, R800:4cyc
00b9cd: dd 77 0d

[	LD D , 0] Z80:8cyc, R800:2cyc
00b9d0: 16 00

[	LD L , [ IX + INFO_SOUND_FONT_L ]] Z80:21cyc, R800:7cyc
00b9d2: dd 6e 0e

[	LD H , [ IX + INFO_SOUND_FONT_H ]] Z80:21cyc, R800:7cyc
00b9d5: dd 66 0f

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b9d8: 19

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00b9d9: 7e

[	LD L , [ IX + INFO_TONE_FREQ_L ]] Z80:21cyc, R800:7cyc
00b9da: dd 6e 06

[	LD H , [ IX + INFO_TONE_FREQ_H ]] Z80:21cyc, R800:7cyc
00b9dd: dd 66 07

[	OR A , A] Z80:5cyc, R800:1cyc
00b9e0: b7

[	JP P , BGMDRIVER_VIBRATO_ACTIVE_SKIP] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00b9e1: f2 e6 b9

[	LD D , 255] Z80:8cyc, R800:2cyc
00b9e4: 16 ff

[BGMDRIVER_VIBRATO_ACTIVE_SKIP :]
	label address: 0x00b9e6

[	LD E , A] Z80:5cyc, R800:2cyc
00b9e6: 5f

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00b9e7: 19

[BGMDRIVER_UPDATE_FREQ :]
	label address: 0x00b9e8

[	LD [ IX + INFO_EFF_FREQ_L ] , L] Z80:8cyc, R800:4cyc
00b9e8: dd 75 04

[	LD [ IX + INFO_EFF_FREQ_H ] , H] Z80:8cyc, R800:4cyc
00b9eb: dd 74 05

[	LD L , [ IX + INFO_SOUND_FONT_L ]] Z80:21cyc, R800:7cyc
00b9ee: dd 6e 0e

[	LD H , [ IX + INFO_SOUND_FONT_H ]] Z80:21cyc, R800:7cyc
00b9f1: dd 66 0f

[	LD D , 0] Z80:8cyc, R800:2cyc
00b9f4: 16 00

[	LD A , [ IX + INFO_ENV_STATE ]] Z80:21cyc, R800:7cyc
00b9f6: dd 7e 0b

[	SUB A , 1] Z80:8cyc, R800:2cyc
00b9f9: d6 01

[	JR C , BGMDRIVER_ENVELOPE_AR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00b9fb: 38 55

[	JR Z , BGMDRIVER_ENVELOPE_DR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00b9fd: 28 39

[	SUB A , 2] Z80:8cyc, R800:2cyc
00b9ff: d6 02

[	JR C , BGMDRIVER_ENVELOPE_SR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba01: 38 1d

[	JR Z , BGMDRIVER_ENVELOPE_RR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba03: 28 03

[	JP BGMDRIVER_ENVELOPE_END] Z80:11cyc, R800:5cyc
00ba05: c3 6a ba

[BGMDRIVER_ENVELOPE_RR :]
	label address: 0x00ba08

[	LD A , [ IX + INFO_ENV_VOL ]] Z80:21cyc, R800:7cyc
00ba08: dd 7e 0c

[	LD E , SFONT_RR] Z80:8cyc, R800:2cyc
00ba0b: 1e 24

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00ba0d: 19

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00ba0e: 46

[	SUB A , B] Z80:5cyc, R800:1cyc
00ba0f: 90

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00ba10: dd 77 0c

[	JR NC , BGMDRIVER_ENVELOPE_END] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba13: 30 55

[	LD [ IX + INFO_ENV_VOL ] , 0] Z80:21cyc, R800:7cyc
00ba15: dd 36 0c 00

[	LD [ IX + INFO_ENV_STATE ] , 4] Z80:21cyc, R800:7cyc
00ba19: dd 36 0b 04

[	JP BGMDRIVER_ENVELOPE_END] Z80:11cyc, R800:5cyc
00ba1d: c3 6a ba

[BGMDRIVER_ENVELOPE_SR :]
	label address: 0x00ba20

[	LD A , [ IX + INFO_ENV_VOL ]] Z80:21cyc, R800:7cyc
00ba20: dd 7e 0c

[	LD E , SFONT_SR] Z80:8cyc, R800:2cyc
00ba23: 1e 23

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00ba25: 19

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00ba26: 46

[	SUB A , B] Z80:5cyc, R800:1cyc
00ba27: 90

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00ba28: dd 77 0c

[	JR NC , BGMDRIVER_ENVELOPE_END] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba2b: 30 3d

[	LD [ IX + INFO_ENV_VOL ] , 0] Z80:21cyc, R800:7cyc
00ba2d: dd 36 0c 00

[	LD [ IX + INFO_ENV_STATE ] , 4] Z80:21cyc, R800:7cyc
00ba31: dd 36 0b 04

[	JP BGMDRIVER_ENVELOPE_END] Z80:11cyc, R800:5cyc
00ba35: c3 6a ba

[BGMDRIVER_ENVELOPE_DR :]
	label address: 0x00ba38

[	LD A , [ IX + INFO_ENV_VOL ]] Z80:21cyc, R800:7cyc
00ba38: dd 7e 0c

[	LD E , SFONT_DR] Z80:8cyc, R800:2cyc
00ba3b: 1e 21

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00ba3d: 19

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00ba3e: 46

[	INC HL] Z80:7cyc, R800:1cyc
00ba3f: 23

[	LD C , [ HL ]] Z80:8cyc, R800:4cyc
00ba40: 4e

[	SUB A , B] Z80:5cyc, R800:1cyc
00ba41: 90

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00ba42: dd 77 0c

[	CP A , C] Z80:5cyc, R800:1cyc
00ba45: b9

[	JR NC , BGMDRIVER_ENVELOPE_END] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba46: 30 22

[	LD [ IX + INFO_ENV_VOL ] , C] Z80:8cyc, R800:4cyc
00ba48: dd 71 0c

[	LD [ IX + INFO_ENV_STATE ] , 2] Z80:21cyc, R800:7cyc
00ba4b: dd 36 0b 02

[	JP BGMDRIVER_ENVELOPE_END] Z80:11cyc, R800:5cyc
00ba4f: c3 6a ba

[BGMDRIVER_ENVELOPE_AR :]
	label address: 0x00ba52

[	LD A , [ IX + INFO_ENV_VOL ]] Z80:21cyc, R800:7cyc
00ba52: dd 7e 0c

[	LD E , SFONT_AR] Z80:8cyc, R800:2cyc
00ba55: 1e 20

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00ba57: 19

[	LD B , [ HL ]] Z80:8cyc, R800:4cyc
00ba58: 46

[	ADD A , B] Z80:5cyc, R800:1cyc
00ba59: 80

[	LD [ IX + INFO_ENV_VOL ] , A] Z80:8cyc, R800:4cyc
00ba5a: dd 77 0c

[	JR NC , BGMDRIVER_ENVELOPE_END] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba5d: 30 0b

[	LD [ IX + INFO_ENV_VOL ] , 255] Z80:21cyc, R800:7cyc
00ba5f: dd 36 0c ff

[	LD [ IX + INFO_ENV_STATE ] , 1] Z80:21cyc, R800:7cyc
00ba63: dd 36 0b 01

[	JP BGMDRIVER_ENVELOPE_END] Z80:11cyc, R800:5cyc
00ba67: c3 6a ba

[BGMDRIVER_ENVELOPE_END :]
	label address: 0x00ba6a

[	LD A , [ IX + INFO_TONE_VOL ]] Z80:21cyc, R800:7cyc
00ba6a: dd 7e 09

[	XOR A , 15] Z80:8cyc, R800:2cyc
00ba6d: ee 0f

[	LD B , A] Z80:5cyc, R800:2cyc
00ba6f: 47

[	LD A , [ IX + INFO_ENV_VOL ]] Z80:21cyc, R800:7cyc
00ba70: dd 7e 0c

[	SRL A] Z80:10cyc, R800:2cyc
00ba73: cb 3f

[	SRL A] Z80:10cyc, R800:2cyc
00ba75: cb 3f

[	SRL A] Z80:10cyc, R800:2cyc
00ba77: cb 3f

[	SRL A] Z80:10cyc, R800:2cyc
00ba79: cb 3f

[	SUB A , B] Z80:5cyc, R800:1cyc
00ba7b: 90

[	JR NC , BGMDRIVER_CALC_EFF_VOL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba7c: 30 01

[	XOR A , A] Z80:5cyc, R800:1cyc
00ba7e: af

[BGMDRIVER_CALC_EFF_VOL :]
	label address: 0x00ba7f

[	LD [ IX + INFO_EFF_VOL ] , A] Z80:8cyc, R800:4cyc
00ba7f: dd 77 08

[	RET] Z80:11cyc, R800:5cyc
00ba82: c9

[BGMDRIVER_GET_WAIT_TIME :]
	label address: 0x00ba83

[	LD DE , 0] Z80:11cyc, R800:3cyc
00ba83: 11 00 00

[BGMDRIVER_GET_WAIT_TIME_LOOP :]
	label address: 0x00ba86

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00ba86: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00ba87: 23

[	INC A] Z80:5cyc, R800:1cyc
00ba88: 3c

[	JR NZ , BGMDRIVER_GET_WAIT_TIME_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba89: 20 07

[	DEC A] Z80:5cyc, R800:1cyc
00ba8b: 3d

[	ADD A , E] Z80:5cyc, R800:1cyc
00ba8c: 83

[	JR NC , BGMDRIVER_GET_WAIT_TIME_LOOP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba8d: 30 f7

[	INC D] Z80:5cyc, R800:1cyc
00ba8f: 14

[	JR BGMDRIVER_GET_WAIT_TIME_LOOP] Z80:13cyc, R800:3cyc
00ba90: 18 f4

[BGMDRIVER_GET_WAIT_TIME_EXIT :]
	label address: 0x00ba92

[	DEC A] Z80:5cyc, R800:1cyc
00ba92: 3d

[	ADD A , E] Z80:5cyc, R800:1cyc
00ba93: 83

[	LD E , A] Z80:5cyc, R800:2cyc
00ba94: 5f

[	JR NC , BGMDRIVER_GET_WAIT_TIME_SKIP] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00ba95: 30 01

[	INC D] Z80:5cyc, R800:1cyc
00ba97: 14

[BGMDRIVER_GET_WAIT_TIME_SKIP :]
	label address: 0x00ba98

[	RET] Z80:11cyc, R800:5cyc
00ba98: c9

[BGMDRIVER_SOUND_EFFECT :]
	label address: 0x00ba99

[	LD A , [ PLAY_SOUND_EFFECT_ACTIVE ]] Z80:14cyc, R800:6cyc
00ba99: 3a c2 bc

[	OR A , A] Z80:5cyc, R800:1cyc
00ba9c: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00ba9d: c8

[	LD A , [ PLAY_SOUND_EFFECT_WAIT_COUNT ]] Z80:14cyc, R800:6cyc
00ba9e: 3a c3 bc

[	OR A , A] Z80:5cyc, R800:1cyc
00baa1: b7

[	JR Z , BGMDRIVER_SOUND_EFFECT_PROC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00baa2: 28 05

[	DEC A] Z80:5cyc, R800:1cyc
00baa4: 3d

[	LD [ PLAY_SOUND_EFFECT_WAIT_COUNT ] , A] Z80:14cyc, R800:6cyc
00baa5: 32 c3 bc

[	RET] Z80:11cyc, R800:5cyc
00baa8: c9

[BGMDRIVER_SOUND_EFFECT_PROC :]
	label address: 0x00baa9

[	LD HL , [ PLAY_SOUND_EFFECT_ADR ]] Z80:17cyc, R800:7cyc
00baa9: 2a c8 bc

[BGMDRIVER_SOUND_EFFECT_LOOP :]
	label address: 0x00baac

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00baac: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00baad: 23

[	LD [ PLAY_SOUND_EFFECT_ADR ] , HL] Z80:17cyc, R800:7cyc
00baae: 22 c8 bc

[	CP A , BGM_SE_VOL] Z80:8cyc, R800:2cyc
00bab1: fe 01

[	JP C , BGMDRIVER_SOUND_EFFECT_FREQ_PROC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00bab3: da c4 ba

[	JP Z , BGMDRIVER_SOUND_EFFECT_VOLUME_PROC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00bab6: ca d2 ba

[	CP A , BGM_SE_WAIT] Z80:8cyc, R800:2cyc
00bab9: fe 03

[	JP C , BGMDRIVER_SOUND_EFFECT_NOISE_FREQ_PROC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00babb: da da ba

[	JP Z , BGMDRIVER_SOUND_EFFECT_WAIT_PROC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00babe: ca e2 ba

[	JP BGMDRIVER_SOUND_EFFECT_END_PROC] Z80:11cyc, R800:5cyc
00bac1: c3 eb ba

[BGMDRIVER_SOUND_EFFECT_FREQ_PROC :]
	label address: 0x00bac4

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00bac4: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00bac5: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00bac6: 56

[	INC HL] Z80:7cyc, R800:1cyc
00bac7: 23

[	LD [ PLAY_SOUND_EFFECT_ADR ] , HL] Z80:17cyc, R800:7cyc
00bac8: 22 c8 bc

[	LD [ PLAY_SOUND_EFFECT_FREQ ] , DE] Z80:22cyc, R800:8cyc
00bacb: ed 53 c4 bc

[	JP BGMDRIVER_SOUND_EFFECT_LOOP] Z80:11cyc, R800:5cyc
00bacf: c3 ac ba

[BGMDRIVER_SOUND_EFFECT_VOLUME_PROC :]
	label address: 0x00bad2

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00bad2: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00bad3: 23

[	LD [ PLAY_SOUND_EFFECT_VOLUME ] , A] Z80:14cyc, R800:6cyc
00bad4: 32 c7 bc

[	JP BGMDRIVER_SOUND_EFFECT_LOOP] Z80:11cyc, R800:5cyc
00bad7: c3 ac ba

[BGMDRIVER_SOUND_EFFECT_NOISE_FREQ_PROC :]
	label address: 0x00bada

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00bada: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00badb: 23

[	LD [ PLAY_SOUND_EFFECT_NOISE_FREQ ] , A] Z80:14cyc, R800:6cyc
00badc: 32 c6 bc

[	JP BGMDRIVER_SOUND_EFFECT_LOOP] Z80:11cyc, R800:5cyc
00badf: c3 ac ba

[BGMDRIVER_SOUND_EFFECT_WAIT_PROC :]
	label address: 0x00bae2

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00bae2: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00bae3: 23

[	LD [ PLAY_SOUND_EFFECT_ADR ] , HL] Z80:17cyc, R800:7cyc
00bae4: 22 c8 bc

[	LD [ PLAY_SOUND_EFFECT_WAIT_COUNT ] , A] Z80:14cyc, R800:6cyc
00bae7: 32 c3 bc

[	RET] Z80:11cyc, R800:5cyc
00baea: c9

[BGMDRIVER_SOUND_EFFECT_END_PROC :]
	label address: 0x00baeb

[	XOR A , A] Z80:5cyc, R800:1cyc
00baeb: af

[	LD [ PLAY_SOUND_EFFECT_ACTIVE ] , A] Z80:14cyc, R800:6cyc
00baec: 32 c2 bc

[	DEC A] Z80:5cyc, R800:1cyc
00baef: 3d

[	LD [ PLAY_SOUND_EFFECT_PRIORITY ] , A] Z80:14cyc, R800:6cyc
00baf0: 32 ca bc

[	RET] Z80:11cyc, R800:5cyc
00baf3: c9

[BGMDRIVER_MIXER :]
	label address: 0x00baf4

[	LD B , 0] Z80:8cyc, R800:2cyc
00baf4: 06 00

[	LD E , 0] Z80:8cyc, R800:2cyc
00baf6: 1e 00

[	LD C , PSG_REG_ADR] Z80:8cyc, R800:2cyc
00baf8: 0e a0

[	LD D , 0] Z80:8cyc, R800:2cyc
00bafa: 16 00

[	LD IX , PLAY_INFO_CH0] Z80:16cyc, R800:4cyc
00bafc: dd 21 db bc

[	LD A , [ IX + INFO_EFF_FREQ_L ]] Z80:21cyc, R800:7cyc
00bb00: dd 7e 04

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb03: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb05: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb06: d3 a1

[	LD A , [ IX + INFO_EFF_FREQ_H ]] Z80:21cyc, R800:7cyc
00bb08: dd 7e 05

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb0b: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb0d: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb0e: d3 a1

[	AND A , 0X80] Z80:8cyc, R800:2cyc
00bb10: e6 80

[	JR NZ , BGMDRIVER_MIXER_SKIP1_CH0] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bb12: 20 01

[	INC B] Z80:5cyc, R800:1cyc
00bb14: 04

[BGMDRIVER_MIXER_SKIP1_CH0 :]
	label address: 0x00bb15

[	LD A , [ IX + INFO_NOISE_FREQ ]] Z80:21cyc, R800:7cyc
00bb15: dd 7e 10

[	BIT 7 , A] Z80:10cyc, R800:2cyc
00bb18: cb 7f

[	JR Z , BGMDRIVER_MIXER_SKIP2_CH0] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bb1a: 28 07

[	AND A , 31] Z80:8cyc, R800:2cyc
00bb1c: e6 1f

[	LD [ PLAY_NOISE_FREQ ] , A] Z80:14cyc, R800:6cyc
00bb1e: 32 cb bc

[	LD E , 8] Z80:8cyc, R800:2cyc
00bb21: 1e 08

[BGMDRIVER_MIXER_SKIP2_CH0 :]
	label address: 0x00bb23

[	LD IX , PLAY_INFO_CH1] Z80:16cyc, R800:4cyc
00bb23: dd 21 ee bc

[	LD A , [ IX + INFO_EFF_FREQ_L ]] Z80:21cyc, R800:7cyc
00bb27: dd 7e 04

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb2a: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb2c: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb2d: d3 a1

[	LD A , [ IX + INFO_EFF_FREQ_H ]] Z80:21cyc, R800:7cyc
00bb2f: dd 7e 05

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb32: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb34: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb35: d3 a1

[	AND A , 0X80] Z80:8cyc, R800:2cyc
00bb37: e6 80

[	JR NZ , BGMDRIVER_MIXER_SKIP1_CH1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bb39: 20 02

[	INC B] Z80:5cyc, R800:1cyc
00bb3b: 04

[	INC B] Z80:5cyc, R800:1cyc
00bb3c: 04

[BGMDRIVER_MIXER_SKIP1_CH1 :]
	label address: 0x00bb3d

[	LD A , [ IX + INFO_NOISE_FREQ ]] Z80:21cyc, R800:7cyc
00bb3d: dd 7e 10

[	BIT 7 , A] Z80:10cyc, R800:2cyc
00bb40: cb 7f

[	JR Z , BGMDRIVER_MIXER_SKIP2_CH1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bb42: 28 09

[	AND A , 31] Z80:8cyc, R800:2cyc
00bb44: e6 1f

[	LD [ PLAY_NOISE_FREQ ] , A] Z80:14cyc, R800:6cyc
00bb46: 32 cb bc

[	LD A , 16] Z80:8cyc, R800:2cyc
00bb49: 3e 10

[	ADD A , E] Z80:5cyc, R800:1cyc
00bb4b: 83

[	LD E , A] Z80:5cyc, R800:2cyc
00bb4c: 5f

[BGMDRIVER_MIXER_SKIP2_CH1 :]
	label address: 0x00bb4d

[	LD A , [ PLAY_SOUND_EFFECT_ACTIVE ]] Z80:14cyc, R800:6cyc
00bb4d: 3a c2 bc

[	OR A , A] Z80:5cyc, R800:1cyc
00bb50: b7

[	JR Z , BGMDRIVER_MIXER_TONE_CH2] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bb51: 28 2d

[	LD HL , [ PLAY_SOUND_EFFECT_FREQ ]] Z80:17cyc, R800:7cyc
00bb53: 2a c4 bc

[	LD A , L] Z80:5cyc, R800:2cyc
00bb56: 7d

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb57: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb59: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb5a: d3 a1

[	LD A , H] Z80:5cyc, R800:2cyc
00bb5c: 7c

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb5d: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb5f: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb60: d3 a1

[	AND A , 0X80] Z80:8cyc, R800:2cyc
00bb62: e6 80

[	JR NZ , BGMDRIVER_MIXER_SKIP0_CH2] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bb64: 20 04

[	INC B] Z80:5cyc, R800:1cyc
00bb66: 04

[	INC B] Z80:5cyc, R800:1cyc
00bb67: 04

[	INC B] Z80:5cyc, R800:1cyc
00bb68: 04

[	INC B] Z80:5cyc, R800:1cyc
00bb69: 04

[BGMDRIVER_MIXER_SKIP0_CH2 :]
	label address: 0x00bb6a

[	LD A , [ PLAY_SOUND_EFFECT_NOISE_FREQ ]] Z80:14cyc, R800:6cyc
00bb6a: 3a c6 bc

[	BIT 7 , A] Z80:10cyc, R800:2cyc
00bb6d: cb 7f

[	JP Z , BGMDRIVER_MIXER_NOISE_FREQ] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00bb6f: ca ac bb

[	AND A , 0X3F] Z80:8cyc, R800:2cyc
00bb72: e6 3f

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb74: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb76: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb77: d3 a1

[	LD A , 32] Z80:8cyc, R800:2cyc
00bb79: 3e 20

[	ADD A , E] Z80:5cyc, R800:1cyc
00bb7b: 83

[	LD E , A] Z80:5cyc, R800:2cyc
00bb7c: 5f

[	JP BGMDRIVER_MIXER_MIX] Z80:11cyc, R800:5cyc
00bb7d: c3 b4 bb

[BGMDRIVER_MIXER_TONE_CH2 :]
	label address: 0x00bb80

[	LD IX , PLAY_INFO_CH2] Z80:16cyc, R800:4cyc
00bb80: dd 21 01 bd

[	LD A , [ IX + INFO_EFF_FREQ_L ]] Z80:21cyc, R800:7cyc
00bb84: dd 7e 04

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb87: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb89: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb8a: d3 a1

[	LD A , [ IX + INFO_EFF_FREQ_H ]] Z80:21cyc, R800:7cyc
00bb8c: dd 7e 05

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bb8f: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bb91: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bb92: d3 a1

[	AND A , 0X80] Z80:8cyc, R800:2cyc
00bb94: e6 80

[	JR NZ , BGMDRIVER_MIXER_SKIP1_CH2] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bb96: 20 04

[	INC B] Z80:5cyc, R800:1cyc
00bb98: 04

[	INC B] Z80:5cyc, R800:1cyc
00bb99: 04

[	INC B] Z80:5cyc, R800:1cyc
00bb9a: 04

[	INC B] Z80:5cyc, R800:1cyc
00bb9b: 04

[BGMDRIVER_MIXER_SKIP1_CH2 :]
	label address: 0x00bb9c

[	LD A , [ IX + INFO_NOISE_FREQ ]] Z80:21cyc, R800:7cyc
00bb9c: dd 7e 10

[	BIT 7 , A] Z80:10cyc, R800:2cyc
00bb9f: cb 7f

[	JR Z , BGMDRIVER_MIXER_SKIP2_CH2] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bba1: 28 09

[	AND A , 31] Z80:8cyc, R800:2cyc
00bba3: e6 1f

[	LD [ PLAY_NOISE_FREQ ] , A] Z80:14cyc, R800:6cyc
00bba5: 32 cb bc

[	LD A , 32] Z80:8cyc, R800:2cyc
00bba8: 3e 20

[	ADD A , E] Z80:5cyc, R800:1cyc
00bbaa: 83

[	LD E , A] Z80:5cyc, R800:2cyc
00bbab: 5f

[BGMDRIVER_MIXER_SKIP2_CH2 :]
	label address: 0x00bbac

[BGMDRIVER_MIXER_NOISE_FREQ :]
	label address: 0x00bbac

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bbac: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bbae: 14

[	LD A , [ PLAY_NOISE_FREQ ]] Z80:14cyc, R800:6cyc
00bbaf: 3a cb bc

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bbb2: d3 a1

[BGMDRIVER_MIXER_MIX :]
	label address: 0x00bbb4

[	LD HL , PLAY_MASTER_VOLUME] Z80:11cyc, R800:3cyc
00bbb4: 21 d0 bc

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bbb7: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bbb9: 14

[	LD A , E] Z80:5cyc, R800:2cyc
00bbba: 7b

[	OR A , B] Z80:5cyc, R800:1cyc
00bbbb: b0

[	OR A , 0X80] Z80:8cyc, R800:2cyc
00bbbc: f6 80

[	XOR A , 0X3F] Z80:8cyc, R800:2cyc
00bbbe: ee 3f

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bbc0: d3 a1

[	LD IX , PLAY_INFO_CH0] Z80:16cyc, R800:4cyc
00bbc2: dd 21 db bc

[	LD A , [ IX + INFO_EFF_VOL ]] Z80:21cyc, R800:7cyc
00bbc6: dd 7e 08

[	SUB A , [ HL ]] Z80:8cyc, R800:4cyc
00bbc9: 96

[	JP NC , BGMDRIVER_MIXER_MIX_SKIP1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00bbca: d2 ce bb

[	XOR A , A] Z80:5cyc, R800:1cyc
00bbcd: af

[BGMDRIVER_MIXER_MIX_SKIP1 :]
	label address: 0x00bbce

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bbce: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bbd0: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bbd1: d3 a1

[	LD IX , PLAY_INFO_CH1] Z80:16cyc, R800:4cyc
00bbd3: dd 21 ee bc

[	LD A , [ IX + INFO_EFF_VOL ]] Z80:21cyc, R800:7cyc
00bbd7: dd 7e 08

[	SUB A , [ HL ]] Z80:8cyc, R800:4cyc
00bbda: 96

[	JP NC , BGMDRIVER_MIXER_MIX_SKIP2] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00bbdb: d2 df bb

[	XOR A , A] Z80:5cyc, R800:1cyc
00bbde: af

[BGMDRIVER_MIXER_MIX_SKIP2 :]
	label address: 0x00bbdf

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bbdf: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bbe1: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bbe2: d3 a1

[	LD A , [ PLAY_SOUND_EFFECT_ACTIVE ]] Z80:14cyc, R800:6cyc
00bbe4: 3a c2 bc

[	OR A , A] Z80:5cyc, R800:1cyc
00bbe7: b7

[	JR Z , BGMDRIVER_MIXER_VOLUME_CH2] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00bbe8: 28 06

[	LD A , [ PLAY_SOUND_EFFECT_VOLUME ]] Z80:14cyc, R800:6cyc
00bbea: 3a c7 bc

[	JP BGMDRIVER_MIXER_VOLUME_CH2_SKIP1] Z80:11cyc, R800:5cyc
00bbed: c3 fc bb

[BGMDRIVER_MIXER_VOLUME_CH2 :]
	label address: 0x00bbf0

[	LD IX , PLAY_INFO_CH2] Z80:16cyc, R800:4cyc
00bbf0: dd 21 01 bd

[	LD A , [ IX + INFO_EFF_VOL ]] Z80:21cyc, R800:7cyc
00bbf4: dd 7e 08

[	SUB A , [ HL ]] Z80:8cyc, R800:4cyc
00bbf7: 96

[	JP NC , BGMDRIVER_MIXER_MIX_SKIP3] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00bbf8: d2 fc bb

[	XOR A , A] Z80:5cyc, R800:1cyc
00bbfb: af

[BGMDRIVER_MIXER_MIX_SKIP3 :]
	label address: 0x00bbfc

[BGMDRIVER_MIXER_VOLUME_CH2_SKIP1 :]
	label address: 0x00bbfc

[	OUT [ C ] , D] Z80:14cyc, R800:10 or 9cyc
00bbfc: ed 51

[	INC D] Z80:5cyc, R800:1cyc
00bbfe: 14

[	OUT [ PSG_REG_WRT ] , A] Z80:12cyc, R800:10 or 9cyc
00bbff: d3 a1

[	RET] Z80:11cyc, R800:5cyc
00bc01: c9

[FREQ_DATA :]
	label address: 0x00bc02

[	DW 3420 , 3228 , 3047 , 2876 , 2714 , 2562 , 2418 , 2282 , 2154 , 2033 , 1919 , 1811]
00bc02: 5c 0d 9c 0c e7 0b 3c 0b
00bc0a: 9a 0a 02 0a 72 09 ea 08
00bc12: 6a 08 f1 07 7f 07 13 07

[	DW 1710 , 1614 , 1523 , 1438 , 1357 , 1281 , 1209 , 1141 , 1077 , 1016 , 959 , 905]
00bc1a: ae 06 4e 06 f3 05 9e 05
00bc22: 4d 05 01 05 b9 04 75 04
00bc2a: 35 04 f8 03 bf 03 89 03

[	DW 855 , 807 , 761 , 719 , 678 , 640 , 604 , 570 , 538 , 508 , 479 , 452]
00bc32: 57 03 27 03 f9 02 cf 02
00bc3a: a6 02 80 02 5c 02 3a 02
00bc42: 1a 02 fc 01 df 01 c4 01

[	DW 427 , 403 , 380 , 359 , 339 , 320 , 302 , 285 , 269 , 254 , 239 , 226]
00bc4a: ab 01 93 01 7c 01 67 01
00bc52: 53 01 40 01 2e 01 1d 01
00bc5a: 0d 01 fe 00 ef 00 e2 00

[	DW 213 , 201 , 190 , 179 , 169 , 160 , 151 , 142 , 134 , 127 , 119 , 113]
00bc62: d5 00 c9 00 be 00 b3 00
00bc6a: a9 00 a0 00 97 00 8e 00
00bc72: 86 00 7f 00 77 00 71 00

[	DW 106 , 100 , 95 , 89 , 84 , 80 , 75 , 71 , 67 , 63 , 59 , 56]
00bc7a: 6a 00 64 00 5f 00 59 00
00bc82: 54 00 50 00 4b 00 47 00
00bc8a: 43 00 3f 00 3b 00 38 00

[	DW 53 , 50 , 47 , 44 , 42 , 40 , 37 , 35 , 33 , 31 , 29 , 28]
00bc92: 35 00 32 00 2f 00 2c 00
00bc9a: 2a 00 28 00 25 00 23 00
00bca2: 21 00 1f 00 1d 00 1c 00

[	DW 26 , 25 , 23 , 22 , 21 , 20 , 18 , 17 , 16 , 15 , 14 , 14]
00bcaa: 1a 00 19 00 17 00 16 00
00bcb2: 15 00 14 00 12 00 11 00
00bcba: 10 00 0f 00 0e 00 0e 00

[PLAY_SOUND_EFFECT_ACTIVE :]
	label address: 0x00bcc2

[	DB 0]
00bcc2: 00

[PLAY_SOUND_EFFECT_WAIT_COUNT :]
	label address: 0x00bcc3

[	DB 0]
00bcc3: 00

[PLAY_SOUND_EFFECT_FREQ :]
	label address: 0x00bcc4

[	DW 0]
00bcc4: 00 00

[PLAY_SOUND_EFFECT_NOISE_FREQ :]
	label address: 0x00bcc6

[	DB 0]
00bcc6: 00

[PLAY_SOUND_EFFECT_VOLUME :]
	label address: 0x00bcc7

[	DB 0]
00bcc7: 00

[PLAY_SOUND_EFFECT_ADR :]
	label address: 0x00bcc8

[	DW 0]
00bcc8: 00 00

[PLAY_SOUND_EFFECT_PRIORITY :]
	label address: 0x00bcca

[	DB 255]
00bcca: ff

[PLAY_NOISE_FREQ :]
	label address: 0x00bccb

[	DB 0]
00bccb: 00

[PLAY_BGM_DATA_ADR :]
	label address: 0x00bccc

[	DW 0]
00bccc: 00 00

[PLAY_MASTER_VOLUME_WAIT :]
	label address: 0x00bcce

[	DB 0]
00bcce: 00

[PLAY_MASTER_VOLUME_SPEED :]
	label address: 0x00bccf

[	DB 0]
00bccf: 00

[PLAY_MASTER_VOLUME :]
	label address: 0x00bcd0

[	DB 0]
00bcd0: 00

[PLAY_DRUM_FONT1 :]
	label address: 0x00bcd1

[	DW 0]
00bcd1: 00 00

[PLAY_DRUM_FONT2 :]
	label address: 0x00bcd3

[	DW 0]
00bcd3: 00 00

[PLAY_DRUM_FONT3 :]
	label address: 0x00bcd5

[	DW 0]
00bcd5: 00 00

[PLAY_DRUM_FONT4 :]
	label address: 0x00bcd7

[	DW 0]
00bcd7: 00 00

[PLAY_DRUM_FONT5 :]
	label address: 0x00bcd9

[	DW 0]
00bcd9: 00 00

[PLAY_INFO_CH0 :]
	label address: 0x00bcdb

[REPEAT I , INFO_SIZE]
	Scope path: @REPEAT34:

	repeat begin
[	DB 0]
00bcdb: 00

[	DB 0]
00bcdc: 00

[	DB 0]
00bcdd: 00

[	DB 0]
00bcde: 00

[	DB 0]
00bcdf: 00

[	DB 0]
00bce0: 00

[	DB 0]
00bce1: 00

[	DB 0]
00bce2: 00

[	DB 0]
00bce3: 00

[	DB 0]
00bce4: 00

[	DB 0]
00bce5: 00

[	DB 0]
00bce6: 00

[	DB 0]
00bce7: 00

[	DB 0]
00bce8: 00

[	DB 0]
00bce9: 00

[	DB 0]
00bcea: 00

[	DB 0]
00bceb: 00

[	DB 0]
00bcec: 00

[	DB 0]
00bced: 00

	repeat end
	Scope path: 



[PLAY_INFO_CH1 :]
	label address: 0x00bcee

[REPEAT I , INFO_SIZE]
	Scope path: @REPEAT35:

	repeat begin
[	DB 0]
00bcee: 00

[	DB 0]
00bcef: 00

[	DB 0]
00bcf0: 00

[	DB 0]
00bcf1: 00

[	DB 0]
00bcf2: 00

[	DB 0]
00bcf3: 00

[	DB 0]
00bcf4: 00

[	DB 0]
00bcf5: 00

[	DB 0]
00bcf6: 00

[	DB 0]
00bcf7: 00

[	DB 0]
00bcf8: 00

[	DB 0]
00bcf9: 00

[	DB 0]
00bcfa: 00

[	DB 0]
00bcfb: 00

[	DB 0]
00bcfc: 00

[	DB 0]
00bcfd: 00

[	DB 0]
00bcfe: 00

[	DB 0]
00bcff: 00

[	DB 0]
00bd00: 00

	repeat end
	Scope path: 



[PLAY_INFO_CH2 :]
	label address: 0x00bd01

[REPEAT I , INFO_SIZE]
	Scope path: @REPEAT36:

	repeat begin
[	DB 0]
00bd01: 00

[	DB 0]
00bd02: 00

[	DB 0]
00bd03: 00

[	DB 0]
00bd04: 00

[	DB 0]
00bd05: 00

[	DB 0]
00bd06: 00

[	DB 0]
00bd07: 00

[	DB 0]
00bd08: 00

[	DB 0]
00bd09: 00

[	DB 0]
00bd0a: 00

[	DB 0]
00bd0b: 00

[	DB 0]
00bd0c: 00

[	DB 0]
00bd0d: 00

[	DB 0]
00bd0e: 00

[	DB 0]
00bd0f: 00

[	DB 0]
00bd10: 00

[	DB 0]
00bd11: 00

[	DB 0]
00bd12: 00

[	DB 0]
00bd13: 00

	repeat end
	Scope path: 



[	INCLUDE ".//bgmdriver.asm"] end

[BGM_DATA ::]
	global label address: 0x00bd14

[	INCLUDE ".//bgm.asm"] begin
[	DB 0X06 , 0X00 , 0X98 , 0X00 , 0XF2 , 0X00 , 0X67 , 0X0F , 0X68 , 0XF3 , 0X00 , 0X35 , 0X18 , 0X66 , 0X0F , 0X30]
00bd14: 06 00 98 00 f2 00 67 0f
00bd1c: 68 f3 00 35 18 66 0f 30

[	DB 0X08 , 0X35 , 0X07 , 0X39 , 0X07 , 0X3C , 0X08 , 0X39 , 0X07 , 0X66 , 0X07 , 0X35 , 0X08 , 0X37 , 0X07 , 0X66]
00bd24: 08 35 07 39 07 3c 08 39
00bd2c: 07 66 07 35 08 37 07 66

[	DB 0X07 , 0X37 , 0X08 , 0X37 , 0X07 , 0X66 , 0X07 , 0X32 , 0X08 , 0X32 , 0X07 , 0X66 , 0X07 , 0X37 , 0X08 , 0X35]
00bd34: 07 37 08 37 07 66 07 32
00bd3c: 08 32 07 66 07 37 08 35

[	DB 0X07 , 0X66 , 0X07 , 0X34 , 0X08 , 0X35 , 0X18 , 0X66 , 0X0F , 0X30 , 0X08 , 0X35 , 0X07 , 0X39 , 0X07 , 0X3C]
00bd44: 07 66 07 34 08 35 18 66
00bd4c: 0f 30 08 35 07 39 07 3c

[	DB 0X08 , 0X39 , 0X07 , 0X66 , 0X07 , 0X35 , 0X08 , 0X35 , 0X07 , 0X66 , 0X07 , 0X35 , 0X08 , 0X35 , 0X07 , 0X66]
00bd54: 08 39 07 66 07 35 08 35
00bd5c: 07 66 07 35 08 35 07 66

[	DB 0X07 , 0X35 , 0X08 , 0X35 , 0X31 , 0X30 , 0X05 , 0X3C , 0X05 , 0X3B , 0X05 , 0X3C , 0X06 , 0X40 , 0X05 , 0X3C]
00bd64: 07 35 08 35 31 30 05 3c
00bd6c: 05 3b 05 3c 06 40 05 3c

[	DB 0X05 , 0X3B , 0X05 , 0X3C , 0X06 , 0X30 , 0X05 , 0X3C , 0X05 , 0X3A , 0X05 , 0X3C , 0X06 , 0X40 , 0X05 , 0X3C]
00bd74: 05 3b 05 3c 06 30 05 3c
00bd7c: 05 3a 05 3c 06 40 05 3c

[	DB 0X05 , 0X3B , 0X05 , 0X3C , 0X06 , 0X30 , 0X05 , 0X3C , 0X05 , 0X39 , 0X05 , 0X3C , 0X06 , 0X40 , 0X05 , 0X3C]
00bd84: 05 3b 05 3c 06 30 05 3c
00bd8c: 05 39 05 3c 06 40 05 3c

[	DB 0X05 , 0X39 , 0X05 , 0X3C , 0X06 , 0X30 , 0X05 , 0X3C , 0X05 , 0X38 , 0X05 , 0X3C , 0X06 , 0X40 , 0X05 , 0X3C]
00bd94: 05 39 05 3c 06 30 05 3c
00bd9c: 05 38 05 3c 06 40 05 3c

[	DB 0X05 , 0X39 , 0X05 , 0X3C , 0X06 , 0X69 , 0X55 , 0X00 , 0X67 , 0X0F , 0X68 , 0XF3 , 0X00 , 0X39 , 0X18 , 0X66]
00bda4: 05 39 05 3c 06 69 55 00
00bdac: 67 0f 68 f3 00 39 18 66

[	DB 0X0F , 0X39 , 0X08 , 0X39 , 0X07 , 0X3C , 0X07 , 0X35 , 0X08 , 0X3C , 0X07 , 0X66 , 0X07 , 0X39 , 0X08 , 0X3A]
00bdb4: 0f 39 08 39 07 3c 07 35
00bdbc: 08 3c 07 66 07 39 08 3a

[	DB 0X07 , 0X66 , 0X07 , 0X3A , 0X08 , 0X3A , 0X07 , 0X66 , 0X07 , 0X3A , 0X08 , 0X3A , 0X07 , 0X66 , 0X07 , 0X3A]
00bdc4: 07 66 07 3a 08 3a 07 66
00bdcc: 07 3a 08 3a 07 66 07 3a

[	DB 0X08 , 0X3A , 0X07 , 0X66 , 0X07 , 0X3A , 0X08 , 0X39 , 0X18 , 0X66 , 0X0F , 0X39 , 0X08 , 0X39 , 0X07 , 0X39]
00bdd4: 08 3a 07 66 07 3a 08 39
00bddc: 18 66 0f 39 08 39 07 39

[	DB 0X07 , 0X39 , 0X08 , 0X39 , 0X07 , 0X66 , 0X07 , 0X39 , 0X08 , 0X3A , 0X07 , 0X66 , 0X07 , 0X3A , 0X08 , 0X3A]
00bde4: 07 39 08 39 07 66 07 39
00bdec: 08 3a 07 66 07 3a 08 3a

[	DB 0X07 , 0X66 , 0X07 , 0X39 , 0X08 , 0X39 , 0X31 , 0X30 , 0X31 , 0X30 , 0X31 , 0X30 , 0X31 , 0X30 , 0X31 , 0X69]
00bdf4: 07 66 07 39 08 39 31 30
00bdfc: 31 30 31 30 31 30 31 69

[	DB 0XE7 , 0X00 , 0X6A]
00be04: e7 00 6a

[	DB 0X00 , 0X01 , 0X02 , 0X02 , 0X02 , 0X00 , 0XFE , 0XFD , 0XFD , 0XFD , 0XFE , 0X00 , 0X02 , 0X02 , 0X02 , 0X01]
00be07: 00 01 02 02 02 00 fe fd
00be0f: fd fd fe 00 02 02 02 01

[	DB 0X00 , 0XFE , 0XFD , 0XFD , 0XFD , 0XFF , 0X01 , 0X02 , 0X03 , 0X02 , 0X01 , 0XFF , 0XFD , 0XFD , 0XFD , 0XFE]
00be17: 00 fe fd fd fd ff 01 02
00be1f: 03 02 01 ff fd fd fd fe

[	DB 0XFF , 0X02 , 0XE0 , 0X01 , 0X1E , 0X14 , 0X00 , 0X00 , 0X00]
00be27: ff 02 e0 01 1e 14 00 00
00be2f: 00

[	INCLUDE ".//bgm.asm"] end

[VSCROLL ::]
	global label address: 0x00be30

[	DB 0]
00be30: 00

[VSCROLL_SP ::]
	global label address: 0x00be31

[VSCROLL_NEXT ::]
	global label address: 0x00be31

[	DB 255]
00be31: ff

[DRAW_PAGE ::]
	global label address: 0x00be32

[	DB 2]
00be32: 02

[VSYNC_FLAG ::]
	global label address: 0x00be33

[	DW 0]
00be33: 00 00

[END_ADDRESS ::]
	global label address: 0x00be35

<< label >>
@REPEAT34:I 18 ( 0x12 )
@REPEAT35:I 18 ( 0x12 )
@REPEAT36:I 18 ( 0x12 )
ANDO_PART1_SPRITE_COLOR1 46501 ( 0xb5a5 )
ANDO_PART1_SPRITE_COLOR2 46517 ( 0xb5b5 )
ANDO_PART1_SPRITE_PATTERN1 45893 ( 0xb345 )
ANDO_PART1_SPRITE_PATTERN2 45925 ( 0xb365 )
ANDO_PART2_SPRITE_COLOR1 46533 ( 0xb5c5 )
ANDO_PART2_SPRITE_COLOR2 46549 ( 0xb5d5 )
ANDO_PART2_SPRITE_PATTERN1 45957 ( 0xb385 )
ANDO_PART2_SPRITE_PATTERN2 45989 ( 0xb3a5 )
ANDO_PART3_SPRITE_COLOR1 46565 ( 0xb5e5 )
ANDO_PART3_SPRITE_COLOR2 46581 ( 0xb5f5 )
ANDO_PART3_SPRITE_PATTERN1 46021 ( 0xb3c5 )
ANDO_PART3_SPRITE_PATTERN2 46053 ( 0xb3e5 )
ANDO_PART4_SPRITE_COLOR1 46597 ( 0xb605 )
ANDO_PART4_SPRITE_COLOR2 46613 ( 0xb615 )
ANDO_PART4_SPRITE_PATTERN1 46085 ( 0xb405 )
ANDO_PART4_SPRITE_PATTERN2 46117 ( 0xb425 )
ANDO_PART5_SPRITE_COLOR1 46629 ( 0xb625 )
ANDO_PART5_SPRITE_COLOR2 46645 ( 0xb635 )
ANDO_PART5_SPRITE_PATTERN1 46149 ( 0xb445 )
ANDO_PART5_SPRITE_PATTERN2 46181 ( 0xb465 )
ANDO_PART6_SPRITE_COLOR1 46661 ( 0xb645 )
ANDO_PART6_SPRITE_COLOR2 46677 ( 0xb655 )
ANDO_PART6_SPRITE_PATTERN1 46213 ( 0xb485 )
ANDO_PART6_SPRITE_PATTERN2 46245 ( 0xb4a5 )
ANDO_PART7_SPRITE_COLOR1 46693 ( 0xb665 )
ANDO_PART7_SPRITE_COLOR2 46709 ( 0xb675 )
ANDO_PART7_SPRITE_PATTERN1 46277 ( 0xb4c5 )
ANDO_PART7_SPRITE_PATTERN2 46309 ( 0xb4e5 )
ANDO_PART8_SPRITE_COLOR1 46725 ( 0xb685 )
ANDO_PART8_SPRITE_COLOR2 46741 ( 0xb695 )
ANDO_PART8_SPRITE_PATTERN1 46341 ( 0xb505 )
ANDO_PART8_SPRITE_PATTERN2 46373 ( 0xb525 )
ANDO_SHOT_SPRITE_COLOR1 46757 ( 0xb6a5 )
ANDO_SHOT_SPRITE_PATTERN 46405 ( 0xb545 )
BACKGROUND 43866 ( 0xab5a )
BACKGROUND:BACKGROUND_INITIALIZE_LOOP_X 43769 ( 0xaaf9 )
BACKGROUND:BACKGROUND_INITIALIZE_LOOP_Y 43752 ( 0xaae8 )
BACKGROUND:BACKGROUND_PARTS_INDEX 44071 ( 0xac27 )
BACKGROUND:BG_LOOP 43853 ( 0xab4d )
BACKGROUND:BI_SKIP0 43781 ( 0xab05 )
BACKGROUND:GET_MAP 43983 ( 0xabcf )
BACKGROUND:GET_MAP_SKIP 44023 ( 0xabf7 )
BACKGROUND:MAP_ADDRESS 44069 ( 0xac25 )
BACKGROUND:PARTS 44104 ( 0xac48 )
BACKGROUND:PARTS_DEST_PAGE 44111 ( 0xac4f )
BACKGROUND:PARTS_DX 44108 ( 0xac4c )
BACKGROUND:PARTS_DY 44110 ( 0xac4e )
BACKGROUND:PARTS_SX 44104 ( 0xac48 )
BACKGROUND:PARTS_SY 44106 ( 0xac4a )
BACKGROUND:PUT_PARTS 43873 ( 0xab61 )
BACKGROUND:SET_SX_AND_SY 44051 ( 0xac13 )
BACKGROUND:SKIP0 43881 ( 0xab69 )
BACKGROUND_INITIALIZE 43734 ( 0xaad6 )
BACKGROUND_PARTS 44072 ( 0xac28 )
BAKCLR 62442 ( 0xf3ea )
BASE_SLOT 168 ( 0xa8 )
BDOS_FUNC_ABS_SECTOR_READ 47 ( 0x2f )
BDOS_FUNC_ABS_SECTOR_WRITE 48 ( 0x30 )
BDOS_FUNC_ALLOC_SECTOR_BUFFER 105 ( 0x69 )
BDOS_FUNC_BUF_LINE_INPUT 10 ( 0xa )
BDOS_FUNC_CON_STATUS 11 ( 0xb )
BDOS_FUNC_DEV_GETC 3 ( 0x3 )
BDOS_FUNC_DEV_PUTC 4 ( 0x4 )
BDOS_FUNC_DIRECT_CON_GETC 7 ( 0x7 )
BDOS_FUNC_DIRECT_CON_GETC_WOE 8 ( 0x8 )
BDOS_FUNC_DIRECT_CON_IO 6 ( 0x6 )
BDOS_FUNC_DISK_CHECK_STATUS 110 ( 0x6e )
BDOS_FUNC_DISK_RESET 13 ( 0xd )
BDOS_FUNC_FCB_CLOSE_FILE 16 ( 0x10 )
BDOS_FUNC_FCB_CREATE_FILE 22 ( 0x16 )
BDOS_FUNC_FCB_DELETE_FILE 19 ( 0x13 )
BDOS_FUNC_FCB_FIND_1ST 17 ( 0x11 )
BDOS_FUNC_FCB_FIND_NEXT 18 ( 0x12 )
BDOS_FUNC_FCB_OPEN_FILE 15 ( 0xf )
BDOS_FUNC_FCB_RENAME_FILE 23 ( 0x17 )
BDOS_FUNC_FCB_SEQ_READ 20 ( 0x14 )
BDOS_FUNC_FCB_SEQ_WRITE 21 ( 0x15 )
BDOS_FUNC_FILE_HANDLE_CLOSE 69 ( 0x45 )
BDOS_FUNC_FILE_HANDLE_CREATE 68 ( 0x44 )
BDOS_FUNC_FILE_HANDLE_DUPLICATE 71 ( 0x47 )
BDOS_FUNC_FILE_HANDLE_ENSURE 70 ( 0x46 )
BDOS_FUNC_FILE_HANDLE_OPEN 67 ( 0x43 )
BDOS_FUNC_FILE_HANDLE_READ 72 ( 0x48 )
BDOS_FUNC_FILE_HANDLE_TEST 76 ( 0x4c )
BDOS_FUNC_FILE_HANDLE_WRITE 73 ( 0x49 )
BDOS_FUNC_FIND_1ST 64 ( 0x40 )
BDOS_FUNC_FIND_ENV_ITEM 109 ( 0x6d )
BDOS_FUNC_FIND_NEW 66 ( 0x42 )
BDOS_FUNC_FIND_NEXT 65 ( 0x41 )
BDOS_FUNC_FORMAT_DISK 103 ( 0x67 )
BDOS_FUNC_GETC 1 ( 0x1 )
BDOS_FUNC_GET_ALLOC_INFO 27 ( 0x1b )
BDOS_FUNC_GET_CURRENT_DRIVE 25 ( 0x19 )
BDOS_FUNC_GET_DATE 42 ( 0x2a )
BDOS_FUNC_GET_DISK_PARAM 49 ( 0x31 )
BDOS_FUNC_GET_ENV_ITEM 107 ( 0x6b )
BDOS_FUNC_GET_FILE_SIZE 35 ( 0x23 )
BDOS_FUNC_GET_LOGIN_VECTOR 24 ( 0x18 )
BDOS_FUNC_GET_MSXDOS_VERSION 111 ( 0x6f )
BDOS_FUNC_GET_TIME 44 ( 0x2c )
BDOS_FUNC_IO_CTRL 75 ( 0x4b )
BDOS_FUNC_LOGICAL_DRV_ASSIGN 106 ( 0x6a )
BDOS_FUNC_MOVE_FILE_HANDLE_PTR 74 ( 0x4a )
BDOS_FUNC_PRT_PUTC 5 ( 0x5 )
BDOS_FUNC_PUTC 2 ( 0x2 )
BDOS_FUNC_RAM_DISK 104 ( 0x68 )
BDOS_FUNC_REDIRECTION_STATUS 112 ( 0x70 )
BDOS_FUNC_RND_BLOCK_READ 39 ( 0x27 )
BDOS_FUNC_RND_BLOCK_WRITE 38 ( 0x26 )
BDOS_FUNC_RND_READ 33 ( 0x21 )
BDOS_FUNC_RND_WRITE 34 ( 0x22 )
BDOS_FUNC_RND_WRITE_ZERO_FILL 40 ( 0x28 )
BDOS_FUNC_SELECT_DISK 14 ( 0xe )
BDOS_FUNC_SET_DATE 43 ( 0x2b )
BDOS_FUNC_SET_DTA 26 ( 0x1a )
BDOS_FUNC_SET_ENV_ITEM 108 ( 0x6c )
BDOS_FUNC_SET_RND_RECORD 36 ( 0x24 )
BDOS_FUNC_SET_TIME 45 ( 0x2d )
BDOS_FUNC_SET_VERIFY_FLAG 46 ( 0x2e )
BDOS_FUNC_STR_OUT 9 ( 0x9 )
BDOS_FUNC_SYSTEM_RESET 0 ( 0x0 )
BDOS_FUNC_VERSION 12 ( 0xc )
BDOS_ON_DISKBASIC 62333 ( 0xf37d )
BDOS_ON_MSXDOS 5 ( 0x5 )
BDRCLR 62443 ( 0xf3eb )
BGMDRIVER_CALC_EFF_VOL 47743 ( 0xba7f )
BGMDRIVER_CHECK_NEXT_DATA 47054 ( 0xb7ce )
BGMDRIVER_CHECK_PLAYING 46885 ( 0xb725 )
BGMDRIVER_DRUM1_FONT 47339 ( 0xb8eb )
BGMDRIVER_DRUM2_FONT 47372 ( 0xb90c )
BGMDRIVER_DRUM3_FONT 47405 ( 0xb92d )
BGMDRIVER_DRUM4_FONT 47438 ( 0xb94e )
BGMDRIVER_DRUM5_FONT 47471 ( 0xb96f )
BGMDRIVER_DRUM_KEYON 47188 ( 0xb854 )
BGMDRIVER_ENVELOPE_AR 47698 ( 0xba52 )
BGMDRIVER_ENVELOPE_DR 47672 ( 0xba38 )
BGMDRIVER_ENVELOPE_END 47722 ( 0xba6a )
BGMDRIVER_ENVELOPE_RR 47624 ( 0xba08 )
BGMDRIVER_ENVELOPE_SR 47648 ( 0xba20 )
BGMDRIVER_FADEOUT 46918 ( 0xb746 )
BGMDRIVER_GET_WAIT_TIME 47747 ( 0xba83 )
BGMDRIVER_GET_WAIT_TIME_EXIT 47762 ( 0xba92 )
BGMDRIVER_GET_WAIT_TIME_LOOP 47750 ( 0xba86 )
BGMDRIVER_GET_WAIT_TIME_SKIP 47768 ( 0xba98 )
BGMDRIVER_INITIALIZE 46789 ( 0xb6c5 )
BGMDRIVER_INIT_PLAY_INFO 46995 ( 0xb793 )
BGMDRIVER_INTERRUPT_HANDLER 47006 ( 0xb79e )
BGMDRIVER_JUMP 47504 ( 0xb990 )
BGMDRIVER_KEYOFF 47233 ( 0xb881 )
BGMDRIVER_KEYON 47116 ( 0xb80c )
BGMDRIVER_MIXER 47860 ( 0xbaf4 )
BGMDRIVER_MIXER_MIX 48052 ( 0xbbb4 )
BGMDRIVER_MIXER_MIX_SKIP1 48078 ( 0xbbce )
BGMDRIVER_MIXER_MIX_SKIP2 48095 ( 0xbbdf )
BGMDRIVER_MIXER_MIX_SKIP3 48124 ( 0xbbfc )
BGMDRIVER_MIXER_NOISE_FREQ 48044 ( 0xbbac )
BGMDRIVER_MIXER_SKIP0_CH2 47978 ( 0xbb6a )
BGMDRIVER_MIXER_SKIP1_CH0 47893 ( 0xbb15 )
BGMDRIVER_MIXER_SKIP1_CH1 47933 ( 0xbb3d )
BGMDRIVER_MIXER_SKIP1_CH2 48028 ( 0xbb9c )
BGMDRIVER_MIXER_SKIP2_CH0 47907 ( 0xbb23 )
BGMDRIVER_MIXER_SKIP2_CH1 47949 ( 0xbb4d )
BGMDRIVER_MIXER_SKIP2_CH2 48044 ( 0xbbac )
BGMDRIVER_MIXER_TONE_CH2 48000 ( 0xbb80 )
BGMDRIVER_MIXER_VOLUME_CH2 48112 ( 0xbbf0 )
BGMDRIVER_MIXER_VOLUME_CH2_SKIP1 48124 ( 0xbbfc )
BGMDRIVER_MUTE_PSG 46931 ( 0xb753 )
BGMDRIVER_MUTE_PSG_LOOP 46938 ( 0xb75a )
BGMDRIVER_PLAY 46803 ( 0xb6d3 )
BGMDRIVER_PLAY_CH 47027 ( 0xb7b3 )
BGMDRIVER_PLAY_END 47520 ( 0xb9a0 )
BGMDRIVER_PLAY_SOUND_EFFECT 46955 ( 0xb76b )
BGMDRIVER_PLAY_SOUND_EFFECT_SKIP 46992 ( 0xb790 )
BGMDRIVER_REST 47263 ( 0xb89f )
BGMDRIVER_SET_FREQ 47150 ( 0xb82e )
BGMDRIVER_SOUND_EFFECT 47769 ( 0xba99 )
BGMDRIVER_SOUND_EFFECT_END_PROC 47851 ( 0xbaeb )
BGMDRIVER_SOUND_EFFECT_FREQ_PROC 47812 ( 0xbac4 )
BGMDRIVER_SOUND_EFFECT_LOOP 47788 ( 0xbaac )
BGMDRIVER_SOUND_EFFECT_NOISE_FREQ_PROC 47834 ( 0xbada )
BGMDRIVER_SOUND_EFFECT_PROC 47785 ( 0xbaa9 )
BGMDRIVER_SOUND_EFFECT_VOLUME_PROC 47826 ( 0xbad2 )
BGMDRIVER_SOUND_EFFECT_WAIT_PROC 47842 ( 0xbae2 )
BGMDRIVER_SOUND_FONT 47303 ( 0xb8c7 )
BGMDRIVER_STOP 46864 ( 0xb710 )
BGMDRIVER_UPDATE_FREQ 47592 ( 0xb9e8 )
BGMDRIVER_UPDATE_VIBRATO 47539 ( 0xb9b3 )
BGMDRIVER_VIBRATO_ACTIVE 47558 ( 0xb9c6 )
BGMDRIVER_VIBRATO_ACTIVE_SKIP 47590 ( 0xb9e6 )
BGMDRIVER_VOLUME 47289 ( 0xb8b9 )
BGM_DATA 48404 ( 0xbd14 )
BGM_DRUM1_FONT 107 ( 0x6b )
BGM_DRUM2_FONT 108 ( 0x6c )
BGM_DRUM3_FONT 109 ( 0x6d )
BGM_DRUM4_FONT 110 ( 0x6e )
BGM_DRUM5_FONT 111 ( 0x6f )
BGM_DRUM_1 96 ( 0x60 )
BGM_DRUM_2 97 ( 0x61 )
BGM_DRUM_3 98 ( 0x62 )
BGM_DRUM_4 99 ( 0x63 )
BGM_DRUM_5 100 ( 0x64 )
BGM_JUMP 105 ( 0x69 )
BGM_KEYOFF 101 ( 0x65 )
BGM_PLAY_END 106 ( 0x6a )
BGM_REST 102 ( 0x66 )
BGM_SE_END 4 ( 0x4 )
BGM_SE_FREQ 0 ( 0x0 )
BGM_SE_NOISE_FREQ 2 ( 0x2 )
BGM_SE_VOL 1 ( 0x1 )
BGM_SE_WAIT 3 ( 0x3 )
BGM_SOUND_FONT 104 ( 0x68 )
BGM_TONE_A1 9 ( 0x9 )
BGM_TONE_A2 21 ( 0x15 )
BGM_TONE_A3 33 ( 0x21 )
BGM_TONE_A4 45 ( 0x2d )
BGM_TONE_A5 57 ( 0x39 )
BGM_TONE_A6 69 ( 0x45 )
BGM_TONE_A7 81 ( 0x51 )
BGM_TONE_A8 93 ( 0x5d )
BGM_TONE_AS1 10 ( 0xa )
BGM_TONE_AS2 22 ( 0x16 )
BGM_TONE_AS3 34 ( 0x22 )
BGM_TONE_AS4 46 ( 0x2e )
BGM_TONE_AS5 58 ( 0x3a )
BGM_TONE_AS6 70 ( 0x46 )
BGM_TONE_AS7 82 ( 0x52 )
BGM_TONE_AS8 94 ( 0x5e )
BGM_TONE_B1 11 ( 0xb )
BGM_TONE_B2 23 ( 0x17 )
BGM_TONE_B3 35 ( 0x23 )
BGM_TONE_B4 47 ( 0x2f )
BGM_TONE_B5 59 ( 0x3b )
BGM_TONE_B6 71 ( 0x47 )
BGM_TONE_B7 83 ( 0x53 )
BGM_TONE_B8 95 ( 0x5f )
BGM_TONE_C1 0 ( 0x0 )
BGM_TONE_C2 12 ( 0xc )
BGM_TONE_C3 24 ( 0x18 )
BGM_TONE_C4 36 ( 0x24 )
BGM_TONE_C5 48 ( 0x30 )
BGM_TONE_C6 60 ( 0x3c )
BGM_TONE_C7 72 ( 0x48 )
BGM_TONE_C8 84 ( 0x54 )
BGM_TONE_CS1 1 ( 0x1 )
BGM_TONE_CS2 13 ( 0xd )
BGM_TONE_CS3 25 ( 0x19 )
BGM_TONE_CS4 37 ( 0x25 )
BGM_TONE_CS5 49 ( 0x31 )
BGM_TONE_CS6 61 ( 0x3d )
BGM_TONE_CS7 73 ( 0x49 )
BGM_TONE_CS8 85 ( 0x55 )
BGM_TONE_D1 2 ( 0x2 )
BGM_TONE_D2 14 ( 0xe )
BGM_TONE_D3 26 ( 0x1a )
BGM_TONE_D4 38 ( 0x26 )
BGM_TONE_D5 50 ( 0x32 )
BGM_TONE_D6 62 ( 0x3e )
BGM_TONE_D7 74 ( 0x4a )
BGM_TONE_D8 86 ( 0x56 )
BGM_TONE_DS1 3 ( 0x3 )
BGM_TONE_DS2 15 ( 0xf )
BGM_TONE_DS3 27 ( 0x1b )
BGM_TONE_DS4 39 ( 0x27 )
BGM_TONE_DS5 51 ( 0x33 )
BGM_TONE_DS6 63 ( 0x3f )
BGM_TONE_DS7 75 ( 0x4b )
BGM_TONE_DS8 87 ( 0x57 )
BGM_TONE_E1 4 ( 0x4 )
BGM_TONE_E2 16 ( 0x10 )
BGM_TONE_E3 28 ( 0x1c )
BGM_TONE_E4 40 ( 0x28 )
BGM_TONE_E5 52 ( 0x34 )
BGM_TONE_E6 64 ( 0x40 )
BGM_TONE_E7 76 ( 0x4c )
BGM_TONE_E8 88 ( 0x58 )
BGM_TONE_F1 5 ( 0x5 )
BGM_TONE_F2 17 ( 0x11 )
BGM_TONE_F3 29 ( 0x1d )
BGM_TONE_F4 41 ( 0x29 )
BGM_TONE_F5 53 ( 0x35 )
BGM_TONE_F6 65 ( 0x41 )
BGM_TONE_F7 77 ( 0x4d )
BGM_TONE_F8 89 ( 0x59 )
BGM_TONE_FS1 6 ( 0x6 )
BGM_TONE_FS2 18 ( 0x12 )
BGM_TONE_FS3 30 ( 0x1e )
BGM_TONE_FS4 42 ( 0x2a )
BGM_TONE_FS5 54 ( 0x36 )
BGM_TONE_FS6 66 ( 0x42 )
BGM_TONE_FS7 78 ( 0x4e )
BGM_TONE_FS8 90 ( 0x5a )
BGM_TONE_G1 7 ( 0x7 )
BGM_TONE_G2 19 ( 0x13 )
BGM_TONE_G3 31 ( 0x1f )
BGM_TONE_G4 43 ( 0x2b )
BGM_TONE_G5 55 ( 0x37 )
BGM_TONE_G6 67 ( 0x43 )
BGM_TONE_G7 79 ( 0x4f )
BGM_TONE_G8 91 ( 0x5b )
BGM_TONE_GS1 8 ( 0x8 )
BGM_TONE_GS2 20 ( 0x14 )
BGM_TONE_GS3 32 ( 0x20 )
BGM_TONE_GS4 44 ( 0x2c )
BGM_TONE_GS5 56 ( 0x38 )
BGM_TONE_GS6 68 ( 0x44 )
BGM_TONE_GS7 80 ( 0x50 )
BGM_TONE_GS8 92 ( 0x5c )
BGM_VOL 103 ( 0x67 )
BG_BACKUP_TOP 42727 ( 0xa6e7 )
BIGCHAR_BG_MOVE_1 41716 ( 0xa2f4 )
BIGCHAR_BG_MOVE_2 42152 ( 0xa4a8 )
BIGCHAR_BG_MOVE_3 42250 ( 0xa50a )
BIGCHAR_BG_MOVE_4 42357 ( 0xa575 )
BIGCHAR_BG_MOVE_5 42449 ( 0xa5d1 )
BIGCHAR_BG_MOVE_6 42547 ( 0xa633 )
BIGCHAR_BG_MOVE_INTR1:BACKUP 42015 ( 0xa41f )
BIGCHAR_BG_MOVE_INTR1:BACKUP_COPY 42804 ( 0xa734 )
BIGCHAR_BG_MOVE_INTR1:BACKUP_COPY_DY 42810 ( 0xa73a )
BIGCHAR_BG_MOVE_INTR1:BACKUP_COPY_NY 42814 ( 0xa73e )
BIGCHAR_BG_MOVE_INTR1:BACKUP_COPY_SRC_PAGE 42807 ( 0xa737 )
BIGCHAR_BG_MOVE_INTR1:BACKUP_COPY_SY 42806 ( 0xa736 )
BIGCHAR_BG_MOVE_INTR1:BACKUP_SKIP 42037 ( 0xa435 )
BIGCHAR_BG_MOVE_INTR1:BACKUP_SKIP0 42052 ( 0xa444 )
BIGCHAR_BG_MOVE_INTR1:BIGCHAR_MOVE_STATE 42656 ( 0xa6a0 )
BIGCHAR_BG_MOVE_INTR1:BODY_A 42819 ( 0xa743 )
BIGCHAR_BG_MOVE_INTR1:BODY_A_DEST_PAGE 42826 ( 0xa74a )
BIGCHAR_BG_MOVE_INTR1:BODY_A_DY 42825 ( 0xa749 )
BIGCHAR_BG_MOVE_INTR1:BODY_A_IS_DIVIDED 42106 ( 0xa47a )
BIGCHAR_BG_MOVE_INTR1:BODY_A_IS_NOT_DIVIDED 42087 ( 0xa467 )
BIGCHAR_BG_MOVE_INTR1:BODY_A_NY 42829 ( 0xa74d )
BIGCHAR_BG_MOVE_INTR1:BODY_A_SY 42821 ( 0xa745 )
BIGCHAR_BG_MOVE_INTR1:BODY_B 42834 ( 0xa752 )
BIGCHAR_BG_MOVE_INTR1:BODY_B_DEST_PAGE 42841 ( 0xa759 )
BIGCHAR_BG_MOVE_INTR1:BODY_B_DY 42840 ( 0xa758 )
BIGCHAR_BG_MOVE_INTR1:BODY_B_IS_DIVIDED 42311 ( 0xa547 )
BIGCHAR_BG_MOVE_INTR1:BODY_B_IS_NOT_DIVIDED 42292 ( 0xa534 )
BIGCHAR_BG_MOVE_INTR1:BODY_B_NY 42844 ( 0xa75c )
BIGCHAR_BG_MOVE_INTR1:BODY_B_SY 42836 ( 0xa754 )
BIGCHAR_BG_MOVE_INTR1:BODY_C 42849 ( 0xa761 )
BIGCHAR_BG_MOVE_INTR1:BODY_C_DEST_PAGE 42856 ( 0xa768 )
BIGCHAR_BG_MOVE_INTR1:BODY_C_DY 42855 ( 0xa767 )
BIGCHAR_BG_MOVE_INTR1:BODY_C_IS_DIVIDED 42204 ( 0xa4dc )
BIGCHAR_BG_MOVE_INTR1:BODY_C_IS_NOT_DIVIDED 42185 ( 0xa4c9 )
BIGCHAR_BG_MOVE_INTR1:BODY_C_NY 42859 ( 0xa76b )
BIGCHAR_BG_MOVE_INTR1:BODY_C_SY 42851 ( 0xa763 )
BIGCHAR_BG_MOVE_INTR1:BODY_D 42879 ( 0xa77f )
BIGCHAR_BG_MOVE_INTR1:BODY_D_DEST_PAGE 42886 ( 0xa786 )
BIGCHAR_BG_MOVE_INTR1:BODY_D_DY 42885 ( 0xa785 )
BIGCHAR_BG_MOVE_INTR1:BODY_D_IS_DIVIDED 42403 ( 0xa5a3 )
BIGCHAR_BG_MOVE_INTR1:BODY_D_IS_NOT_DIVIDED 42384 ( 0xa590 )
BIGCHAR_BG_MOVE_INTR1:BODY_D_NY 42889 ( 0xa789 )
BIGCHAR_BG_MOVE_INTR1:BODY_D_SY 42881 ( 0xa781 )
BIGCHAR_BG_MOVE_INTR1:BODY_E 42894 ( 0xa78e )
BIGCHAR_BG_MOVE_INTR1:BODY_E_DEST_PAGE 42901 ( 0xa795 )
BIGCHAR_BG_MOVE_INTR1:BODY_E_DY 42900 ( 0xa794 )
BIGCHAR_BG_MOVE_INTR1:BODY_E_IS_DIVIDED 42599 ( 0xa667 )
BIGCHAR_BG_MOVE_INTR1:BODY_E_IS_NOT_DIVIDED 42580 ( 0xa654 )
BIGCHAR_BG_MOVE_INTR1:BODY_E_NY 42904 ( 0xa798 )
BIGCHAR_BG_MOVE_INTR1:BODY_E_SY 42896 ( 0xa790 )
BIGCHAR_BG_MOVE_INTR1:BODY_F 42864 ( 0xa770 )
BIGCHAR_BG_MOVE_INTR1:BODY_F_DEST_PAGE 42871 ( 0xa777 )
BIGCHAR_BG_MOVE_INTR1:BODY_F_DY 42870 ( 0xa776 )
BIGCHAR_BG_MOVE_INTR1:BODY_F_IS_DIVIDED 42501 ( 0xa605 )
BIGCHAR_BG_MOVE_INTR1:BODY_F_IS_NOT_DIVIDED 42482 ( 0xa5f2 )
BIGCHAR_BG_MOVE_INTR1:BODY_F_NY 42874 ( 0xa77a )
BIGCHAR_BG_MOVE_INTR1:BODY_F_SY 42866 ( 0xa772 )
BIGCHAR_BG_MOVE_INTR1:LINE_A_LEFT 42729 ( 0xa6e9 )
BIGCHAR_BG_MOVE_INTR1:LINE_A_LEFT_DEST_PAGE 42736 ( 0xa6f0 )
BIGCHAR_BG_MOVE_INTR1:LINE_A_LEFT_DY 42735 ( 0xa6ef )
BIGCHAR_BG_MOVE_INTR1:LINE_A_LEFT_NY 42739 ( 0xa6f3 )
BIGCHAR_BG_MOVE_INTR1:LINE_A_LEFT_SY 42731 ( 0xa6eb )
BIGCHAR_BG_MOVE_INTR1:LINE_A_RIGHT 42744 ( 0xa6f8 )
BIGCHAR_BG_MOVE_INTR1:LINE_A_RIGHT_DEST_PAGE 42751 ( 0xa6ff )
BIGCHAR_BG_MOVE_INTR1:LINE_A_RIGHT_DY 42750 ( 0xa6fe )
BIGCHAR_BG_MOVE_INTR1:LINE_A_RIGHT_NY 42754 ( 0xa702 )
BIGCHAR_BG_MOVE_INTR1:LINE_A_RIGHT_SY 42746 ( 0xa6fa )
BIGCHAR_BG_MOVE_INTR1:LINE_A_SKIP0 41799 ( 0xa347 )
BIGCHAR_BG_MOVE_INTR1:LINE_A_SKIP1 41833 ( 0xa369 )
BIGCHAR_BG_MOVE_INTR1:LINE_B_LEFT 42759 ( 0xa707 )
BIGCHAR_BG_MOVE_INTR1:LINE_B_LEFT_DEST_PAGE 42766 ( 0xa70e )
BIGCHAR_BG_MOVE_INTR1:LINE_B_LEFT_DY 42765 ( 0xa70d )
BIGCHAR_BG_MOVE_INTR1:LINE_B_LEFT_NY 42769 ( 0xa711 )
BIGCHAR_BG_MOVE_INTR1:LINE_B_LEFT_SY 42761 ( 0xa709 )
BIGCHAR_BG_MOVE_INTR1:LINE_B_RIGHT 42774 ( 0xa716 )
BIGCHAR_BG_MOVE_INTR1:LINE_B_RIGHT_DEST_PAGE 42781 ( 0xa71d )
BIGCHAR_BG_MOVE_INTR1:LINE_B_RIGHT_DY 42780 ( 0xa71c )
BIGCHAR_BG_MOVE_INTR1:LINE_B_RIGHT_NY 42784 ( 0xa720 )
BIGCHAR_BG_MOVE_INTR1:LINE_B_RIGHT_SY 42776 ( 0xa718 )
BIGCHAR_BG_MOVE_INTR1:LINE_B_SKIP0 41887 ( 0xa39f )
BIGCHAR_BG_MOVE_INTR1:LINE_B_SKIP1 41923 ( 0xa3c3 )
BIGCHAR_BG_MOVE_INTR1:LINE_C 42789 ( 0xa725 )
BIGCHAR_BG_MOVE_INTR1:LINE_C_DEST_PAGE 42796 ( 0xa72c )
BIGCHAR_BG_MOVE_INTR1:LINE_C_DY 42795 ( 0xa72b )
BIGCHAR_BG_MOVE_INTR1:LINE_C_NY 42799 ( 0xa72f )
BIGCHAR_BG_MOVE_INTR1:LINE_C_SKIP0 41974 ( 0xa3f6 )
BIGCHAR_BG_MOVE_INTR1:LINE_C_SKIP1 41998 ( 0xa40e )
BIGCHAR_BG_MOVE_INTR1:LINE_C_SY 42791 ( 0xa727 )
BIGCHAR_BG_MOVE_INTR1:PALETTE_BLINK 42664 ( 0xa6a8 )
BIGCHAR_BG_MOVE_INTR1:PALETTE_BLINK_RB 42720 ( 0xa6e0 )
BIGCHAR_BG_MOVE_INTR1:PALETTE_BLINK_RB_DIR 42721 ( 0xa6e1 )
BIGCHAR_BG_MOVE_INTR1:PALETTE_BLINK_SKIP 42709 ( 0xa6d5 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_1 42058 ( 0xa44a )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_3 42265 ( 0xa519 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_A 42058 ( 0xa44a )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_A_END 42151 ( 0xa4a7 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_B 42265 ( 0xa519 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_B_END 42356 ( 0xa574 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_C 42152 ( 0xa4a8 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_C_END 42249 ( 0xa509 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_D 42357 ( 0xa575 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_D_END 42448 ( 0xa5d0 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_E 42547 ( 0xa633 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_E_END 42644 ( 0xa694 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_F 42449 ( 0xa5d1 )
BIGCHAR_BG_MOVE_INTR1:PUT_BODY_F_END 42546 ( 0xa632 )
BIGCHAR_INITIALIZER 41531 ( 0xa23b )
BIGCHAR_SP_MOVE 41554 ( 0xa252 )
BIGCHAR_SP_MOVE:BIGCHAR_MOVE_STATE 41708 ( 0xa2ec )
BIGCHAR_SP_MOVE:END_OF_PUT_SPRITE 41698 ( 0xa2e2 )
BIGCHAR_Y 42722 ( 0xa6e2 )
BIGCHAR_Y_SP 42724 ( 0xa6e4 )
BIGCHAR_Y_VSCROLL 42726 ( 0xa6e6 )
CALATR 135 ( 0x87 )
CALBAS 345 ( 0x159 )
CALLF 48 ( 0x30 )
CALPAT 132 ( 0x84 )
CALSLT 28 ( 0x1c )
CHGCLR 98 ( 0x62 )
CHGMOD 95 ( 0x5f )
CHKDEV 330 ( 0x14a )
CHKRAM 0 ( 0x0 )
CHRGTR 16 ( 0x10 )
CLRSPR 105 ( 0x69 )
DCOMPR 32 ( 0x20 )
DISSCR 65 ( 0x41 )
DRAW_PAGE 48690 ( 0xbe32 )
ENASCR 71 ( 0x47 )
ENASLT 36 ( 0x24 )
END_ADDRESS 48693 ( 0xbe35 )
ENTRY_POINT 40960 ( 0xa000 )
ENTRY_POINT:LOOP 40963 ( 0xa003 )
EXBRSA 64248 ( 0xfaf8 )
EXPTBL0 64705 ( 0xfcc1 )
EXPTBL1 64706 ( 0xfcc2 )
EXPTBL2 64707 ( 0xfcc3 )
EXPTBL3 64708 ( 0xfcc4 )
EXTROM 351 ( 0x15f )
EXT_SLOT 65535 ( 0xffff )
FILVRM 86 ( 0x56 )
FIRST_FLAG 42728 ( 0xa6e8 )
FLAG_INITIALIZER 41345 ( 0xa181 )
FLAG_PROCESS 41355 ( 0xa18b )
FLAG_PROCESS:APPEAR_THE_FLAG 41461 ( 0xa1f5 )
FLAG_PROCESS:CHECK_CATCH_THE_FLAG_X 41414 ( 0xa1c6 )
FLAG_PROCESS:CHECK_CATCH_THE_FLAG_X_SKIP0 41427 ( 0xa1d3 )
FLAG_PROCESS:CHECK_CATCH_THE_FLAG_Y 41398 ( 0xa1b6 )
FLAG_PROCESS:CHECK_CATCH_THE_FLAG_Y_SKIP0 41411 ( 0xa1c3 )
FLAG_PROCESS:FLAG_ENABLE 41484 ( 0xa20c )
FLAG_PROCESS:FLAG_MOVE 41362 ( 0xa192 )
FLAG_PROCESS:FLAG_NORMAL_STATE 41377 ( 0xa1a1 )
FLAG_PROCESS:FLAG_WAIT 41448 ( 0xa1e8 )
FLAG_PROCESS:FLAG_WAIT_COUNTER 41483 ( 0xa20b )
FLAG_PROCESS:FLAG_X 41485 ( 0xa20d )
FLAG_PROCESS:FLAG_Y 41486 ( 0xa20e )
FLAG_PROCESS:INCREMENT_SCORE 41430 ( 0xa1d6 )
FLAG_PROCESS:NOT_ADJUST_RANDOM 41471 ( 0xa1ff )
FLAG_PROCESS:SE_GET_ITEM 41487 ( 0xa20f )
FLAG_SPRITE_COLOR1 46773 ( 0xb6b5 )
FLAG_SPRITE_PATTERN 46437 ( 0xb565 )
FORCLR 62441 ( 0xf3e9 )
FORMAT 327 ( 0x147 )
FREQ_DATA 48130 ( 0xbc02 )
GETYPR 40 ( 0x28 )
GICINI 144 ( 0x90 )
GRPDL 222 ( 0xde )
GRPPRT 141 ( 0x8d )
GSPSIZ 138 ( 0x8a )
GTPAD 219 ( 0xdb )
GTSTICK 213 ( 0xd5 )
GTTRIG 216 ( 0xd8 )
HIMEM 64586 ( 0xfc4a )
HISCORE 44334 ( 0xad2e )
HSYNC_INTERRUPT_1ST 45195 ( 0xb08b )
HSYNC_INTERRUPT_2ND 45188 ( 0xb084 )
HSYNC_INTERRUPT_ADDRESS 45182 ( 0xb07e )
HSYNC_INTR_ADJUST 3 ( 0x3 )
H_KEYI 64922 ( 0xfd9a )
H_KEYI_INTERRUPT_HANDLER 45161 ( 0xb069 )
H_KEYI_INTERRUPT_HANDLER:SET_DISPLAY_PAGE 45206 ( 0xb096 )
H_KEYI_NEXT 45239 ( 0xb0b7 )
H_PHYD 65447 ( 0xffa7 )
H_TIMI 64927 ( 0xfd9f )
H_TIMI_INTERRUPT_HANDLER 45116 ( 0xb03c )
H_TIMI_INTERRUPT_HANDLER:VSYNC_FLAG_SKIP 45156 ( 0xb064 )
H_TIMI_INTERRUPT_HANDLER_FOR_TITLE 45106 ( 0xb032 )
H_TIMI_NEXT 45156 ( 0xb064 )
INFO_EFF_FREQ_H 5 ( 0x5 )
INFO_EFF_FREQ_L 4 ( 0x4 )
INFO_EFF_VOL 8 ( 0x8 )
INFO_ENV_STATE 11 ( 0xb )
INFO_ENV_VOL 12 ( 0xc )
INFO_NOISE_FREQ 16 ( 0x10 )
INFO_PLAY_ADR_H 1 ( 0x1 )
INFO_PLAY_ADR_L 0 ( 0x0 )
INFO_SEL_SFONT_H 18 ( 0x12 )
INFO_SEL_SFONT_L 17 ( 0x11 )
INFO_SIZE 19 ( 0x13 )
INFO_SOUND_FONT_H 15 ( 0xf )
INFO_SOUND_FONT_L 14 ( 0xe )
INFO_TONE_FREQ_H 7 ( 0x7 )
INFO_TONE_FREQ_L 6 ( 0x6 )
INFO_TONE_VOL 9 ( 0x9 )
INFO_VIB_INDEX 13 ( 0xd )
INFO_VIB_WAIT 10 ( 0xa )
INFO_WAIT_COUNT_H 3 ( 0x3 )
INFO_WAIT_COUNT_L 2 ( 0x2 )
INIFNK 62 ( 0x3e )
INIGRP 114 ( 0x72 )
INIMLT 117 ( 0x75 )
INIT32 111 ( 0x6f )
INITIALIZER 40972 ( 0xa00c )
INITIO 59 ( 0x3b )
INITTXT 108 ( 0x6c )
INTERRUPT_INITIALIZER 44956 ( 0xaf9c )
IO_BASE_SLOT 168 ( 0xa8 )
IO_MEMMAP0 252 ( 0xfc )
IO_MEMMAP1 253 ( 0xfd )
IO_MEMMAP2 254 ( 0xfe )
IO_MEMMAP3 255 ( 0xff )
IO_PSG_ADR 160 ( 0xa0 )
IO_PSG_DATA_RD 162 ( 0xa2 )
IO_PSG_DATA_WR 161 ( 0xa1 )
IO_VDP_PORT0 152 ( 0x98 )
IO_VDP_PORT0_MSX1_ADP 136 ( 0x88 )
IO_VDP_PORT1 153 ( 0x99 )
IO_VDP_PORT1_MSX1_ADP 137 ( 0x89 )
IO_VDP_PORT2 154 ( 0x9a )
IO_VDP_PORT2_MSX1_ADP 138 ( 0x8a )
IO_VDP_PORT3 155 ( 0x9b )
IO_VDP_PORT3_MSX1_ADP 139 ( 0x8b )
KEYINT 56 ( 0x38 )
KILBUF 342 ( 0x156 )
LDIRMV 89 ( 0x59 )
LDIRVM 92 ( 0x5c )
MAIN_INTERRUPT_INITIALIZER 45062 ( 0xb006 )
MAIN_LOOP 41095 ( 0xa087 )
MAIN_PHASE 41031 ( 0xa047 )
MAIN_PHASE:SKIP_VSCROLL 41119 ( 0xa09f )
MAIN_PHASE:WAIT_VSYNC 41188 ( 0xa0e4 )
NMI 102 ( 0x66 )
NUMBER_OF_SHOTS 32 ( 0x20 )
OUTDO 24 ( 0x18 )
PHYDIO 324 ( 0x144 )
PLAYER_INITIALIZER 41200 ( 0xa0f0 )
PLAYER_IS_CRASHED 41344 ( 0xa180 )
PLAYER_MOVE 41215 ( 0xa0ff )
PLAYER_MOVE:CLASHED_EFFECT 41299 ( 0xa153 )
PLAYER_MOVE:CLASHED_EFFECT_BLIND 41319 ( 0xa167 )
PLAYER_MOVE:DIRECTION_X_TABLE 41333 ( 0xa175 )
PLAYER_MOVE:DIRECTION_Y_TABLE 41324 ( 0xa16c )
PLAYER_MOVE:PUT_PLAYER 41290 ( 0xa14a )
PLAYER_MOVE:SKIP0 41254 ( 0xa126 )
PLAYER_MOVE:SKIP1 41261 ( 0xa12d )
PLAYER_MOVE:SKIP2 41279 ( 0xa13f )
PLAYER_MOVE:SKIP3 41286 ( 0xa146 )
PLAYER_SPRITE_COLOR1 46469 ( 0xb585 )
PLAYER_SPRITE_COLOR2 46485 ( 0xb595 )
PLAYER_SPRITE_PATTERN1 45829 ( 0xb305 )
PLAYER_SPRITE_PATTERN2 45861 ( 0xb325 )
PLAYER_X 41343 ( 0xa17f )
PLAYER_Y 41342 ( 0xa17e )
PLAY_BGM_DATA_ADR 48332 ( 0xbccc )
PLAY_DRUM_FONT1 48337 ( 0xbcd1 )
PLAY_DRUM_FONT2 48339 ( 0xbcd3 )
PLAY_DRUM_FONT3 48341 ( 0xbcd5 )
PLAY_DRUM_FONT4 48343 ( 0xbcd7 )
PLAY_DRUM_FONT5 48345 ( 0xbcd9 )
PLAY_INFO_CH0 48347 ( 0xbcdb )
PLAY_INFO_CH1 48366 ( 0xbcee )
PLAY_INFO_CH2 48385 ( 0xbd01 )
PLAY_MASTER_VOLUME 48336 ( 0xbcd0 )
PLAY_MASTER_VOLUME_SPEED 48335 ( 0xbccf )
PLAY_MASTER_VOLUME_WAIT 48334 ( 0xbcce )
PLAY_NOISE_FREQ 48331 ( 0xbccb )
PLAY_SOUND_EFFECT_ACTIVE 48322 ( 0xbcc2 )
PLAY_SOUND_EFFECT_ADR 48328 ( 0xbcc8 )
PLAY_SOUND_EFFECT_FREQ 48324 ( 0xbcc4 )
PLAY_SOUND_EFFECT_NOISE_FREQ 48326 ( 0xbcc6 )
PLAY_SOUND_EFFECT_PRIORITY 48330 ( 0xbcca )
PLAY_SOUND_EFFECT_VOLUME 48327 ( 0xbcc7 )
PLAY_SOUND_EFFECT_WAIT_COUNT 48323 ( 0xbcc3 )
PRINTC 333 ( 0x14d )
PSG_REG_ADR 160 ( 0xa0 )
PSG_REG_WRT 161 ( 0xa1 )
PUT_SCORE 44135 ( 0xac67 )
PUT_SCORE:BINARY_SEARCH_TABLE 44341 ( 0xad35 )
PUT_SCORE:CAPTURED_SCORE 44337 ( 0xad31 )
PUT_SCORE:DO_OTHER_STATE 44204 ( 0xacac )
PUT_SCORE:DO_STATE0 44184 ( 0xac98 )
PUT_SCORE:DO_STATE5 44147 ( 0xac73 )
PUT_SCORE:DO_STATE5_SKIP0 44164 ( 0xac84 )
PUT_SCORE:GET_DIGIT 44253 ( 0xacdd )
PUT_SCORE:PARTS 44381 ( 0xad5d )
PUT_SCORE:PARTS_DX 44385 ( 0xad61 )
PUT_SCORE:PARTS_SX 44381 ( 0xad5d )
PUT_SCORE:PUT_SCORE_INITIALIZER_LOOP 44125 ( 0xac5d )
PUT_SCORE:SKIP0_NO 44268 ( 0xacec )
PUT_SCORE:SKIP0_YES 44270 ( 0xacee )
PUT_SCORE:SKIP1_NO 44286 ( 0xacfe )
PUT_SCORE:SKIP1_YES 44289 ( 0xad01 )
PUT_SCORE:SKIP2_NO 44305 ( 0xad11 )
PUT_SCORE:SKIP2_YES 44307 ( 0xad13 )
PUT_SCORE:SKIP3_NO 44323 ( 0xad23 )
PUT_SCORE:SKIP3_YES 44324 ( 0xad24 )
PUT_SCORE:STATE 44336 ( 0xad30 )
PUT_SCORE:TABLE_PTR 44339 ( 0xad33 )
PUT_SCORE_INITIALIZER 44119 ( 0xac57 )
RANDOM 45244 ( 0xb0bc )
RANDOM:RANDOM_SEED1 45265 ( 0xb0d1 )
RANDOM:RANDOM_SEED2 45266 ( 0xb0d2 )
RDPSG 150 ( 0x96 )
RDSLT 12 ( 0xc )
RDVRM 74 ( 0x4a )
REG0SAV 62431 ( 0xf3df )
REG10SAV 65513 ( 0xffe9 )
REG11SAV 65514 ( 0xffea )
REG12SAV 65515 ( 0xffeb )
REG13SAV 65516 ( 0xffec )
REG14SAV 65517 ( 0xffed )
REG15SAV 65518 ( 0xffee )
REG16SAV 65519 ( 0xffef )
REG17SAV 65520 ( 0xfff0 )
REG18SAV 65521 ( 0xfff1 )
REG19SAV 65522 ( 0xfff2 )
REG1SAV 62432 ( 0xf3e0 )
REG20SAV 65523 ( 0xfff3 )
REG21SAV 65524 ( 0xfff4 )
REG22SAV 65525 ( 0xfff5 )
REG23SAV 65526 ( 0xfff6 )
REG25SAV 65528 ( 0xfff8 )
REG26SAV 65529 ( 0xfff9 )
REG27SAV 65530 ( 0xfffa )
REG2SAV 62433 ( 0xf3e1 )
REG3SAV 62434 ( 0xf3e2 )
REG4SAV 62435 ( 0xf3e3 )
REG5SAV 62436 ( 0xf3e4 )
REG6SAV 62437 ( 0xf3e5 )
REG7SAV 62438 ( 0xf3e6 )
REG8SAV 65511 ( 0xffe7 )
REG9SAV 65512 ( 0xffe8 )
RUN_VDP_COMMAND 44911 ( 0xaf6f )
SC0_W40_PAT_GEN 2048 ( 0x800 )
SC0_W40_PAT_NAME 0 ( 0x0 )
SC0_W80_BLINK 2048 ( 0x800 )
SC0_W80_PAT_GEN 4096 ( 0x1000 )
SC0_W80_PAT_NAME 0 ( 0x0 )
SC1_PAT_GEN 0 ( 0x0 )
SC1_PAT_NAME 6144 ( 0x1800 )
SC1_SPR_ATTR 6912 ( 0x1b00 )
SC1_SPR_GEN 14336 ( 0x3800 )
SC2_PAT_COL0 8192 ( 0x2000 )
SC2_PAT_COL1 10240 ( 0x2800 )
SC2_PAT_COL2 12288 ( 0x3000 )
SC2_PAT_GEN0 0 ( 0x0 )
SC2_PAT_GEN1 2048 ( 0x800 )
SC2_PAT_GEN2 4096 ( 0x1000 )
SC2_PAT_NAME 6144 ( 0x1800 )
SC2_SPR_ATTR 6912 ( 0x1b00 )
SC2_SPR_GEN 14336 ( 0x3800 )
SC3_PAT_GEN 0 ( 0x0 )
SC3_PAT_NAME 2048 ( 0x800 )
SC3_SPR_ATTR 6912 ( 0x1b00 )
SC3_SPR_GEN 14336 ( 0x3800 )
SC4_PAT_COL0 8192 ( 0x2000 )
SC4_PAT_COL1 10240 ( 0x2800 )
SC4_PAT_COL2 12288 ( 0x3000 )
SC4_PAT_GEN0 0 ( 0x0 )
SC4_PAT_GEN1 2048 ( 0x800 )
SC4_PAT_GEN2 4096 ( 0x1000 )
SC4_PAT_NAME 6144 ( 0x1800 )
SC4_SPR_ATTR 7680 ( 0x1e00 )
SC4_SPR_COL 7168 ( 0x1c00 )
SC4_SPR_GEN 14336 ( 0x3800 )
SC5_PAT_NAME 0 ( 0x0 )
SC5_SPR_ATTR 30208 ( 0x7600 )
SC5_SPR_COL 29696 ( 0x7400 )
SC5_SPR_GEN 30720 ( 0x7800 )
SC6_PAT_NAME 0 ( 0x0 )
SC6_SPR_ATTR 30208 ( 0x7600 )
SC6_SPR_COL 29696 ( 0x7400 )
SC6_SPR_GEN 30720 ( 0x7800 )
SCORE 44332 ( 0xad2c )
SCRMOD 64687 ( 0xfcaf )
SD_BEGIN_FRAME 45320 ( 0xb108 )
SD_CHANGE_ATTRIBUTE0 45371 ( 0xb13b )
SD_CHANGE_ATTRIBUTE1 45390 ( 0xb14e )
SD_CHANGE_ATTRIBUTE2 45413 ( 0xb165 )
SD_FINALIZE 45784 ( 0xb2d8 )
SD_INITIALIZER 45267 ( 0xb0d3 )
SD_PUT_SPRITE_PAIR 45424 ( 0xb170 )
SD_PUT_SPRITE_SINGLE 45625 ( 0xb239 )
SETGRP 126 ( 0x7e )
SETMLT 129 ( 0x81 )
SETRD 80 ( 0x50 )
SETT32 123 ( 0x7b )
SETTXT 120 ( 0x78 )
SETWRT 83 ( 0x53 )
SET_VRAM_ADDRESS 44946 ( 0xaf92 )
SFONT_AR 32 ( 0x20 )
SFONT_DR 33 ( 0x21 )
SFONT_FREQ_H 40 ( 0x28 )
SFONT_FREQ_L 39 ( 0x27 )
SFONT_NOISE 38 ( 0x26 )
SFONT_RR 36 ( 0x24 )
SFONT_SL 34 ( 0x22 )
SFONT_SR 35 ( 0x23 )
SFONT_VIB_WAIT 37 ( 0x25 )
SFONT_VIB_WAVE 0 ( 0x0 )
SHOT_INITIALIZER 42909 ( 0xa79d )
SHOT_PROCESS 42934 ( 0xa7b6 )
SHOT_PROCESS:@REPEAT1:I 31 ( 0x1f )
SHOT_PROCESS:APPEAR_DIRECT_SHOT 43219 ( 0xa8d3 )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_ABS_DX 43239 ( 0xa8e7 )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_ABS_DX_PLUS 43246 ( 0xa8ee )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_ABS_DY 43263 ( 0xa8ff )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_ABS_DY_PLUS 43270 ( 0xa906 )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_CALC_VECTOR 43283 ( 0xa913 )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_CALC_VECTOR_EXIT 43297 ( 0xa921 )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_GET_DX 43223 ( 0xa8d7 )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_GET_DY 43247 ( 0xa8ef )
SHOT_PROCESS:APPEAR_DIRECT_SHOT_GT_DY 43275 ( 0xa90b )
SHOT_PROCESS:APPEAR_ROUND_SHOT 43179 ( 0xa8ab )
SHOT_PROCESS:CHECK_CRASH_X 43061 ( 0xa835 )
SHOT_PROCESS:CHECK_CRASH_X_SKIP0 43073 ( 0xa841 )
SHOT_PROCESS:CHECK_CRASH_Y 43043 ( 0xa823 )
SHOT_PROCESS:CHECK_CRASH_Y_SKIP0 43056 ( 0xa830 )
SHOT_PROCESS:COS_SIN_TABLE 43639 ( 0xaa77 )
SHOT_PROCESS:CRASH 43117 ( 0xa86d )
SHOT_PROCESS:EXIT_CRASH 43078 ( 0xa846 )
SHOT_PROCESS:PREPARE_NEXT_FRAME 43096 ( 0xa858 )
SHOT_PROCESS:PREPARE_NEXT_FRAME_SKIP 43103 ( 0xa85f )
SHOT_PROCESS:PUT_NEW_SHOT 43155 ( 0xa893 )
SHOT_PROCESS:PUT_SHOT 43033 ( 0xa819 )
SHOT_PROCESS:PUT_SHOT_EXIT 43043 ( 0xa823 )
SHOT_PROCESS:PUT_SHOT_SKIP 43092 ( 0xa854 )
SHOT_PROCESS:SA_DELTA_X 1 ( 0x1 )
SHOT_PROCESS:SA_DELTA_Y 5 ( 0x5 )
SHOT_PROCESS:SA_ENABLE 0 ( 0x0 )
SHOT_PROCESS:SA_SIZE 9 ( 0x9 )
SHOT_PROCESS:SA_X_POSITION 3 ( 0x3 )
SHOT_PROCESS:SA_Y_POSITION 7 ( 0x7 )
SHOT_PROCESS:SET_APPEAR_POSITION 43308 ( 0xa92c )
SHOT_PROCESS:SE_CRASH 43703 ( 0xaab7 )
SHOT_PROCESS:SHOT_APPEAR_TIMING 43628 ( 0xaa6c )
SHOT_PROCESS:SHOT_APPEAR_TIMING_SPEED 43629 ( 0xaa6d )
SHOT_PROCESS:SHOT_IS_DISABLE 43141 ( 0xa885 )
SHOT_PROCESS:SHOT_ONE_PROCESS 42966 ( 0xa7d6 )
SHOT_PROCESS:SHOT_SILENCE 43307 ( 0xa92b )
SHOT_PROCESS:SHOT_START_TABLE 43631 ( 0xaa6f )
SHOT_PROCESS:SHOT_TABLE 43339 ( 0xa94b )
SHOT_PROCESS:SHOT_TYPE 43630 ( 0xaa6e )
SHOT_PROCESS:SKIP_SHOT_APPEAR_TIMING 42957 ( 0xa7cd )
SHOT_ROUND_ROBIN 43627 ( 0xaa6b )
SPRITE_ATTRIBUTE_TABLE0 126464 ( 0x1ee00 )
SPRITE_ATTRIBUTE_TABLE1 127488 ( 0x1f200 )
SPRITE_ATTRIBUTE_TABLE2 128512 ( 0x1f600 )
SPRITE_COLOR_TABLE1 126976 ( 0x1f000 )
SPRITE_COLOR_TABLE2 128000 ( 0x1f400 )
SPRITE_DOUBLER:SD_FINALIZE:SKIP_PUT_UPPER 45802 ( 0xb2ea )
SPRITE_DOUBLER:SD_PUT_SPRITE_PAIR:PUT_LOWER 45532 ( 0xb1dc )
SPRITE_DOUBLER:SD_PUT_SPRITE_PAIR:PUT_LOWER_S1 45562 ( 0xb1fa )
SPRITE_DOUBLER:SD_PUT_SPRITE_PAIR:PUT_UPPER 45430 ( 0xb176 )
SPRITE_DOUBLER:SD_PUT_SPRITE_PAIR:PUT_UPPER_S1 45463 ( 0xb197 )
SPRITE_DOUBLER:SD_PUT_SPRITE_PAIR:SKIP_PUT_UPPER 45528 ( 0xb1d8 )
SPRITE_DOUBLER:SD_PUT_SPRITE_SINGLE:PUT_LOWER 45712 ( 0xb290 )
SPRITE_DOUBLER:SD_PUT_SPRITE_SINGLE:PUT_LOWER_S1 45741 ( 0xb2ad )
SPRITE_DOUBLER:SD_PUT_SPRITE_SINGLE:PUT_UPPER 45631 ( 0xb23f )
SPRITE_DOUBLER:SD_PUT_SPRITE_SINGLE:PUT_UPPER_S1 45663 ( 0xb25f )
SPRITE_DOUBLER:SD_PUT_SPRITE_SINGLE:SKIP_PUT_UPPER 45708 ( 0xb28c )
SPRITE_DOUBLER:SPRITE_ATTRIBUTE_TABLE1_PTR 45825 ( 0xb301 )
SPRITE_DOUBLER:SPRITE_ATTRIBUTE_TABLE2_PTR 45827 ( 0xb303 )
SPRITE_DOUBLER:SPRITE_COLOR_TABLE1_PTR 45821 ( 0xb2fd )
SPRITE_DOUBLER:SPRITE_COLOR_TABLE2_PTR 45823 ( 0xb2ff )
SPRITE_DOUBLER:SPRITE_COUNT1 45819 ( 0xb2fb )
SPRITE_DOUBLER:SPRITE_COUNT2 45820 ( 0xb2fc )
SPRITE_HIDE_LINE 216 ( 0xd8 )
SPRITE_PATTERN_GENERATOR_TABLE 129024 ( 0x1f800 )
START_ADDRESS 40960 ( 0xa000 )
STATFL 62439 ( 0xf3e7 )
STRTMS 153 ( 0x99 )
SUBROM 348 ( 0x15c )
SYNCHR 8 ( 0x8 )
TITLE_INTERRUPT_INITIALIZER 45009 ( 0xafd1 )
TITLE_PHASE 41024 ( 0xa040 )
TITLE_PROCESS 44396 ( 0xad6c )
TITLE_PROCESS:BLINK_PUSH_TRIGGER 44751 ( 0xaecf )
TITLE_PROCESS:BLINK_PUSH_TRIGGER_FLAG 44752 ( 0xaed0 )
TITLE_PROCESS:CLEAR_SCREEN 44828 ( 0xaf1c )
TITLE_PROCESS:DRAW_PUSH_TRIGGER 44737 ( 0xaec1 )
TITLE_PROCESS:ERASE_PUSH_TRIGGER 44735 ( 0xaebf )
TITLE_PROCESS:MAKE_UP_TITLE_LOGO_LOOP1 44469 ( 0xadb5 )
TITLE_PROCESS:MAKE_UP_TITLE_LOGO_LOOP2 44524 ( 0xadec )
TITLE_PROCESS:PUSH_TRIGGER_COPY 44813 ( 0xaf0d )
TITLE_PROCESS:PUSH_TRIGGER_COPY_CMD 44827 ( 0xaf1b )
TITLE_PROCESS:SCORE_COPY 44798 ( 0xaefe )
TITLE_PROCESS:SE_START 44843 ( 0xaf2b )
TITLE_PROCESS:SKIP_BLINK_PUSH_TRIGGER 44637 ( 0xae5d )
TITLE_PROCESS:TITLE_FINALIZE 44674 ( 0xae82 )
TITLE_PROCESS:TITLE_FINALIZE_LOOP 44682 ( 0xae8a )
TITLE_PROCESS:TITLE_LOGO_COPY1 44753 ( 0xaed1 )
TITLE_PROCESS:TITLE_LOGO_COPY1_DX 44757 ( 0xaed5 )
TITLE_PROCESS:TITLE_LOGO_COPY1_SX 44753 ( 0xaed1 )
TITLE_PROCESS:TITLE_LOGO_COPY2 44768 ( 0xaee0 )
TITLE_PROCESS:TITLE_LOGO_COPY2_DY 44774 ( 0xaee6 )
TITLE_PROCESS:TITLE_LOGO_COPY2_SY 44770 ( 0xaee2 )
TITLE_PROCESS:TITLE_LOGO_COPY3 44783 ( 0xaeef )
TITLE_PROCESS:TITLE_LOGO_COPY3_DX 44787 ( 0xaef3 )
TITLE_PROCESS:TITLE_LOOP 44595 ( 0xae33 )
TITLE_PROCESS:TITLE_LOOP_SKIP 44662 ( 0xae76 )
TITLE_PROCESS:TITLE_WAIT 44708 ( 0xaea4 )
TITLE_PROCESS:TITLE_WAIT_FLAG 44750 ( 0xaece )
TITLE_PROCESS:UPDATE_PUSH_TRIGGER 44719 ( 0xaeaf )
TITLE_TICK 44668 ( 0xae7c )
VDPCMD_HMMC 240 ( 0xf0 )
VDPCMD_HMMM 208 ( 0xd0 )
VDPCMD_HMMV 192 ( 0xc0 )
VDPCMD_LINE 112 ( 0x70 )
VDPCMD_LMCM 160 ( 0xa0 )
VDPCMD_LMMC 176 ( 0xb0 )
VDPCMD_LMMM 144 ( 0x90 )
VDPCMD_LMMV 128 ( 0x80 )
VDPCMD_POINT 64 ( 0x40 )
VDPCMD_PSET 80 ( 0x50 )
VDPCMD_SRCH 96 ( 0x60 )
VDPCMD_STOP 0 ( 0x0 )
VDPCMD_YMMM 224 ( 0xe0 )
VDPROP_AND 1 ( 0x1 )
VDPROP_EOR 17 ( 0x11 )
VDPROP_IMP 0 ( 0x0 )
VDPROP_NOT 256 ( 0x100 )
VDPROP_OR 16 ( 0x10 )
VDPROP_TAND 4097 ( 0x1001 )
VDPROP_TEOR 4113 ( 0x1011 )
VDPROP_TIMP 4096 ( 0x1000 )
VDPROP_TNOT 4352 ( 0x1100 )
VDPROP_TOR 4112 ( 0x1010 )
VSCROLL 48688 ( 0xbe30 )
VSCROLL_NEXT 48689 ( 0xbe31 )
VSCROLL_SP 48689 ( 0xbe31 )
VSYNC_FLAG 48691 ( 0xbe33 )
WAIT_VDP_COMMAND 44927 ( 0xaf7f )
WAIT_VDP_COMMAND:LOOP 44927 ( 0xaf7f )
WRSLT 20 ( 0x14 )
WRTPSG 147 ( 0x93 )
WRVRM 77 ( 0x4d )
